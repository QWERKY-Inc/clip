[{"/Users/bernardahn/Documents/GitHub/clip/src/reportWebVitals.js":"1","/Users/bernardahn/Documents/GitHub/clip/src/components/Content.js":"2","/Users/bernardahn/Documents/GitHub/clip/src/components/Navbar.js":"3","/Users/bernardahn/Documents/GitHub/clip/src/App.js":"4","/Users/bernardahn/Documents/GitHub/clip/src/index.js":"5","/Users/bernardahn/Documents/GitHub/clip/src/components/Home.js":"6","/Users/bernardahn/Documents/GitHub/clip/src/components/Category.js":"7","/Users/bernardahn/Documents/GitHub/clip/src/components/IntroImage.js":"8","/Users/bernardahn/Documents/GitHub/clip/src/components/NavBarFiller.js":"9","/Users/bernardahn/Documents/GitHub/clip/src/components/ConstructionPart.js":"10","/Users/bernardahn/Documents/GitHub/clip/src/components/Brands.js":"11","/Users/bernardahn/Documents/GitHub/clip/src/components/MainMaterialCategory.js":"12","/Users/bernardahn/Documents/GitHub/clip/src/components/MainMoodBoard.js":"13","/Users/bernardahn/Documents/GitHub/clip/src/components/Footer.js":"14","/Users/bernardahn/Documents/GitHub/clip/src/components/PrivacyPolicy.js":"15","/Users/bernardahn/Documents/GitHub/clip/src/components/Terms.js":"16","/Users/bernardahn/Documents/GitHub/clip/src/components/BrandsDropDown.js":"17","/Users/bernardahn/Documents/GitHub/clip/src/components/CategoryDropDown.js":"18","/Users/bernardahn/Documents/GitHub/clip/src/components/SearchPage.js":"19","/Users/bernardahn/Documents/GitHub/clip/src/components/UseDropDown.js":"20","/Users/bernardahn/Documents/GitHub/clip/src/components/Pagination.js":"21","/Users/bernardahn/Documents/GitHub/clip/src/components/PartDetail.js":"22","/Users/bernardahn/Documents/GitHub/clip/src/components/ClipBoard.js":"23","/Users/bernardahn/Documents/GitHub/clip/src/components/MoodboardDetail.js":"24","/Users/bernardahn/Documents/GitHub/clip/src/components/MoodClipBoard.js":"25","/Users/bernardahn/Documents/GitHub/clip/src/components/AddToShoppingCart.js":"26","/Users/bernardahn/Documents/GitHub/clip/src/components/LogOut.js":"27","/Users/bernardahn/Documents/GitHub/clip/src/components/LogIn.js":"28","/Users/bernardahn/Documents/GitHub/clip/src/components/WrongLogIn.js":"29","/Users/bernardahn/Documents/GitHub/clip/src/components/KakaoAuth.js":"30","/Users/bernardahn/Documents/GitHub/clip/src/components/NoExistMember.js":"31","/Users/bernardahn/Documents/GitHub/clip/src/components/SentMessage.js":"32"},{"size":362,"mtime":1610324185434,"results":"33","hashOfConfig":"34"},{"size":2155,"mtime":1610430110009,"results":"35","hashOfConfig":"34"},{"size":84955,"mtime":1616045384361,"results":"36","hashOfConfig":"34"},{"size":1872,"mtime":1613965462437,"results":"37","hashOfConfig":"34"},{"size":587,"mtime":1610418309440,"results":"38","hashOfConfig":"34"},{"size":537,"mtime":1610937365679,"results":"39","hashOfConfig":"34"},{"size":1130,"mtime":1610686358746,"results":"40","hashOfConfig":"34"},{"size":7803,"mtime":1615423416824,"results":"41","hashOfConfig":"34"},{"size":227,"mtime":1610928711960,"results":"42","hashOfConfig":"34"},{"size":456,"mtime":1610430511826,"results":"43","hashOfConfig":"34"},{"size":69913,"mtime":1614235680498,"results":"44","hashOfConfig":"34"},{"size":32375,"mtime":1614222584041,"results":"45","hashOfConfig":"34"},{"size":53062,"mtime":1614223282906,"results":"46","hashOfConfig":"34"},{"size":13239,"mtime":1610951758624,"results":"47","hashOfConfig":"34"},{"size":59285,"mtime":1611212091248,"results":"48","hashOfConfig":"34"},{"size":13907,"mtime":1611212103226,"results":"49","hashOfConfig":"34"},{"size":6276,"mtime":1612154645614,"results":"50","hashOfConfig":"34"},{"size":8332,"mtime":1612247031407,"results":"51","hashOfConfig":"34"},{"size":98845,"mtime":1615561433153,"results":"52","hashOfConfig":"34"},{"size":8055,"mtime":1612748989369,"results":"53","hashOfConfig":"34"},{"size":6422,"mtime":1614234108020,"results":"54","hashOfConfig":"34"},{"size":57781,"mtime":1615769410920,"results":"55","hashOfConfig":"34"},{"size":34552,"mtime":1614047666337,"results":"56","hashOfConfig":"34"},{"size":78082,"mtime":1614233809886,"results":"57","hashOfConfig":"34"},{"size":33835,"mtime":1614056809132,"results":"58","hashOfConfig":"34"},{"size":65360,"mtime":1615182504765,"results":"59","hashOfConfig":"34"},{"size":5325,"mtime":1614839230727,"results":"60","hashOfConfig":"34"},{"size":83466,"mtime":1616120269327,"results":"61","hashOfConfig":"34"},{"size":5720,"mtime":1616116265832,"results":"62","hashOfConfig":"34"},{"size":1609,"mtime":1615778453742,"results":"63","hashOfConfig":"34"},{"size":5728,"mtime":1615778672219,"results":"64","hashOfConfig":"34"},{"size":5787,"mtime":1615778774954,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lkszav",{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":67,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"76","usedDeprecatedRules":"71"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"79"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"71"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"79"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"79"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"83"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"79"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"79"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"83"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"79"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"71"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":98,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"79"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"79"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":53,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"79"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"79"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/bernardahn/Documents/GitHub/clip/src/reportWebVitals.js",[],"/Users/bernardahn/Documents/GitHub/clip/src/components/Content.js",["156","157","158","159","160","161"],"import React from 'react';\nimport IntroImg from '../assets/introImage.png';\nimport icon1 from '../assets/icon1.svg'\nimport icon2 from '../assets/icon2.svg'\nimport icon3 from '../assets/icon3.svg'\nimport './content.css';\n\n\n\nconst Content=() => {\n\tconst filler=(\n\t\t<div className=\"headerFiller\">\n\t\t</div>\n\t)\n\tconst introImage=(\n\t\t<div className=\"introImage\">\n\t\t\t<div id=\"introImageDiv\">\n\t\t\t\t<img id=\"introImage\" src={IntroImg} alt=\"Logo\" title=\"Logo\" >\n\t\t\t\t</img>\n\t\t\t\t{/* <div id=\"introduction\">\n\t\t\t\t\t<p className=\"titleFont introText\">온라인 자재 라이브러리</p>\n\t\t\t\t\t<p className=\"regularFont introText\">쉽고 빠르게 자재를 찾아보고</p>\n\t\t\t\t\t<p className=\"regularFont introText\">샘플을 받아볼 수 있는 방법!</p>\n\t\t\t\t\t<p className=\"regularFont introText\">디자인 전문가라면 언제나 무료!</p>\n\t\t\t\t</div> */}\n\t\t\t</div>\n\t\t</div>\n\t)\n\tconst howItWorks=(\n\t\t<div className=\"howItWorksDiv\">\n\t\t\t<p className=\"titleFont\">다양한 자재를 검색하고, 다음날 오전까지 샘플을 받아보세요!</p>\n\t\t\t<div>\n\t\t\t\t<button id=\"howItWorksLink\">사용방법</button>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<div className='howToIconsDiv'>\n\t\t\t\t\t<img className='howToIcons'src={icon1}></img>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<p className=\"subTitleFont\">쉽고 간편하게 검색</p>\n\t\t\t<p className=\"regularFont\">국내 및 해외 건축 인테리어 브랜드 및 자재를 한곳에서 쉽고 빠르게 검색해보세요.</p>\n\t\t\t<img className='howToIcons'src={icon2}></img>\n\t\t\t<p className=\"subTitleFont\">샘플을 주문하면</p>\n\t\t\t<p className=\"regularFont\">프로젝트에 필요한 샘플을 장바구니에 담고 주문하세요.</p>\n\t\t\t<img className='howToIcons'src={icon3}></img>\n\t\t\t<p className=\"subTitleFont\">한박스로 당일발송</p>\n\t\t\t<p className=\"regularFont\">주문한 샘플은 당일발송 됩니다. (영업일 기준 1-2일 배송완료)</p>\n\n\t\t</div>\n\t)\n\t\n  const data=(\n  \t<div className=\"box\">\n  \t\t<h2>temporary filler</h2>\n  \t</div>\n  )\n\n  return (\n    <main className=\"content\">\n\t\t{/* {filler}\n\t\t{introImage} */}\n\t\t{/* {howItWorks} */}\n\t    {data}\n\t    {data}\n\t\t{data}\n    </main>\n  )\n}\n\nexport default Content;",["162","163"],"/Users/bernardahn/Documents/GitHub/clip/src/components/Navbar.js",["164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230"],"/Users/bernardahn/Documents/GitHub/clip/src/App.js",["231","232","233","234","235","236"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './components/Home'\nimport Navbar from './components/Navbar';\nimport Content from './components/Content';\nimport Category from './components/Category';\nimport ConstructionPart from './components/ConstructionPart';\nimport Brands from './components/Brands'\nimport PrivacyPolicy from './components/PrivacyPolicy'\nimport Terms from './components/Terms'\nimport SearchPage from './components/SearchPage'\nimport PartDetail from './components/PartDetail'\nimport MoodboardDetail from './components/MoodboardDetail'\n// import {UserProvider,useUser} from './components/user-context'\nimport {BrowserRouter as BrowserRouter,Router,Switch,Route,Link} from 'react-router-dom'\n\n// const globalState={\n//   phoneNum:undefined,\n//   idNum:undefined,\n//   password:undefined\n// }\n// const globalStateContext = React.createContext(globalState)\n\n\nfunction App() {\n  return (\n    // <UserProvider>\n      <div className=\"App\">\n        <BrowserRouter>\n          {/* <Navbar />\n          <Content /> */}\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/clip\" component={Home} />\n            <Route exact path=\"/category\" component={Category}/>\n            <Route exact path=\"/constructionPart\" component={ConstructionPart}/>\n            <Route exact path=\"/brands\" component={Brands}/>\n            <Route exact path=\"/privacypolicy\" component={PrivacyPolicy}/>\n            <Route exact path=\"/terms\" component={Terms}/>\n            <Route exact path=\"/searchpage\" component={SearchPage}/>\n            <Route exact path=\"/partdetail\" component={PartDetail}/>\n            <Route exact path=\"/moodboarddetail\" component={MoodboardDetail}/>\n          </Switch>\n        </BrowserRouter>\n      </div>\n    // </UserProvider>\n  );\n}\n\nexport default App;\n","/Users/bernardahn/Documents/GitHub/clip/src/index.js",[],["237","238"],"/Users/bernardahn/Documents/GitHub/clip/src/components/Home.js",["239"],"import Navbar from './Navbar';\nimport Content from './Content';\nimport IntroImage from './IntroImage'\nimport NavBarFiller from './NavBarFiller'\nimport MainMaterialCategory from './MainMaterialCategory'\nimport MainMoodBoard from './MainMoodBoard'\nimport Footer from './Footer'\nfunction Home() {\n    return (\n      <div className=\"Home\">\n          <Navbar />\n          <NavBarFiller/>\n          <IntroImage/>\n          <MainMaterialCategory/>\n          <MainMoodBoard/>\n          <Footer/>\n      </div>\n    );\n  }\n  \n  export default Home;",["240","241"],"/Users/bernardahn/Documents/GitHub/clip/src/components/Category.js",["242","243","244","245","246"],"import React,{useEffect} from 'react';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport NavBarFiller from './NavBarFiller';\nimport {TouchableOpacity,Text,View,Modal,TouchableHighlight} from 'react-native';\nconst queryString = require('query-string');\n\nfunction Category(props) {\n\n  const[data,setData]=React.useState({})\n  const[catQ,setCatQ]=React.useState({cat_num: null})\n    useEffect(() => {\n      \n      fetch('/data')\n      .then(res=>res.json())\n      .then(data=>setData(data),()=>{\n        console.log('data read : ' , data);\n      })\n      const parsed = queryString.parse(props.location.search);\n\n      console.log(parsed)\n      setCatQ(parsed)\n    },[])\n    return (\n      <div className=\"Category\">\n       \n          <Navbar />\n          <NavBarFiller/>\n          <Text> \n            Category Num\n          </Text> \n          <br></br>\n          <Text>\n            {catQ.cat_num}\n          </Text>\n          {/* <Text>\n            {data.lastname} {data.firstname}\n          </Text> */}\n\n          <Content/>\n            \n          \n        \n      </div>\n    );\n  }\n  \n  export default Category;","/Users/bernardahn/Documents/GitHub/clip/src/components/IntroImage.js",["247","248","249","250","251","252","253","254"],"import React,{useEffect} from 'react';\nimport IntroImg from '../assets/introImage.png';\nimport './content.css';\nimport {TouchableOpacity,Text,Linking,Dimensions,View,Image} from 'react-native';\nconst queryString = require('query-string');\n\nconst IntroImage=() => {\n\tconst[data,setData]=React.useState(undefined)\n\tconst[banner,setBanner]=React.useState(undefined)\n\tconst[bannerData,setBannerData]=React.useState(undefined)\n\tconst [height,setHeight]=React.useState(Dimensions.get('window').height)\n  \tconst [width,setWidth]=React.useState(Dimensions.get('window').width)\n\tconst oneBanner=(jsonObj)=>{\n\t\tconsole.log(jsonObj)\n\t\t  fetch('/banner?'+\n\t\t\tqueryString.stringify({\n\t\t\t\t  // ct_id:ct_id\n\t\t\t\t  ...jsonObj\n\t\t\t\t})\n\t\t  )\n\t\t  .then(res=>res.json())\n\t\t  .then((incomingData)=>{\n\t\t\tconsole.log(incomingData)\n\t\t\tsetData(incomingData)\n\t\t\t})\n\t\t  .catch(err=>{\n\t\t\t  console.log(err)\n\t\t  })\n\t\t\n\t  }\n\tconst onChange=()=>{\n\t\tsetHeight(Dimensions.get('window').height)\n\t\tsetWidth(Dimensions.get('window').width)\n\t\t// console.log(height+\" : \"+width)\n\t}\n\tuseEffect(() => {\n\t\tDimensions.addEventListener('change',onChange)\n\t\tconst parsed = {}\n\t\tif(localStorage.login!=undefined){\n\t\t\tvar mem_no=undefined\n\t\t\tmem_no=JSON.parse(localStorage.login).message.split('_')[0]\n\t\t\tparsed.mem_no=mem_no \n\t\t}\n\t\telse{\n\t\t\tparsed.mem_no=\"\"\n\t\t}\n\t\t// parsed.ct_id=data.listBanner[0].banner_detail\n\t\toneBanner(parsed)\n\t\t// fetch('/Mainitem')\n        //     .then(res=>res.json())\n        //     .catch(err=>{\n        //         console.log(err)\n        //     })\n        //     .then(incomingData=>setData(incomingData),()=>{\n\t\t\t\t\n        //     console.log(data)\n        //     console.log('data read : ' , data.listBanner[0].banner_img_url);\n\t\t// \t// var integer=Math.floor(Math.random()*data.listBanner.length)\n\t\t\t\n\t\t// \t// setBanner(data.listBanner[Math.floor(Math.random()*data.listBanner.length)])\n\t\t// \t})\n        //     .catch(err=>{\n        //         console.log(err)\n        //     })\n        // fetch('/Mainitem')\n        //     .then(res=>res.json())\n        //     .catch(err=>{\n        //         console.log(err)\n        //     })\n        //     .then(incomingData=>setData(incomingData),()=>{\n\t\t// \t\t// const parsed = {}\n\t\t// \t\t// if(localStorage.login!=undefined){\n\t\t// \t\t// \tvar mem_no=undefined\n\t\t// \t\t// \tmem_no=JSON.parse(localStorage.login).message.split('_')[0]\n\t\t// \t\t// \tparsed.mem_no=mem_no \n\t\t// \t\t// }\n\t\t// \t\t// else{\n\t\t// \t\t// \tparsed.mem_no=\"\"\n\t\t// \t\t// }\n\t\t// \t\t// parsed.ct_id=data.listBanner[0].banner_detail\n\t\t// \t\t// oneBrand(parsed)\n        //     console.log(data)\n        //     console.log('data read : ' , data.listBanner[0].banner_img_url);\n\t\t// \t// var integer=Math.floor(Math.random()*data.listBanner.length)\n\t\t\t\n\t\t// \t// setBanner(data.listBanner[Math.floor(Math.random()*data.listBanner.length)])\n\t\t// \t})\n        //     .catch(err=>{\n        //         console.log(err)\n        //     })\n\t  },[])\n\tuseEffect(()=>{\n\t\t\n\t},[data])\n\t// const introImage=(\n\t// \t<div className=\"introImage\">\n\t// \t\t<div id=\"introImageDiv\"\n\t// \t\tstyle={{\n\t// \t\t\tbackgroundColor:'transparent',\n\t// \t\t}}\n\t// \t\t>\n\t// \t\t\t {/* <img id=\"introImage\" src={IntroImg} alt=\"Logo\" title=\"Logo\" >\n\t// \t\t\t</img> */}\n\n\t// \t\t\t<img id=\"introImage\" src={data.listBanner[0].banner_img_url} alt=\"Logo\" title=\"Logo\" >\n\t// \t\t\t</img>\n\n\n\t// \t\t</div>\n\t// \t</div>\n\t// )\n\tif(data!=undefined){\n\t\t// console.log(data)\n\t\treturn (\n\t\t\t<div className=\"introImageContainer\"\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundColor:'transparent',\n\t\t\t\t\t// height:'300pt'\n\t\t\t\t\tmargin:0,\n\t\t\t\t\theight:'auto'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{/* {filler} */}\n\t\t\t\t{/* {introImage} */}\n\t\t\t\t<div className=\"introImage\">\n\t\t\t{/* <a\n\t\t\t\thref=\"/brands\"\n\t\t\t> */}\n\t\t\t<div id=\"introImageDiv\"\n\t\t\tstyle={{\n\t\t\t\tbackgroundColor:'transparent',\n\t\t\t\talignItems:'center',\n\t\t\t\tjustifyContent:'center'\n\t\t\t}}\n\t\t\t>\n\t\t\t\t {/* <img id=\"introImage\" src={IntroImg} alt=\"Logo\" title=\"Logo\" >\n\t\t\t\t</img> */}\n\t\t\t\t<TouchableOpacity\n                        style={{\n                            // borderRadius:10,\n                            // height:'65pt',\n                            // width:\"350px\",\n                            // backgroundColor:'white',\n                            // boxShadow:'0px 0px 2px',\n                            \n                            //     fontSize: '25pt',\n                            //     fontWeight:'700',\n                            //     textDecorationLine:'none',\n                            //     // color:'white',\n                            //     // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                            //     // textShadowOffset: {width: 0, height: 0},\n                            //     // textShadowRadius: 2,\n                            //     color:'black',\n                                textAlign:'left',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                flexDirection:'row',\n                            //     marginLeft:'auto',\n                            //     marginRight:'auto',\n                            //     marginTop:'25pt',\n                            //     padding:'auto',\n                            //     zIndex:2\n                                // backgroundColor:'red'\n                            \n                        }}\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t// console.log(data[0].banner_detail)\n\t\t\t\t\t\t\tLinking.openURL(`/brands?ct_id=${data[0].banner_detail}`)\n\t\t\t\t\t\t}}\n                    >\n\t\t\t\t<View\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor:'transparent',\n\t\t\t\t\t\theight:'300px',\n\t\t\t\t\t\twidth:width-330+'px',\n\t\t\t\t\t\tmarginBottom:'30px'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tposition:'absolute',\n\t\t\t\t\t\t\tbottom:'15px',\n\t\t\t\t\t\t\tleft:'15px',\n\t\t\t\t\t\t\tbackgroundColor:'transparent',\n\t\t\t\t\t\t\tzIndex:100,\n\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor:'white',\n\t\t\t\t\t\t\t\tfontSize:'20px',\n\t\t\t\t\t\t\t\tfontWeight:700,\n\t\t\t\t\t\t\t\ttextShadow:'1px 1px black'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{data[0].detail.brd_name_eng}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor:'white',\n\t\t\t\t\t\t\t\tfontSize:'18px',\n\t\t\t\t\t\t\t\tfontWeight:700,\n\t\t\t\t\t\t\t\ttextShadow:'1px 1px black'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{data[0].detail.brd_name_kor}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\t\t\t\t\t<Image\n                      style={{\n                      display:'block',\n                      height:'300px',\n                      width:'auto',\n                      // borderTopLeftRadius:10,\n                      // borderTopRightRadius:10,\n\t\t\t\t\t  borderRadius:'10px',\n\t\t\t\t\t  zIndex:99,\n                    //   pointerEvents:'none',\n                    //   marginLeft:'auto',\n                    //   marginRight:'auto'\n                      // transform:[{\n                      //     translateX:'0px',\n                      //     translateY:'0px'\n                      // }]\n                      }}\n                      source={{\n                          uri:\n\t\t\t\t\t\t  \tdata[0].detail.brd_feature_img_url\n                      }}\n\n                  >\n              </Image>\n\t\t\t\t{/* <img id=\"introImage\" \n\t\t\t\t\tsrc={data[0].detail.brd_feature_img_url} \n\t\t\t\t\talt=\"banner\" \n\t\t\t\t\ttitle=\"banner\" \n\t\t\t\t\tstyle={{\n\t\t\t\t\t\theight:'300px',\n\t\t\t\t\t\twidth:width-330+'px'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t</img> */}\n\t\t\t\t\t\n\t\t\t\t</View>\n\t\t\t\t{/* <img id=\"introImage\" \n\t\t\t\t\tsrc={data.listBanner[0].banner_img_url} \n\t\t\t\t\talt=\"Logo\" \n\t\t\t\t\ttitle=\"Logo\" \n\t\t\t\t\tstyle={{\n\t\t\t\t\t\theight:'300px',\n\t\t\t\t\t\twidth:'auto'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t</img> */}\n\t\t\t\t{/* <img id=\"introImage\" \n\t\t\t\t\tsrc={brandData.brd_feature_img_url} \n\t\t\t\t\talt=\"Logo\" \n\t\t\t\t\ttitle=\"Logo\" \n\t\t\t\t\tstyle={{\n\t\t\t\t\t\theight:'300px',\n\t\t\t\t\t\twidth:'auto'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t</img> */}\n\t\t\t\t</TouchableOpacity>\n\n\t\t\t</div>\n\t\t\t{/* </a> */}\n\t\t</div>\n\n\t\t\t</div>\n\t\t)\n\t}\n\telse{\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Text>\n\t\t\t\t로딩중 ...\n\t\t\t\t</Text>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default IntroImage;","/Users/bernardahn/Documents/GitHub/clip/src/components/NavBarFiller.js",[],["255","256"],"/Users/bernardahn/Documents/GitHub/clip/src/components/ConstructionPart.js",["257","258","259","260"],"import Navbar from './Navbar';\nimport Content from './Content';\nimport NavBarFiller from './NavBarFiller';\nimport {TouchableOpacity,Text,View,Modal,TouchableHighlight} from 'react-native';\n\nfunction ConstructionPart() {\n    return (\n      <div className=\"ConstructionPart\">\n        <Navbar />\n        <NavBarFiller/>\n        <Text> \n          ConstructionPart\n        </Text> \n        <Content/>  \n      </div>\n    );\n  }\n  export default ConstructionPart;","/Users/bernardahn/Documents/GitHub/clip/src/components/Brands.js",["261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294"],"import React,{useEffect} from 'react';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport NavBarFiller from './NavBarFiller';\nimport {TouchableOpacity,Text,View,Modal,Image,TouchableHighlight,Linking,Dimensions} from 'react-native';\n// import Carousel from '@brainhubeu/react-carousel';\n// import '@brainhubeu/react-carousel/lib/style.css';\nimport ClipBoard from './ClipBoard';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport downloadIcon from '../assets/download.png'\nimport clipOff from '../assets/clipOff.png'\nimport boxIcon from '../assets/icnBox.png'\n// import { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext } from 'pure-react-carousel';\n// import 'pure-react-carousel/dist/react-carousel.es.css'\n\nconst queryString = require('query-string');\n\nfunction Brands(props) {\n  // var bestProducts\n  const[brandListData,setBrandListData]=React.useState([])\n  const[brandData,setBrandData]=React.useState({})\n  const[detailView,setDetailView]=React.useState(false)\n  const[brandId,setBrandId]=React.useState(null)\n  const [hover,setHover]=React.useState(null)\n  const [clipBoard,setClipBoard]=React.useState(false)\n  const [materialNumber,setMaterialNumber]=React.useState(undefined)\n  const [height,setHeight]=React.useState(Dimensions.get('window').height)\n  const [width,setWidth]=React.useState(Dimensions.get('window').width)\n  const brands=()=>{\n    fetch('/brandslist')\n    .then(res=>res.json())\n    .then((incomingData)=>{\n      setBrandListData(incomingData)\n    })\n    .catch(err=>{\n        console.log(err)\n    })\n\n  }\n  const oneBrand=(jsonObj)=>{\n    console.log(jsonObj)\n      fetch('/onebrand?'+\n        queryString.stringify({\n              // ct_id:ct_id\n              ...jsonObj\n            })\n      )\n      .then(res=>res.json())\n      .then((incomingData)=>{\n        console.log(incomingData)\n        setBrandData(incomingData)\n        })\n      .catch(err=>{\n          console.log(err)\n      })\n    \n  }\n  const onChange=()=>{\n    setHeight(Dimensions.get('window').height)\n    setWidth(Dimensions.get('window').width)\n    // console.log(height+\" : \"+width)\n  }\n  const toggleClipBoard=()=>{\n    setClipBoard(!clipBoard)\n  }\n  useEffect(() => {\n      \n    // fetch('/data')\n    // .then(res=>res.json())\n    // .then(data=>setData(data),()=>{\n    //   console.log('data read : ' , data);\n    // })\n    Dimensions.addEventListener('change',onChange)\n    const parsed = queryString.parse(props.location.search);\n    if(localStorage.login!=undefined){\n        var mem_no=undefined\n        mem_no=JSON.parse(localStorage.login).message.split('_')[0]\n        parsed.mem_no=mem_no \n    }\n    else{\n        parsed.mem_no=\"\"\n    }\n    console.log(parsed.ct_id==undefined)\n    if(parsed.ct_id==undefined){\n      brands()\n      setDetailView(false)\n    }\n    else{\n      oneBrand(parsed)\n      setBrandId(parsed.ct_id)\n      setDetailView(true)\n    }\n    \n  },[])\n\n\n\n  useEffect(()=>{\n    console.log(typeof(brandListData))\n    console.log(brandListData)\n\n  },[brandListData])\n  useEffect(()=>{\n    if(brandData.bestproducts_brand){\n      // console.log('true')\n      console.log(brandData)\n      // bestProducts=brandData.bestproducts_brand.map((material)=>{\n             \n          \n      //   <View\n      //       style={{\n      //         backgroundColor:'red',\n      //         height:'200px',\n      //         width:'200px'\n\n      //       }}\n      //   >\n      //   <Image\n      //       style={{\n      //       display:'block',\n      //       height:'200pt',\n      //       width:'200pt',\n      //       borderTopLeftRadius:10,\n      //       borderTopRightRadius:10,\n      //       zIndex:1,\n      //       pointerEvents:'none',\n      //       transform:[{\n      //           translateX:'0px',\n      //           translateY:'0px'\n      //       }]\n      //       }}\n      //       source={{\n      //           uri:\n      //               material.mt_feature_img_url\n      //       }}\n\n      //   >\n      //   </Image>\n      //       <View\n      //           style ={{\n      //               height:'60pt',\n      //               width:'200pt',\n      //               fontSize: '15pt',\n      //               fontWeight:'700',\n      //               textDecorationLine:'none',\n      //               color:'black',\n      //               textAlign:'center',\n      //               flexDirection:'row',\n      //               pointerEvents:'none',\n      //               backgroundColor:'rgb(33,33,33)',\n      //               pointerEvents:'none',\n      //               borderBottomLeftRadius:10,\n      //               borderBottomRightRadius:10,\n                    \n      //           }}\n      //       >\n      //           <View\n      //               style ={{\n      //                   height:'60pt',\n      //                   width:'190pt',\n      //                   fontSize: '15pt',\n      //                   fontWeight:'700',\n      //                   textDecorationLine:'none',\n      //                   borderBottomLeftRadius:10,\n      //                   borderBottomRightRadius:10,\n      //                   color:'black',\n      //                   textAlign:'center',\n      //                   alignItems:'center',\n      //                   justifyContent:'center',\n      //                   flexDirection:'row',\n      //                   marginLeft:'5pt',\n      //                   pointerEvents:'none',\n      //                   backgroundColor:\"rgb(33,33,33)\",\n      //                   pointerEvents:'none',\n                        \n      //               }}\n      //           >\n      //               <Text\n      //                   style ={{\n      //                       height:'65pt',\n      //                       width:'250px',\n      //                       fontSize: '15pt',\n      //                       fontWeight:'700',\n      //                       textDecorationLine:'none',\n      //                       color:'white',\n      //                       textAlign:'left',\n      //                       alignItems:'center',\n      //                       justifyContent:'center',\n      //                       flexDirection:'row',\n      //                       marginTop:'45pt',\n      //                       pointerEvents:'none',\n      //                       backgroundColor:'transparent',\n      //                       pointerEvents:'none',\n                            \n      //                   }}\n      //               >\n      //                   {material.mt_subname}\n      //               </Text>\n      //           </View>\n      //       </View>\n      //     </View>\n        \n      //     })\n    }\n    \n\n  },[brandData])\n  if(brandListData!=[]){\n    if(brandId!=null){\n      if(brandData.bestproducts_brand){\n        if(brandData.brd_files!=null){\n        // console.log(brandData.bestproducts_brand)\n          return(\n            <div>\n              <div\n                    style={{\n                        display: clipBoard ? 'block':'none' \n                    }}\n                >\n                    <ClipBoard toggleClipBoard={toggleClipBoard} material_num={materialNumber} refresh={clipBoard}/>\n                </div>\n            <div>\n              <Navbar />\n              <NavBarFiller/>\n              <div\n              style={{\n                backgroundColor:'transparent',\n                alignItems:'center',\n                padding:'auto'\n              }}\n              >\n                {/* <div\n              style={{\n                backgroundColor:'red'\n              }}\n              > */}\n              <div\n                style={{\n                  paddingTop:'100px',\n                  paddingLeft:'150px',\n                  paddingRight:'150px'\n                }}\n              >\n              <Image\n                      style={{\n                      display:'block',\n                      height:'300px',\n                      width:'auto',\n                      // borderTopLeftRadius:10,\n                      // borderTopRightRadius:10,\n                      borderRadius:'10px',\n                      pointerEvents:'none',\n                      marginLeft:'auto',\n                      marginRight:'auto'\n                      // transform:[{\n                      //     translateX:'0px',\n                      //     translateY:'0px'\n                      // }]\n                      }}\n                      source={{\n                          uri:\n                              brandData.brd_feature_img_url\n                      }}\n\n                  >\n              </Image>\n              </div>\n                  </div>\n                  {/* <Image\n                      style={{\n                      display:'block',\n                      height:'200pt',\n                      width:'200pt',\n                      borderTopLeftRadius:10,\n                      borderTopRightRadius:10,\n                      pointerEvents:'none',\n                      transform:[{\n                          translateX:'0px',\n                          translateY:'0px'\n                      }]\n                      }}\n                      source={{\n                          uri:\n                              brandData.brd_logo_img_url\n                      }}\n\n                  >\n                  </Image> */}\n              <div\n                style={{\n                  textAlign:'left',\n                  paddingLeft:'150px',\n                  paddingRight:'150px',\n                  paddingTop:'50px',\n                  backgroundColor:'transparent'\n                }}\n              >\n              <View\n                style={{\n                  flex:1,\n                  flexDirection:'row',\n                  paddingTop:'15px',\n                  paddingBottom:'15px',\n                }}\n              >\n                <View\n                  style={{\n                    \n                    // width:\"450px\",\n                    // alignItems:'center',\n                    // justifyContent:'center',\n                    backgroundColor:'transparent',\n                    width:'500px',\n                    textAlign:'left',\n                    flex:2\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: '15px',\n                      fontWeight:'500',\n                      textDecorationLine:'none',\n                      // color:'white',\n                      // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                      // textShadowOffset: {width: 0, height: 0},\n                      // textShadowRadius: 2,\n                      color:'gray',\n                      // textAlign:'center',\n                      // alignItems:'center',\n                      // justifyContent:'center',\n                      flexDirection:'row',\n                      // margin:11,\n                      marginTop:'25px',\n                      padding:'auto',\n                      pointerEvents:'none'\n                    }}\n                  >\n                    {brandData.brd_intro}\n                  </Text>\n                  <br></br>\n                  <View\n                    style={{\n                      backgroundColor:'transparent',\n                      \n                    }}\n                  >\n                  <Text\n                      style={{\n                        fontSize: '20px',\n                        fontWeight:'700',\n                        textDecorationLine:'none',\n                        // color:'white',\n                        // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                        // textShadowOffset: {width: 0, height: 0},\n                        // textShadowRadius: 2,\n                        color:'black',\n                        // textAlign:'center',\n                        // alignItems:'center',\n                        // justifyContent:'center',\n                        //flexDirection:'row',\n                        // margin:11,\n                        marginTop:'25px',\n                        padding:'auto',\n                        pointerEvents:'none'\n                      }}\n                    >\n                      {brandData.brd_name_eng}\n                    </Text>\n                    <Text\n                    style={{\n                      fontSize: '20px',\n                      fontWeight:'700',\n                      textDecorationLine:'none',\n                      // color:'white',\n                      // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                      // textShadowOffset: {width: 0, height: 0},\n                      // textShadowRadius: 2,\n                      color:'black',\n                      // textAlign:'center',\n                      // alignItems:'center',\n                      // justifyContent:'center',\n                      flexDirection:'row',\n                      // margin:11,\n                      marginTop:'25px',\n                      padding:'auto',\n                      pointerEvents:'none'\n                    }}\n                    > \n                      {brandData.brd_name_kor}\n                    </Text>\n                    <br></br>\n                    <Text>\n                      {brandData.brd_description}\n                    </Text>\n                  </View>\n                </View>\n                <View\n                  style={{\n                    backgroundColor:'transparent',\n                    width:width-800+'px',\n                    minWidth:100\n                  }}\n                >\n                  <TouchableOpacity\n                    onPress={() => \n                      // Linking.openURL(`/category?cat_num=${brandData.brd_no}`)\n                      Linking.openURL(`/searchpage?search_target=BRAND&search_value=${brandData.brd_no}`)\n                      // console.log('show material list ')\n                    }\n                  >\n                    <View\n                      style={{\n                        marginTop:'25px',\n                        marginLeft:'25px',\n                        backgroundColor:'white',\n                        width:100,\n                        // flex:1,\n                        height:40,\n                        borderRadius:10,\n                        borderColor:'black',\n                        borderStyle:'solid',\n                        borderWidth:'2px',\n                        textAlign:'center',\n                        alignItems:'center',\n                        justifyContent:'center',\n                        position:'absolute',\n                        right:0\n                      }}\n                    >\n                      <View\n                        style={{\n                          backgroundColor:'transparent',\n                          // transform:[{\n                          //   translateX:'0px',\n                          //   translateY:'50px',\n                          // }]\n                        }}\n                      >\n                        {/* <Text\n                          \n                        >\n                          {brandData.brd_name_eng} {brandData.brd_name_kor} 자재 보기\n                        </Text> */}\n                        <Text\n                          \n                        >\n                          자재 보기\n                        </Text>\n                      </View> \n                    </View>\n                  </TouchableOpacity>\n                </View>\n              </View>\n              <br></br>\n              \n              </div>\n              \n              {/* </div> */}\n              {/* <Carousel plugins={['arrows']}>\n                {brandData.pictures_brand.map((atom)=>\n                  <img src={atom.pic_url}\n                    style={{\n                      height:\"300px\",\n                      width:\"auto\"\n                    }}\n                  />\n                )}\n              </Carousel> */}\n              {/* <CarouselProvider\n                naturalSlideWidth={100}\n                naturalSlideHeight={300}\n                totalSlides={brandData.pictures_brand.length}\n                visibleSlides={3}\n                interval={5000}\n                infinite={true}\n              >\n                <Slider>\n                {brandData.pictures_brand.map((atom,index)=>\n                  \n                  <Slide index={index}\n\n                  >\n                    <img src={atom.pic_url}\n                      style={{\n                        height:\"300px\",\n                        width:\"auto\"\n                      }}\n                    />\n                  </Slide>\n\n                )}\n                  \n                </Slider>\n                \n              </CarouselProvider> */}\n              <div\n                style={{\n                  paddingLeft:'150px',\n                  paddingRight:'150px'\n                }}\n              >\n                <Carousel\n                  style={{\n                    borderRadius:10\n                  }}\n                  showArrows={true} \n                  showStatus={false} \n                  showIndicators={true}\n                  showThumbs={false}\n                  infiniteLoop={true}\n                  autoPlay={true}\n                  interval={4500}\n                  transitionTime={500}\n                  emulateTouch={true}\n                  stopOnHover={false}\n                  //swipeScrollTolerance={1}\n                  useKeyboardArrows={true}\n                  //centerSlidePercentage={10}\n                >\n                {brandData.pictures_brand.map((atom)=>\n                      <div\n                        style={{\n                          backgroundColor:'gainsboro',\n                          \n                        }}\n                      >\n                        <img src={atom.pic_url}\n                          style={{\n                            height:\"300px\",\n                            width:\"auto\",\n                            // borderRadius:10\n                          }}\n                        />\n                      </div>\n                    )}\n                </Carousel>\n              </div>\n              <div\n                style={{\n                  textAlign:'left',\n                  paddingLeft:'150px',\n                  paddingRight:'150px',\n                  paddingTop:'50px'\n                }}\n              >\n              <Text\n                style ={{\n\n                  fontSize: '20px',\n                  fontWeight:'700',\n                  textDecorationLine:'none',\n                  color:'black',\n                  textAlign:'left',\n                  alignItems:'center',\n                  justifyContent:'center',\n                  flexDirection:'row',\n                  marginTop:'100px',\n                  pointerEvents:'none',\n                  backgroundColor:'transparent',\n                  pointerEvents:'none',\n                  \n              }}\n              >\n                인기상품\n              </Text>\n              </div>\n              <div\n                style={{\n                  padding:'auto'\n                }}\n              >\n\n            \n                <div\n                  style={{\n                    // columnCount:3,\n                    flexwrap:'wrap',\n                    justifyContent:'space-between',\n                    display: 'grid',\n                    gridTemplateColumns: 'auto auto auto auto auto',\n                    marginLeft:'150px',\n                    marginRight:'150px',\n                    backgroundColor:'transparent',\n                    \n                  }}\n                >\n                  \n                  {brandData.bestproducts_brand.map((material,index)=>\n                \n                \n                <View\n                  style={{\n                    backgroundColor:'transparent',\n                    height:'240px',\n                    width:'170px',\n                    // marginLeft:'auto',\n                    // marginRight:'auto',\n                    marginTop:'20px',\n                    borderRadius:10,\n                    boxShadow:'0px 0px 3px black'\n                  }}\n                  onMouseEnter={()=>{\n                    console.log('entered ' + index)\n                    var mem_no=JSON.parse(localStorage.login).message.split('_')\n                    console.log(mem_no)\n                    setHover(index)\n                    console.log(brandData.bestproducts_brand[index])\n                  }\n                  }\n                  onMouseLeave={()=>{\n                      setHover(null)\n                      console.log('exited '+index)\n                  }} \n                >\n                <div\n                      style={{\n                          backgroundColor:'white',\n                          width:'55px',\n                          height:'12px',\n                          position:'absolute',\n                          zIndex:100,\n                          top:'6px',\n                          left:'6px',\n                          borderRadius:'6px',\n                          display:hover==index ? 'block':'none'\n                      }}\n                      onPress={()=>{  \n                          console.log('pressed clip ')\n                      }}\n                  >\n                      <Text\n                          style={{\n                              transform:'translate(2px,-2px)',\n                              position:'absolute',\n                              top:'1px',\n                              left:'2px',\n                              fontWeight:50,\n                              fontSize:'12px',\n                              color:brandData.bestproducts_brand[index].mt_budget<1 ? 'rgb(219,219,219)':'black' \n                          }}\n                      >₩</Text>\n                     <Text\n                          style={{\n                              transform:'translate(2px,-2px)',\n                              position:'absolute',\n                              top:'1px',\n                              left:'12px',\n                              fontWeight:50,\n                              fontSize:'12px',\n                              color:brandData.bestproducts_brand[index].mt_budget<2 ? 'rgb(219,219,219)':'black'\n                          }}\n                      >₩</Text>\n                      <Text\n                          style={{\n                              transform:'translate(2px,-2px)',\n                              position:'absolute',\n                              top:'1px',\n                              left:'22px',\n                              fontWeight:50,\n                              fontSize:'12px',\n                              color:brandData.bestproducts_brand[index].mt_budget<3 ? 'rgb(219,219,219)':'black'\n                          }}\n                      >₩</Text>\n                      <Text\n                          style={{\n                              transform:'translate(2px,-2px)',\n                              position:'absolute',\n                              top:'1px',\n                              left:'32px',\n                              fontWeight:50,\n                              fontSize:'12px',\n                              color:brandData.bestproducts_brand[index].mt_budget<4 ? 'rgb(219,219,219)':'black'\n                          }}\n                      >₩</Text>\n                      <Text\n                          style={{\n                              transform:'translate(2px,-2px)',\n                              position:'absolute',\n                              top:'1px',\n                              left:'42px',\n                              fontWeight:50,\n                              fontSize:'12px',\n                              color:brandData.bestproducts_brand[index].mt_budget<5 ? 'rgb(219,219,219)':'black'\n                          }}\n                      >₩</Text>\n                  </div>\n                  <TouchableOpacity\n                      style={{\n                          backgroundColor:'transparent',\n                          width:'20px',\n                          height:'20px',\n                          position:'absolute',\n                          zIndex:100,\n                          top:'6px',\n                          right:'6px',\n                          display:hover==index ? 'block':'none'\n                      }}\n                      onPress={()=>{  \n                          console.log('pressed clip ' + brandData.bestproducts_brand[index].mt_no)\n                          setMaterialNumber(brandData.bestproducts_brand[index].mt_no)\n                          toggleClipBoard()\n                      }}\n                  >   \n                      <Image\n                          style={{\n                          display:'block',\n                          height:'20px',\n                          width:'20px',\n                          borderTopLeftRadius:10,\n                          borderTopRightRadius:10,\n                          zIndex:1,\n                          pointerEvents:'none'\n                          // transform:[{\n                          //     translateX:'0px',\n                          //     translateY:'0px'\n                          // }]\n                          }}\n                          source={clipOff}\n\n                          >\n                          \n                      </Image>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                        \n                        onPress={()=>{  \n                          \n                          Linking.openURL('/partDetail?mt_no='+brandData.bestproducts_brand[index].mt_no)\n                      }}\n                        >\n                  <Image\n                    style={{\n                    display:'block',\n                    height:'170px',\n                    width:'170px',\n                    borderTopLeftRadius:10,\n                    borderTopRightRadius:10,\n                    zIndex:1,\n                    pointerEvents:'none',\n                    filter:hover==index ? 'brightness(90%)':'brightness(100%)'\n                    // transform:[{\n                    //     translateX:'0px',\n                    //     translateY:'0px'\n                    // }]\n                    }}\n                    source={{\n                        uri:\n                            material.mt_feature_img_url\n                    }}\n\n                  >\n                  </Image>\n                 \n                  <View\n                    style ={{\n                      height:'70px',\n                      width:'170px',\n                      fontSize: '12pt',\n                      fontWeight:'500',\n                      textDecorationLine:'none',\n                      color:'white',\n                      textAlign:'center',\n                      flexDirection:'column',\n                      // pointerEvents:'none',\n                      backgroundColor:'transparent',\n                      // pointerEvents:'none',\n                      borderBottomLeftRadius:10,\n                      borderBottomRightRadius:10,\n                      padding:'10px'\n                    }}\n                  >\n                    <TouchableOpacity\n                                style={{\n                                    zIndex:100,\n                                    backgroundColor:'transparent',\n                                    position:'absolute',\n                                    top:'7px',\n                                    right:'7px',\n                                    height:'30px',\n                                    width:'30px',\n                                    display:material.mt_isdelivery==\"Y\"?\"block\":\"none\"\n                                }}\n                                onPress={()=>{\n                                    console.log(material.mt_isdelivery)\n                                }}\n                            >\n                            <View\n                            style={{\n                                backgroundColor:'transparent',\n                                display:'flex',\n                                height:'30px',\n                                width:'30px',\n                                // position:'absolute',\n                                // top:'7px',\n                                // right:'15px'\n                            }}\n                            >\n                                \n                                <img\n                                        src={boxIcon}\n                                        style={{\n                                            //display: categoryOpened? 'none': 'block',\n                                            width:'30px',\n                                            height:'30px',\n                                            right:'15px'\n                                        }}\n                                    >\n                                    </img>\n                                \n                            </View>\n                            </TouchableOpacity>\n                    <Text\n                      style ={{\n                          // height:'65pt',\n                          // width:'250px',\n                          fontSize: '8pt',\n                          fontWeight:'700',\n                          textDecorationLine:'none',\n                          color:'black',\n                          textAlign:'left',\n                          //alignItems:'center',\n                          //justifyContent:'center',\n                          //flexDirection:'row',\n                          //marginTop:'45pt',\n                          pointerEvents:'none',\n                          backgroundColor:'transparent',\n                          pointerEvents:'none',\n                          \n                      }}\n                  >\n                      {material.vd_name}\n                  </Text>\n                    <Text\n                          style ={{\n                              height:'100px',\n                              width:'120px',\n                              fontSize: '8pt',\n                              fontWeight:'500',\n                              textDecorationLine:'none',\n                              color:'black',\n                              textAlign:'left',\n                              alignItems:'center',\n                              justifyContent:'center',\n                              flexDirection:'row',\n                              // marginLeft:'1px',\n                              // marginTop:'1px',\n                              pointerEvents:'none',\n                              backgroundColor:'transparent',\n                              pointerEvents:'none',\n                              \n                              \n                          }}\n                      >\n                      {material.mt_subname}\n                      \n                    </Text>\n                    <Text\n                      style ={{\n                          height:'100px',\n                          width:'120px',\n                          fontSize: '8pt',\n                          fontWeight:'500',\n                          textDecorationLine:'none',\n                          color:'rgb(85,85,85)',\n                          textAlign:'left',\n                          alignItems:'center',\n                          justifyContent:'center',\n                          flexDirection:'row',\n                          // marginLeft:'1px',\n                          // marginTop:'1px',\n                          pointerEvents:'none',\n                          backgroundColor:'transparent',\n                          pointerEvents:'none',\n                          whiteSpace:'nowrap',\n                          textOverflow: 'ellipsis',\n                          overflow:'hidden'\n                      }}\n                  >\n                  {material.mt_name}\n                  \n              </Text>\n                    \n          </View>\n          </TouchableOpacity>\n        </View>\n      \n        \n          )}\n            \n            </div>\n            </div>\n            <div\n                style={{\n                  textAlign:'left',\n                  paddingLeft:'150px',\n                  paddingRight:'150px',\n                  paddingTop:'50px'\n                }}\n              >\n              <Text\n                style ={{\n\n                  fontSize: '20px',\n                  fontWeight:'700',\n                  textDecorationLine:'none',\n                  color:'black',\n                  textAlign:'left',\n                  alignItems:'center',\n                  justifyContent:'center',\n                  flexDirection:'row',\n                  marginTop:'100px',\n                  pointerEvents:'none',\n                  backgroundColor:'transparent',\n                  pointerEvents:'none',\n                  \n              }}\n              >\n                다운로드 가능한 파일\n              </Text>\n              <br></br>\n              <div\n                style={{\n                  gridTemplateColumns:'auto auto auto'\n                }}\n              >\n              {brandData.brd_files.map((file)=>\n\n              <div\n                style={{\n                  backgroundColor:'transparent',\n                  paddingTop:'15px',\n                  paddingBottom:'15px'\n                }}\n              >\n                <a\n                  style ={{\n                    fontSize: '8pt',\n                    fontWeight:'500',\n                    textDecorationLine:'none',\n                    color:'black',\n                    textAlign:'left',\n                    // alignItems:'center',\n                    // justifyContent:'center',\n                    // flexDirection:'row',\n                    marginTop:'100px',\n                    backgroundColor:'transparent',\n                  }}\n                  href={file.fl_url}\n                >\n                  <div\n                    style={{\n                      backgroundColor:'transparent',\n                      alignItems:'center',\n                      justifyContent:'center',\n                      // flexDirection:'row',\n                      float:'left'\n                    }}\n                  >\n                    <div\n                      style={{\n                        backgroundColor:'transparent',\n                        display:'inline-block',\n                        alignItems:'center',\n                        justifyContent:'center',\n                        // flexDirection:'row'\n                        padding:'5px'\n                      }}\n                    >\n                      {/* <img\n                          src={downloadIcon}\n                          style={{\n                            height:\"15px\"\n                          }}\n                        >\n                      </img> */}\n                      <Image\n                        style={{\n                        display:'inline-block',\n                        height:'12px',\n                        width:'12px',\n                        marginTop:'20px'\n                        // borderTopLeftRadius:10,\n                        // borderTopRightRadius:10,\n                        // borderRadius:'10px',\n                        // pointerEvents:'none',\n                        // marginLeft:'auto',\n                        // marginRight:'auto'\n                        \n                        }}\n                        source={{\n                          uri:downloadIcon\n                        }}\n  \n                    ></Image>\n                    </div>\n                    <div\n                      style={{\n                        backgroundColor:'transparent',\n                        alignItems:'center',\n                        justifyContent:'center',\n                        display:'inline-block',\n                        padding:'5px',\n                        \n                      }}\n                    >\n\n                  <Text\n                    style ={{\n                      display:'inline-block',\n                      fontSize: '9pt',\n                      fontWeight:'500',\n                      textDecorationLine:'none',\n                      color:'black',\n                      textAlign:'left',\n                      alignItems:'center',\n                      justifyContent:'center',\n                      flexDirection:'row',\n                      // marginTop:'100px',\n                      pointerEvents:'none',\n                      backgroundColor:'transparent',\n                      pointerEvents:'none',\n                      transform:[{\n                        translateX:'0px',\n                        translateY:'-100px'\n                    }]\n                      \n                  }}\n                  >\n                    {file.fl_displayname}\n                  </Text>\n                  </div>\n                  </div>\n                </a>\n              </div>\n              )}\n              </div>\n              \n              \n              </div>\n            </div>\n            <div\n                style={{\n                  height:'100px',\n                  width:'100vw',\n                  backgroundColor:'transparent'\n                }}\n              >\n\n              </div>\n            </div>\n          )\n        }\n        else{\n          // console.log(brandData.bestproducts_brand)\n            return(\n              <div>\n                <div\n                    style={{\n                        display: clipBoard ? 'block':'none' \n                    }}\n                >\n                    <ClipBoard toggleClipBoard={toggleClipBoard} material_num={materialNumber} refresh={clipBoard}/>\n                </div>\n              <div>\n                <Navbar />\n                <NavBarFiller/>\n                <div\n                style={{\n                  backgroundColor:'transparent',\n                  alignItems:'center',\n                  padding:'auto'\n                }}\n                >\n                  {/* <div\n                style={{\n                  backgroundColor:'red'\n                }}\n                > */}\n                <div\n                  style={{\n                    paddingTop:'100px',\n                    paddingLeft:'150px',\n                    paddingRight:'150px'\n                  }}\n                >\n                <Image\n                        style={{\n                        display:'block',\n                        height:'300px',\n                        width:'auto',\n                        // borderTopLeftRadius:10,\n                        // borderTopRightRadius:10,\n                        borderRadius:'10px',\n                        pointerEvents:'none',\n                        marginLeft:'auto',\n                        marginRight:'auto'\n                        // transform:[{\n                        //     translateX:'0px',\n                        //     translateY:'0px'\n                        // }]\n                        }}\n                        source={{\n                            uri:\n                                brandData.brd_feature_img_url\n                        }}\n  \n                    >\n                </Image>\n                </div>\n                    </div>\n                    {/* <Image\n                        style={{\n                        display:'block',\n                        height:'200pt',\n                        width:'200pt',\n                        borderTopLeftRadius:10,\n                        borderTopRightRadius:10,\n                        pointerEvents:'none',\n                        transform:[{\n                            translateX:'0px',\n                            translateY:'0px'\n                        }]\n                        }}\n                        source={{\n                            uri:\n                                brandData.brd_logo_img_url\n                        }}\n  \n                    >\n                    </Image> */}\n                <div\n                  style={{\n                    textAlign:'left',\n                    paddingLeft:'150px',\n                    paddingRight:'150px',\n                    paddingTop:'50px'\n                  }}\n                >\n                <View\n                  style={{\n                    flex:1,\n                    flexDirection:'row',\n                    paddingTop:'15px',\n                    paddingBottom:'15px',\n                  }}\n                >\n                  <View\n                    style={{\n                      \n                      // width:\"450px\",\n                      // alignItems:'center',\n                      // justifyContent:'center',\n                      textAlign:'left',\n                      flex:2\n                    }}\n                  >\n                    <Text\n                      style={{\n                        fontSize: '15px',\n                        fontWeight:'500',\n                        textDecorationLine:'none',\n                        // color:'white',\n                        // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                        // textShadowOffset: {width: 0, height: 0},\n                        // textShadowRadius: 2,\n                        color:'gray',\n                        // textAlign:'center',\n                        // alignItems:'center',\n                        // justifyContent:'center',\n                        flexDirection:'row',\n                        // margin:11,\n                        marginTop:'25px',\n                        padding:'auto',\n                        pointerEvents:'none'\n                      }}\n                    >\n                      {brandData.brd_intro}\n                    </Text>\n                    <br></br>\n                    <View>\n                    <Text\n                        style={{\n                          fontSize: '20px',\n                          fontWeight:'700',\n                          textDecorationLine:'none',\n                          // color:'white',\n                          // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                          // textShadowOffset: {width: 0, height: 0},\n                          // textShadowRadius: 2,\n                          color:'black',\n                          // textAlign:'center',\n                          // alignItems:'center',\n                          // justifyContent:'center',\n                          //flexDirection:'row',\n                          // margin:11,\n                          marginTop:'25px',\n                          padding:'auto',\n                          pointerEvents:'none'\n                        }}\n                      >\n                        {brandData.brd_name_eng}\n                      </Text>\n                      <Text\n                      style={{\n                        fontSize: '20px',\n                        fontWeight:'700',\n                        textDecorationLine:'none',\n                        // color:'white',\n                        // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                        // textShadowOffset: {width: 0, height: 0},\n                        // textShadowRadius: 2,\n                        color:'black',\n                        // textAlign:'center',\n                        // alignItems:'center',\n                        // justifyContent:'center',\n                        flexDirection:'row',\n                        // margin:11,\n                        marginTop:'25px',\n                        padding:'auto',\n                        pointerEvents:'none'\n                      }}\n                      > \n                        {brandData.brd_name_kor}\n                      </Text>\n                      <br></br>\n                      <Text>\n                        {brandData.brd_description}\n                      </Text>\n                    </View>\n                  </View>\n                  <TouchableOpacity\n                    onPress={() => \n                      // Linking.openURL(`/category?cat_num=${brandData.brd_no}`)\n                      Linking.openURL(`/searchpage?search_target=BRAND&search_value=${brandData.brd_no}`)\n                      // console.log('show material list ')\n                    }\n                  >\n                    <View\n                      style={{\n                        marginTop:'25px',\n                        marginLeft:'25px',\n                        backgroundColor:'white',\n                        width:100,\n                        // flex:1,\n                        height:40,\n                        borderRadius:10,\n                        borderColor:'black',\n                        borderStyle:'solid',\n                        borderWidth:'2px',\n                        textAlign:'center',\n                        alignItems:'center',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <View\n                        style={{\n                          backgroundColor:'transparent',\n                          transform:[{\n                            translateX:'0px',\n                            translateY:'50px',\n                          }]\n                        }}\n                      >\n\n                        <Text\n                          \n                        >\n                          자재 보기\n                        </Text>\n                      </View> \n                    </View>\n                  </TouchableOpacity>\n                </View>\n                <br></br>\n                \n                </div>\n                \n\n                \n                <div\n                  style={{\n                    paddingLeft:'150px',\n                    paddingRight:'150px'\n                  }}\n                >\n                  <Carousel\n                    style={{\n                      borderRadius:10\n                    }}\n                    showArrows={true} \n                    showStatus={false} \n                    showIndicators={true}\n                    showThumbs={false}\n                    infiniteLoop={true}\n                    autoPlay={true}\n                    interval={4500}\n                    transitionTime={500}\n                    emulateTouch={true}\n                    stopOnHover={false}\n                    //swipeScrollTolerance={1}\n                    useKeyboardArrows={true}\n                    //centerSlidePercentage={10}\n                  >\n                  {brandData.pictures_brand.map((atom)=>\n                        <div\n                          style={{\n                            backgroundColor:'gainsboro',\n                            \n                          }}\n                        >\n                          <img src={atom.pic_url}\n                            style={{\n                              height:\"300px\",\n                              width:\"auto\",\n                              // borderRadius:10\n                            }}\n                          />\n                        </div>\n                      )}\n                  </Carousel>\n                </div>\n                <div\n                  style={{\n                    textAlign:'left',\n                    paddingLeft:'150px',\n                    paddingRight:'150px',\n                    paddingTop:'50px'\n                  }}\n                >\n                <Text\n                  style ={{\n  \n                    fontSize: '20px',\n                    fontWeight:'700',\n                    textDecorationLine:'none',\n                    color:'black',\n                    textAlign:'left',\n                    alignItems:'center',\n                    justifyContent:'center',\n                    flexDirection:'row',\n                    marginTop:'100px',\n                    pointerEvents:'none',\n                    backgroundColor:'transparent',\n                    pointerEvents:'none',\n                    \n                }}\n                >\n                  인기상품\n                </Text>\n                </div>\n                <div\n                  style={{\n                    padding:'auto'\n                  }}\n                >\n  \n              \n                  <div\n                    style={{\n                      // columnCount:3,\n                      flexwrap:'wrap',\n                      justifyContent:'space-between',\n                      display: 'grid',\n                      gridTemplateColumns: 'auto auto auto auto auto',\n                      marginLeft:'150px',\n                      marginRight:'150px',\n                      backgroundColor:'transparent',\n                      \n                    }}\n                  >\n                    \n                    {brandData.bestproducts_brand.map((material,index)=>\n                \n                \n                      <View\n                        style={{\n                          backgroundColor:'transparent',\n                          height:'240px',\n                          width:'170px',\n                          // marginLeft:'auto',\n                          // marginRight:'auto',\n                          marginTop:'20px',\n                          borderRadius:10,\n                          boxShadow:'0px 0px 3px black'\n                        }}\n                        onMouseEnter={()=>{\n                          console.log('entered ' + index)\n                          var mem_no=JSON.parse(localStorage.login).message.split('_')\n                          console.log(mem_no)\n                          setHover(index)\n                          console.log(brandData)\n                        }\n                        }\n                        onMouseLeave={()=>{\n                            setHover(null)\n                            console.log('exited '+index)\n                        }} \n                      >\n                      <div\n                            style={{\n                                backgroundColor:'white',\n                                width:'55px',\n                                height:'12px',\n                                position:'absolute',\n                                zIndex:100,\n                                top:'6px',\n                                left:'6px',\n                                borderRadius:'6px',\n                                display:hover==index ? 'block':'none'\n                            }}\n                            onPress={()=>{  \n                                console.log('pressed clip ')\n                            }}\n                        >\n                            <Text\n                                style={{\n                                    transform:'translate(2px,-2px)',\n                                    position:'absolute',\n                                    top:'1px',\n                                    left:'2px',\n                                    fontWeight:50,\n                                    fontSize:'12px',\n                                    color:brandData.bestproducts_brand[index].mt_budget<1 ? 'rgb(219,219,219)':'black' \n                                }}\n                            >₩</Text>\n                           <Text\n                                style={{\n                                    transform:'translate(2px,-2px)',\n                                    position:'absolute',\n                                    top:'1px',\n                                    left:'12px',\n                                    fontWeight:50,\n                                    fontSize:'12px',\n                                    color:brandData.bestproducts_brand[index].mt_budget<2 ? 'rgb(219,219,219)':'black'\n                                }}\n                            >₩</Text>\n                            <Text\n                                style={{\n                                    transform:'translate(2px,-2px)',\n                                    position:'absolute',\n                                    top:'1px',\n                                    left:'22px',\n                                    fontWeight:50,\n                                    fontSize:'12px',\n                                    color:brandData.bestproducts_brand[index].mt_budget<3 ? 'rgb(219,219,219)':'black'\n                                }}\n                            >₩</Text>\n                            <Text\n                                style={{\n                                    transform:'translate(2px,-2px)',\n                                    position:'absolute',\n                                    top:'1px',\n                                    left:'32px',\n                                    fontWeight:50,\n                                    fontSize:'12px',\n                                    color:brandData.bestproducts_brand[index].mt_budget<4 ? 'rgb(219,219,219)':'black'\n                                }}\n                            >₩</Text>\n                            <Text\n                                style={{\n                                    transform:'translate(2px,-2px)',\n                                    position:'absolute',\n                                    top:'1px',\n                                    left:'42px',\n                                    fontWeight:50,\n                                    fontSize:'12px',\n                                    color:brandData.bestproducts_brand[index].mt_budget<5 ? 'rgb(219,219,219)':'black'\n                                }}\n                            >₩</Text>\n                        </div>\n                        <TouchableOpacity\n                            style={{\n                                backgroundColor:'transparent',\n                                width:'20px',\n                                height:'20px',\n                                position:'absolute',\n                                zIndex:100,\n                                top:'6px',\n                                right:'6px',\n                                display:hover==index ? 'block':'none'\n                            }}\n                            onPress={()=>{  \n                                console.log('pressed clip ' + brandData.bestproducts_brand[index].mt_no)\n                                setMaterialNumber(brandData.bestproducts_brand[index].mt_no)\n                                toggleClipBoard()\n                            }}\n                        >   \n                            <Image\n                                style={{\n                                display:'block',\n                                height:'20px',\n                                width:'20px',\n                                borderTopLeftRadius:10,\n                                borderTopRightRadius:10,\n                                zIndex:1,\n                                pointerEvents:'none'\n                                // transform:[{\n                                //     translateX:'0px',\n                                //     translateY:'0px'\n                                // }]\n                                }}\n                                source={clipOff}\n\n                                >\n                                \n                            </Image>\n                        </TouchableOpacity>\n                        <TouchableOpacity\n                        \n                        onPress={()=>{  \n                          \n                          Linking.openURL('/partDetail?mt_no='+brandData.bestproducts_brand[index].mt_no)\n                      }}\n                        >\n                        <Image\n                          style={{\n                          display:'block',\n                          height:'170px',\n                          width:'170px',\n                          borderTopLeftRadius:10,\n                          borderTopRightRadius:10,\n                          zIndex:1,\n                          pointerEvents:'none',\n                          filter:hover==index ? 'brightness(90%)':'brightness(100%)'\n                          // transform:[{\n                          //     translateX:'0px',\n                          //     translateY:'0px'\n                          // }]\n                          }}\n                          source={{\n                              uri:\n                                  material.mt_feature_img_url\n                          }}\n  \n                        >\n                        </Image>\n                        <View\n                          style ={{\n                            height:'70px',\n                            width:'170px',\n                            fontSize: '12pt',\n                            fontWeight:'500',\n                            textDecorationLine:'none',\n                            color:'white',\n                            textAlign:'center',\n                            flexDirection:'column',\n                            pointerEvents:'none',\n                            backgroundColor:'white',\n                            pointerEvents:'none',\n                            borderBottomLeftRadius:10,\n                            borderBottomRightRadius:10,\n                            padding:'10px'\n                          }}\n                        >\n                           <TouchableOpacity\n                      style={{\n                          zIndex:100,\n                          backgroundColor:'transparent',\n                          position:'absolute',\n                          top:'7px',\n                          right:'7px',\n                          height:'30px',\n                          width:'30px',\n                          display:material.mt_isdelivery==\"Y\"?\"block\":\"none\"\n                      }}\n                      onPress={()=>{\n                          console.log(material)\n                      }}\n                  >\n                  <View\n                  style={{\n                      backgroundColor:'transparent',\n                      display:'flex',\n                      height:'30px',\n                      width:'30px',\n                      // position:'absolute',\n                      // top:'7px',\n                      // right:'15px'\n                  }}\n                  >\n                      \n                      <img\n                        src={boxIcon}\n                                  style={{\n                                      //display: categoryOpened? 'none': 'block',\n                                      width:'30px',\n                                      height:'30px',\n                                      right:'15px'\n                                  }}\n                              >\n                              </img>\n                          \n                      </View>\n                      </TouchableOpacity>\n                          <Text\n                            style ={{\n                                // height:'65pt',\n                                // width:'250px',\n                                fontSize: '8pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                color:'black',\n                                textAlign:'left',\n                                //alignItems:'center',\n                                //justifyContent:'center',\n                                //flexDirection:'row',\n                                //marginTop:'45pt',\n                                pointerEvents:'none',\n                                backgroundColor:'transparent',\n                                pointerEvents:'none',\n                                \n                            }}\n                        >\n                            {material.vd_name}\n                        </Text>\n                          <Text\n                                style ={{\n                                    height:'100px',\n                                    width:'120px',\n                                    fontSize: '8pt',\n                                    fontWeight:'500',\n                                    textDecorationLine:'none',\n                                    color:'black',\n                                    textAlign:'left',\n                                    alignItems:'center',\n                                    justifyContent:'center',\n                                    flexDirection:'row',\n                                    // marginLeft:'1px',\n                                    // marginTop:'1px',\n                                    pointerEvents:'none',\n                                    backgroundColor:'transparent',\n                                    pointerEvents:'none',\n                                    \n                                    \n                                }}\n                            >\n                            {material.mt_subname}\n                            \n                          </Text>\n                          <Text\n                            style ={{\n                                height:'100px',\n                                width:'120px',\n                                fontSize: '8pt',\n                                fontWeight:'500',\n                                textDecorationLine:'none',\n                                color:'rgb(85,85,85)',\n                                textAlign:'left',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                flexDirection:'row',\n                                // marginLeft:'1px',\n                                // marginTop:'1px',\n                                pointerEvents:'none',\n                                backgroundColor:'transparent',\n                                pointerEvents:'none',\n                                whiteSpace:'nowrap',\n                                textOverflow: 'ellipsis',\n                                overflow:'hidden'\n                            }}\n                        >\n                        {material.mt_name}\n                        \n                    </Text>\n                          \n                </View>\n                </TouchableOpacity>\n              </View>\n            \n              \n                )}\n              \n              </div>\n              </div>\n              <div\n                  style={{\n                    textAlign:'left',\n                    paddingLeft:'150px',\n                    paddingRight:'150px',\n                    paddingTop:'50px'\n                  }}\n                >\n                \n                <br></br>\n                \n                \n                \n                </div>\n              </div>\n              <div\n                  style={{\n                    height:'100px',\n                    width:'100vw',\n                    backgroundColor:'transparent'\n                  }}\n                >\n  \n                </div>\n              </div>\n            )\n          }\n      }\n      else{\n        console.log(brandData);\n        return(\n          <div>\n            <Navbar />\n            <NavBarFiller/>\n            <Image\n                    style={{\n                    display:'block',\n                    height:'200pt',\n                    width:'200pt',\n                    borderTopLeftRadius:10,\n                    borderTopRightRadius:10,\n                    // zIndex:1,\n                    pointerEvents:'none',\n                    transform:[{\n                        translateX:'0px',\n                        translateY:'0px'\n                    }]\n                    }}\n                    source={{\n                        uri:\n                            // data.listCategory[i].ct_img_url\n                            //listMoodboard.mb_img_url\n                            brandData.brd_feature_img_url\n                    }}\n\n                >\n                </Image>\n                <Image\n                    style={{\n                    display:'block',\n                    height:'200pt',\n                    width:'200pt',\n                    borderTopLeftRadius:10,\n                    borderTopRightRadius:10,\n                    // zIndex:1,\n                    pointerEvents:'none',\n                    transform:[{\n                        translateX:'0px',\n                        translateY:'0px'\n                    }]\n                    }}\n                    source={{\n                        uri:\n                            // data.listCategory[i].ct_img_url\n                            //listMoodboard.mb_img_url\n                            brandData.brd_logo_img_url\n                    }}\n\n                >\n                </Image>\n            <Text>{brandData.brd_name_kor}</Text>\n            <Text>\n              {brandData.brd_intro}\n            </Text>\n            <Text>\n              {brandData.brd_description}\n            </Text>\n            \n\n          </div>\n        )\n      }\n    }\n    else{\n      return (\n        \n        <div\n                    style={{\n                      position:'fixed',\n                      // height:'200vh',\n                      width:'100vw',\n                      top:'100px',\n                      left:0,\n                      backgroundColor:'white',\n                      // display:`${brandsDropDownDisplay}%`,\n                      display:'block',\n                      // overflowY:'scroll'\n                    }}\n                  > \n                   \n                      <div\n                      style={{\n                        paddingTop:'50px',\n                        paddingLeft:'65px',\n                        paddingRight:'65px'\n                      }}\n                      >\n                        <div\n                          style={{\n                            textAlign:'left',\n                            // margin:'25pt'\n                            paddingLeft:'25px'\n                          }}\n                        >\n\n                          <Text\n                            style ={{\n                              fontSize: '40px',\n                              fontWeight:'700',\n                              textDecorationLine:'none',\n                              // color:'white',\n                              // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                              // textShadowOffset: {width: 0, height: 0},\n                              // textShadowRadius: 2,\n                              color:'black',\n                              textAlign:'center',\n                              alignItems:'center',\n                              justifyContent:'center',\n                              flexDirection:'row',\n                              // margin:11,\n                              marginTop:'5px',\n                              padding:'auto',\n                              pointerEvents:'none'\n                            }}\n                          >\n                            브랜드\n                          </Text>\n                        </div>\n                        <div\n                        style={{\n                          padding:'25px'\n                        }}\n                        >\n                        <div\n                        style={{\n                          // columnCount:3,\n                          flexwrap:'wrap',\n                          display: 'grid',\n                          gridTemplateColumns: 'auto auto auto',\n                          overflowY: 'scroll'\n                        }}\n                        > \n                      \n                        {brandListData.map((brand)=>\n                        <TouchableOpacity\n                          onPress={() => \n                            Linking.openURL(`/brands?ct_id=${brand.ct_id}`)\n                          }\n                        >\n                        <div\n                         style={{\n                           textAlign:'left',\n                           padding:'5pt'\n                         }}\n                        >\n\n                          <Text\n                            style ={{\n                              height:'65pt',\n                              width:'250px',\n                              fontSize: '15pt',\n                              fontWeight:'700',\n                              textDecorationLine:'none',\n                              color:'black',\n                              textAlign:'left',\n                              alignItems:'center',\n                              justifyContent:'center',\n                              flexDirection:'row',\n                              marginTop:'45pt',\n                              pointerEvents:'none',\n                              backgroundColor:'transparent',\n                              pointerEvents:'none',\n                              \n                          }}\n                          >\n                            {brand.ct_text}\n                          </Text>\n                          <br></br>\n                        </div>\n                        </TouchableOpacity>\n                        )}\n                          \n                        </div>\n                        </div>\n                      </div> \n                  </div>\n      );\n    }\n  }\n  else{\n    return (\n      <div>\n      <Navbar />\n      <NavBarFiller/>\n        <div className=\"MainContent\">\n        \n            <Navbar />\n            <NavBarFiller/>\n            <Text>\n            로딩중 ...\n            </Text>\n            {/* <Content/> */}\n            \n            \n        \n        </div>\n      </div>\n    );\n}\n  }\n  export default Brands;","/Users/bernardahn/Documents/GitHub/clip/src/components/MainMaterialCategory.js",["295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314"],"import React,{useEffect} from 'react';\nimport Navbar from './Navbar';\n\nimport NavBarFiller from './NavBarFiller';\nimport {TouchableOpacity,Text,Image,View,Modal,TouchableHighlight,Dimensions,Linking} from 'react-native';\n\nfunction MainMaterialCategory() {\n\n    const[data,setData]=React.useState(undefined)\n    const [height,setHeight]=React.useState(Dimensions.get('window').height)\n    const [width,setWidth]=React.useState(Dimensions.get('window').width)\n    const onChange=()=>{\n        setHeight(Dimensions.get('window').height)\n        setWidth(Dimensions.get('window').width)\n        // console.log(height+\" : \"+width)\n      }\n      useEffect(() => {\n        Dimensions.addEventListener('change',onChange)\n        fetch('/Mainitem')\n            .then(res=>res.json())\n            .catch(err=>{\n                console.log(err)\n            })\n            .then(incomingData=>setData(incomingData),()=>{\n            \n            console.log(data)\n            console.log('data read : ' , data.listCategory[0].ct_img_url);\n            })\n            .catch(err=>{\n                console.log(err)\n            })\n      },[])\n    \n    if(width>1000){\n\n        if(data!=undefined){\n            return (\n                <div className=\"MainContent\"\n                    style={{\n                        display:'block',\n                        height:'auto',\n\n                    }}\n                >\n                <div\n                    style={{\n                        display:'block',\n                        height:'50px',\n                        backgroundColor:'transparent',\n                        topMargin:'77pt',\n                        flexDirection:'column',\n                        textAlign:'left',\n                        paddingLeft:'100px'\n                    }}\n                >\n                    <Text\n                        style={{\n                            fontSize: '25px',\n                            fontWeight:'700',\n                            textDecorationLine:'none',\n                            // color:'white',\n                            // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                            // textShadowOffset: {width: 0, height: 0},\n                            // textShadowRadius: 2,\n                            color:'black',\n                            textAlign:'left',\n                            alignItems:'center',\n                            justifyContent:'center',\n                            flexDirection:'row',\n                            margin:11,\n                            padding:'auto',\n                            zIndex:2\n                            // backgroundColor:'red'\n                        }}\n                    > \n                    자재 카테고리\n                    </Text> \n                </div>   \n                        <View\n                            style={{\n                                flex: 1, \n                                // flexDirection: 'row',\n                                // justifyContent: 'space-between',\n                                flexwrap:'wrap',\n                                display: 'grid',\n                                gridTemplateColumns: 'auto auto auto',\n                                padding: '10px'\n                            }}\n                        >\n                            \n                        \n                    {data.listCategory.map((listCategory)=>\n\n                    \n                        <TouchableOpacity\n                        style={{\n                            borderRadius:10,\n                            height:'50pt',\n                            width:\"350px\",\n                            backgroundColor:'white',\n                            boxShadow:'0px 0px 2px',\n                            \n                                fontSize: '25pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                // color:'white',\n                                // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                // textShadowOffset: {width: 0, height: 0},\n                                // textShadowRadius: 2,\n                                color:'black',\n                                textAlign:'left',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                flexDirection:'row',\n                                marginLeft:'auto',\n                                marginRight:'auto',\n                                marginTop:'25pt',\n                                padding:'auto',\n                                zIndex:2\n                                // backgroundColor:'red'\n                            \n                        }}\n                        //onPress={() => Linking.openURL(`/category?cat_num=${listCategory.ct_id}`)}\n                        onPress={() => Linking.openURL(`/searchPage?search_target=CATEGORY_DEPTH1&search_value=${listCategory.ct_id}`)}\n                    >\n                    \n                    <Image\n                        style={{\n                        display:'block',\n                        height:'50pt',\n                        width:'60pt',\n                        borderTopLeftRadius:10,\n                        borderBottomLeftRadius:10,\n                        zIndex:1,\n                        pointerEvents:'none',\n                        transform:[{\n                            translateX:'-35px',\n                            translateY:'-100px'\n                        }]\n                        }}\n                        source={{\n                            uri:\n                                // data.listCategory[i].ct_img_url\n                                listCategory.ct_img_url\n                        }}\n\n                    >\n                    </Image>\n                    <a\n                        style={{\n                        transform:[{\n                            translateX:'100px'\n                        }]\n                        }}\n                    >\n                        <View\n                            style ={{\n                                height:'50pt',\n                                width:'200px',\n                                fontSize: '15pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                // color:'white',\n                                // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                // textShadowOffset: {width: 0, height: 0},\n                                // textShadowRadius: 2,\n                                color:'black',\n                                textAlign:'center',\n                                // alignItems:'center',\n                                // justifyContent:'center',\n                                flexDirection:'row',\n                                // margin:11,\n                                // padding:'auto',\n                                pointerEvents:'none',\n                                borderTopRightRadius:10,\n                                borderBottomRightRadius:10,\n                                backgroundColor:'white',\n                                // zIndex:99,\n                                pointerEvents:'none',\n                                \n                            }}\n                        >\n                            <View\n                                style ={{\n                                    height:'40pt',\n                                    width:'100px',\n                                    fontSize: '15pt',\n                                    fontWeight:'700',\n                                    textDecorationLine:'none',\n                                    // color:'white',\n                                    // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                    // textShadowOffset: {width: 0, height: 0},\n                                    // textShadowRadius: 2,\n                                    color:'black',\n                                    textAlign:'center',\n                                    alignItems:'center',\n                                    justifyContent:'center',\n                                    flexDirection:'row',\n                                    marginLeft:'5pt',\n                                    // padding:'auto',\n                                    pointerEvents:'none',\n                                    backgroundColor:'white',\n                                    // zIndex:99,\n                                    pointerEvents:'none',\n                                    backgroundColor:'transparent',\n                                    // transform:[{\n                                    //     translateX:'-10px',\n                                    //     translateY:'-100px'\n                                    // }],\n                                    lineHeight:'65pt',\n                                }}\n                            >\n                                <Text\n                                    style ={{\n                                        // position:'absolute',\n                                        // top:'0px',\n                                        height:'50pt',\n                                        width:'99px',\n                                        fontSize: '15pt',\n                                        fontWeight:'700',\n                                        textDecorationLine:'none',\n                                        \n                                        // color:'white',\n                                        // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                        // textShadowOffset: {width: 0, height: 0},\n                                        // textShadowRadius: 2,\n                                        color:'black',\n                                        textAlign:'left',\n                                        alignItems:'center',\n                                        justifyContent:'center',\n                                        flexDirection:'row',\n                                        marginTop:'45pt',\n                                        // padding:'auto',\n                                        pointerEvents:'none',\n                                        backgroundColor:'transparent',\n                                        // zIndex:99,\n                                        pointerEvents:'none',\n                                        whiteSpace:'nowrap'\n                                    }}\n                                >\n                                    {/* {data.listCategory[i].ct_text} */}\n                                    {listCategory.ct_text}\n                                </Text>\n                            </View>\n                        </View>\n                    </a>\n                    </TouchableOpacity>\n                    )}\n                    </View>\n                    {/* <Text> */}\n                    {/* {data.listCategory[0].ct_img_url} */}\n                    {/* construction */}\n                    {/* <img \n                        style={{\n                        height:'65pt',\n                        width:'99pt',\n                        }} src={data.listCategory[0].ct_img_url}\n                    /> */}\n                    \n                    \n                    {/* </Text> */}\n                    {/* <Content/> */}\n                    \n                    \n                \n                </div>\n            );\n        }\n        else{\n            return (\n                <div className=\"MainContent\">\n                \n                    <Navbar />\n                    <NavBarFiller/>\n                    <Text>\n                    로딩중 ...\n                    </Text>\n                    {/* <Content/> */}\n                    \n                    \n                \n                </div>\n            );\n        }\n    \n    }\n    else if(width>803 && width<=1000){\n        if(data!=undefined){\n            return (\n                <div className=\"MainContent\"\n                    style={{\n                        display:'block',\n                        height:'auto',\n\n                    }}\n                >\n                    \n                    <Text\n                        style={{\n                            fontSize: '25px',\n                            fontWeight:'700',\n                            textDecorationLine:'none',\n                            // color:'white',\n                            // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                            // textShadowOffset: {width: 0, height: 0},\n                            // textShadowRadius: 2,\n                            color:'black',\n                            textAlign:'left',\n                            alignItems:'center',\n                            justifyContent:'center',\n                            flexDirection:'row',\n                            margin:11,\n                            padding:'auto',\n                            zIndex:2\n                            // backgroundColor:'red'\n                        }}\n                    > \n                    자재 카테고리\n                    </Text> \n                        <View\n                            style={{\n                                flex: 1, \n                                // flexDirection: 'row',\n                                // justifyContent: 'space-between',\n                                flexwrap:'wrap',\n                                display: 'grid',\n                                gridTemplateColumns: 'auto auto',\n                                padding: '10px'\n                            }}\n                        >\n                            \n                        \n                    {data.listCategory.map((listCategory)=>\n\n                    \n                        <TouchableOpacity\n                        style={{\n                            borderRadius:10,\n                            height:'50pt',\n                            width:\"350px\",\n                            backgroundColor:'white',\n                            boxShadow:'0px 0px 2px',\n                            \n                                fontSize: '25pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                // color:'white',\n                                // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                // textShadowOffset: {width: 0, height: 0},\n                                // textShadowRadius: 2,\n                                color:'black',\n                                textAlign:'left',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                flexDirection:'row',\n                                marginLeft:'auto',\n                                marginRight:'auto',\n                                marginTop:'25pt',\n                                padding:'auto',\n                                zIndex:2\n                                // backgroundColor:'red'\n                            \n                        }}\n                        //onPress={() => Linking.openURL(`/category?cat_num=${listCategory.ct_id}`)}\n                        onPress={() => Linking.openURL(`/searchPage?search_target=CATEGORY_DEPTH1&search_value=${listCategory.ct_id}`)}\n                    >\n                    \n                    <Image\n                        style={{\n                        display:'block',\n                        height:'50pt',\n                        width:'60pt',\n                        borderTopLeftRadius:10,\n                        borderBottomLeftRadius:10,\n                        zIndex:1,\n                        pointerEvents:'none',\n                        transform:[{\n                            translateX:'-35px',\n                            translateY:'-100px'\n                        }]\n                        }}\n                        source={{\n                            uri:\n                                // data.listCategory[i].ct_img_url\n                                listCategory.ct_img_url\n                        }}\n\n                    >\n                    </Image>\n                    <a\n                        style={{\n                        transform:[{\n                            translateX:'100px'\n                        }]\n                        }}\n                    >\n                        <View\n                            style ={{\n                                height:'50pt',\n                                width:'200px',\n                                fontSize: '15pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                // color:'white',\n                                // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                // textShadowOffset: {width: 0, height: 0},\n                                // textShadowRadius: 2,\n                                color:'black',\n                                textAlign:'center',\n                                // alignItems:'center',\n                                // justifyContent:'center',\n                                flexDirection:'row',\n                                // margin:11,\n                                // padding:'auto',\n                                pointerEvents:'none',\n                                borderTopRightRadius:10,\n                                borderBottomRightRadius:10,\n                                backgroundColor:'white',\n                                // zIndex:99,\n                                pointerEvents:'none',\n                                \n                            }}\n                        >\n                            <View\n                                style ={{\n                                    height:'40pt',\n                                    width:'99px',\n                                    fontSize: '15pt',\n                                    fontWeight:'700',\n                                    textDecorationLine:'none',\n                                    // color:'white',\n                                    // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                    // textShadowOffset: {width: 0, height: 0},\n                                    // textShadowRadius: 2,\n                                    color:'black',\n                                    textAlign:'center',\n                                    alignItems:'center',\n                                    justifyContent:'center',\n                                    flexDirection:'row',\n                                    marginLeft:'5pt',\n                                    // padding:'auto',\n                                    pointerEvents:'none',\n                                    backgroundColor:'white',\n                                    // zIndex:99,\n                                    pointerEvents:'none',\n                                    lineHeight:'50pt'\n                                }}\n                            >\n                                <Text\n                                    style ={{\n                                        height:'50pt',\n                                        width:'99px',\n                                        fontSize: '15pt',\n                                        fontWeight:'700',\n                                        textDecorationLine:'none',\n                                        // color:'white',\n                                        // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                        // textShadowOffset: {width: 0, height: 0},\n                                        // textShadowRadius: 2,\n                                        color:'black',\n                                        textAlign:'left',\n                                        alignItems:'center',\n                                        justifyContent:'center',\n                                        flexDirection:'row',\n                                        marginTop:'45pt',\n                                        // padding:'auto',\n                                        pointerEvents:'none',\n                                        backgroundColor:'transparent',\n                                        // zIndex:99,\n                                        pointerEvents:'none',\n                                        whiteSpace:'nowrap'\n                                    }}\n                                >\n                                    {/* {data.listCategory[i].ct_text} */}\n                                    {listCategory.ct_text}\n                                </Text>\n                            </View>\n                        </View>\n                    </a>\n                    </TouchableOpacity>\n                    )}\n                    </View>\n                    {/* <Text> */}\n                    {/* {data.listCategory[0].ct_img_url} */}\n                    {/* construction */}\n                    {/* <img \n                        style={{\n                        height:'65pt',\n                        width:'99pt',\n                        }} src={data.listCategory[0].ct_img_url}\n                    /> */}\n                    \n                    \n                    {/* </Text> */}\n                    {/* <Content/> */}\n                    \n                    \n                \n                </div>\n            );\n        }\n        else{\n            return (\n                <div className=\"MainContent\">\n                \n                    <Navbar />\n                    <NavBarFiller/>\n                    <Text>\n                    로딩중 ...\n                    </Text>\n                    {/* <Content/> */}\n                    \n                    \n                \n                </div>\n            );\n        }\n    }\n    else{\n        if(data!=undefined){\n            return (\n                <div className=\"MainContent\"\n                    style={{\n                        display:'block',\n                        height:'auto',\n\n                    }}\n                >\n                    \n                    <Text\n                        style={{\n                            fontSize: '25px',\n                            fontWeight:'700',\n                            textDecorationLine:'none',\n                            // color:'white',\n                            // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                            // textShadowOffset: {width: 0, height: 0},\n                            // textShadowRadius: 2,\n                            color:'black',\n                            textAlign:'left',\n                            alignItems:'center',\n                            justifyContent:'center',\n                            flexDirection:'row',\n                            margin:11,\n                            padding:'auto',\n                            zIndex:2\n                            // backgroundColor:'red'\n                        }}\n                    > \n                    자재 카테고리\n                    </Text> \n                        <View\n                            style={{\n                                flex: 1, \n                                // flexDirection: 'row',\n                                // justifyContent: 'space-between',\n                                flexwrap:'wrap',\n                                display: 'grid',\n                                gridTemplateColumns: 'auto',\n                                padding: '10px'\n                            }}\n                        >\n                            \n                        \n                    {data.listCategory.map((listCategory)=>\n\n                    \n                        <TouchableOpacity\n                        style={{\n                            borderRadius:10,\n                            height:'50pt',\n                            width:\"350px\",\n                            backgroundColor:'white',\n                            boxShadow:'0px 0px 2px',\n                            \n                                fontSize: '25pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                // color:'white',\n                                // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                // textShadowOffset: {width: 0, height: 0},\n                                // textShadowRadius: 2,\n                                color:'black',\n                                textAlign:'left',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                flexDirection:'row',\n                                marginLeft:'auto',\n                                marginRight:'auto',\n                                marginTop:'25pt',\n                                padding:'auto',\n                                zIndex:2\n                                // backgroundColor:'red'\n                        }}\n                        // onPress={() => Linking.openURL(`/category:${listCategory.ct_id}`)}\n                        onPress={() => Linking.openURL(`/searchPage?search_target=CATEGORY_DEPTH1&search_value=${listCategory.ct_id}`)}\n                    >\n                    \n                    <Image\n                        style={{\n                        display:'block',\n                        height:'50pt',\n                        width:'60pt',\n                        borderTopLeftRadius:10,\n                        borderBottomLeftRadius:10,\n                        zIndex:1,\n                        pointerEvents:'none',\n                        transform:[{\n                            translateX:'-35px',\n                            translateY:'-100px'\n                        }]\n                        }}\n                        source={{\n                            uri:\n                                // data.listCategory[i].ct_img_url\n                                listCategory.ct_img_url\n                        }}\n\n                    >\n                    </Image>\n                    <a\n                        style={{\n                        transform:[{\n                            translateX:'100px'\n                        }]\n                        }}\n                    >\n                        <View\n                            style ={{\n                                height:'50pt',\n                                width:'200px',\n                                fontSize: '15pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                // color:'white',\n                                // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                // textShadowOffset: {width: 0, height: 0},\n                                // textShadowRadius: 2,\n                                color:'black',\n                                textAlign:'center',\n                                // alignItems:'center',\n                                // justifyContent:'center',\n                                flexDirection:'row',\n                                // margin:11,\n                                // padding:'auto',\n                                pointerEvents:'none',\n                                borderTopRightRadius:10,\n                                borderBottomRightRadius:10,\n                                backgroundColor:'white',\n                                // zIndex:99,\n                                pointerEvents:'none',\n                                \n                            }}\n                        >\n                            <View\n                                style ={{\n                                    height:'50pt',\n                                    width:'99px',\n                                    fontSize: '15pt',\n                                    fontWeight:'700',\n                                    textDecorationLine:'none',\n                                    // color:'white',\n                                    // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                    // textShadowOffset: {width: 0, height: 0},\n                                    // textShadowRadius: 2,\n                                    color:'black',\n                                    textAlign:'center',\n                                    alignItems:'center',\n                                    justifyContent:'center',\n                                    flexDirection:'row',\n                                    marginLeft:'5pt',\n                                    // padding:'auto',\n                                    pointerEvents:'none',\n                                    backgroundColor:'white',\n                                    // zIndex:99,\n                                    pointerEvents:'none',\n                                    \n                                }}\n                            >\n                                <Text\n                                    style ={{\n                                        height:'65pt',\n                                        width:'99px',\n                                        fontSize: '15pt',\n                                        fontWeight:'700',\n                                        textDecorationLine:'none',\n                                        // color:'white',\n                                        // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                        // textShadowOffset: {width: 0, height: 0},\n                                        // textShadowRadius: 2,\n                                        color:'black',\n                                        textAlign:'left',\n                                        alignItems:'center',\n                                        justifyContent:'center',\n                                        flexDirection:'row',\n                                        marginTop:'45pt',\n                                        // padding:'auto',\n                                        pointerEvents:'none',\n                                        backgroundColor:'transparent',\n                                        // zIndex:99,\n                                        pointerEvents:'none',\n                                        whiteSpace:'nowrap'\n                                    }}\n                                >\n                                    {/* {data.listCategory[i].ct_text} */}\n                                    {listCategory.ct_text}\n                                </Text>\n                            </View>\n                        </View>\n                    </a>\n                    </TouchableOpacity>\n                    )}\n                    </View>\n                    {/* <Text> */}\n                    {/* {data.listCategory[0].ct_img_url} */}\n                    {/* construction */}\n                    {/* <img \n                        style={{\n                        height:'65pt',\n                        width:'99pt',\n                        }} src={data.listCategory[0].ct_img_url}\n                    /> */}\n                    \n                    \n                    {/* </Text> */}\n                    {/* <Content/> */}\n                    \n                    \n                \n                </div>\n            );\n        }\n        else{\n            return (\n                <div className=\"MainContent\">\n                \n                    <Navbar />\n                    <NavBarFiller/>\n                    <Text>\n                    로딩중 ...\n                    </Text>\n                    {/* <Content/> */}\n                    \n                    \n                \n                </div>\n            );\n        }\n    }\n}\n  \n  export default MainMaterialCategory;","/Users/bernardahn/Documents/GitHub/clip/src/components/MainMoodBoard.js",["315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338"],"import React,{useEffect} from 'react';\nimport Navbar from './Navbar';\nimport NavBarFiller from './NavBarFiller';\nimport {TouchableOpacity,Text,Image,View,Modal,TouchableHighlight,Dimensions,Linking} from 'react-native';\n\nfunction MainMoodBoard() {\n\n    const[data,setData]=React.useState(undefined)\n    const [height,setHeight]=React.useState(Dimensions.get('window').height)\n    const [width,setWidth]=React.useState(Dimensions.get('window').width)\n    const onChange=()=>{\n        setHeight(Dimensions.get('window').height)\n        setWidth(Dimensions.get('window').width)\n        // console.log(height+\" : \"+width)\n      }\n      useEffect(() => {\n        Dimensions.addEventListener('change',onChange)\n        fetch('/Mainitem')\n            .then(res=>res.json())\n            .catch(err=>{\n                console.log(err)\n            })\n            .then(incomingData=>setData(incomingData),()=>{\n            // console.log(data)\n            console.log('data read : ' , data.listCategory[0].ct_img_url);\n            })\n            .catch(err=>{\n                console.log(err)\n            })\n      },[])\n    \n    if(width>940){\n\n        if(data!=undefined){\n            return (\n                <div className=\"MainContent\"\n                    style={{\n                        display:'block',\n                        height:'auto',\n                        backgroundColor:'black',\n                        paddingTop:'77pt'\n                    }}\n                >\n                    <div\n                        style={{\n                            display:'block',\n                            height:'150px',\n                            backgroundColor:'transparent',\n                            topMargin:'77pt',\n                            flexDirection:'column',\n                            textAlign:'left',\n                            paddingLeft:'100px'\n                        }}\n                    >\n                        \n                        <TouchableOpacity\n                        onPress={()=>{  \n                            Linking.openURL('/searchpage?mode=moodboard')\n                        }}\n                        >\n                            <div\n                                style={{\n                                    position:'absolute',\n                                    right:'100px',\n                                    top:'0px',\n                                    borderRadius:10,\n                                    border:'1px solid white',\n                                    height:\"30px\",\n                                    width:'100px',\n                                    textAlign:'center'\n                                }}\n                            >\n                                <Text\n                                    style={{\n                                        color:'white',\n                                        lineHeight:'30px',\n\n                                    }}\n                                >\n                                    모두 둘러보기\n                                </Text>\n                            </div>\n                        </TouchableOpacity>\n\n                        <Text\n                            style={{\n                                fontSize: '25pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                color:'white',\n                                textAlign:'left',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                flexDirection:'row',\n                                marginTop:'40px',\n                                marginBottom:'40px',\n                                padding:'auto',\n                                zIndex:2\n                                // backgroundColor:'red'\n                            }}\n                        > \n                        무드보드\n                        </Text> \n                        <br></br>\n                        <Text\n                            style={{\n                                fontSize: '15pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                color:'white',\n                                textAlign:'left',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                flexDirection:'row',\n                                marginTop:'40px',\n                                marginBottom:'40px',\n                                padding:'auto',\n                                zIndex:2\n                                // backgroundColor:'red'\n                            }}\n                        > \n                            새로운 아이디어와 컨셉을 찾아보세요.\n                        </Text> \n                        <br></br>\n                        <Text\n                            style={{\n                                fontSize: '15pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                color:'white',\n                                textAlign:'left',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                flexDirection:'row',\n                                marginTop:'40px',\n                                marginBottom:'40px',\n                                padding:'auto',\n                                zIndex:2\n                                // backgroundColor:'red'\n                            }}\n                        > \n                            어떤 자재가 어떤 컨셉으로 활용되는지 알아볼 수 있습니다.\n                        </Text> \n                    </div>\n                        <View\n                            style={{\n                                flex: 1, \n                                // flexDirection: 'row',\n                                // justifyContent: 'space-between',\n                                flexwrap:'wrap',\n                                display: 'grid',\n                                gridTemplateColumns: 'auto auto auto',\n                                paddingLeft: '77pt',\n                                paddingRight: '77pt'\n                            }}\n                        >\n                            \n                        \n                    {data.listMoodboard.map((listMoodboard)=>{\n                        // console.log(listMoodboard)\n                    return(\n                        <TouchableOpacity\n                        onPress={()=>{\n                            Linking.openURL(`/moodboarddetail?mb_no=${listMoodboard.mb_no}`)\n                        }}\n                        style={{\n                            flexDirection:'column',\n                            borderRadius:10,\n                            height:'260pt',\n                            width:\"200pt\",\n                            backgroundColor:'rgb(33,33,33)',\n                            // boxShadow:'0px 0px 2px',\n                            \n                                fontSize: '25pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                // color:'white',\n                                // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                // textShadowOffset: {width: 0, height: 0},\n                                // textShadowRadius: 2,\n                                color:'black',\n                                textAlign:'left',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                flexDirection:'column',\n                                marginLeft:'25pt',\n                                marginRight:'25pt',\n                                marginTop:'25pt',\n                                padding:'auto',\n                                zIndex:2\n                                // backgroundColor:'red'\n                            \n                        }}\n                    >\n                    \n                    <Image\n                        style={{\n                        display:'block',\n                        height:'200pt',\n                        width:'200pt',\n                        borderTopLeftRadius:10,\n                        borderTopRightRadius:10,\n                        zIndex:1,\n                        pointerEvents:'none',\n                        transform:[{\n                            translateX:'0px',\n                            translateY:'0px'\n                        }]\n                        }}\n                        source={{\n                            uri:\n                                // data.listCategory[i].ct_img_url\n                                listMoodboard.mb_img_url\n                        }}\n\n                    >\n                    </Image>\n                    {/* <a\n                        style={{\n                        transform:[{\n                            translateX:'100px'\n                        }]\n                        }}\n                    > */}\n                        <View\n                            style ={{\n                                height:'60pt',\n                                width:'200pt',\n                                fontSize: '15pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                // color:'white',\n                                // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                // textShadowOffset: {width: 0, height: 0},\n                                // textShadowRadius: 2,\n                                color:'black',\n                                textAlign:'center',\n                                // alignItems:'center',\n                                // justifyContent:'center',\n                                flexDirection:'row',\n                                // margin:11,\n                                // padding:'auto',\n                                pointerEvents:'none',\n                                // borderTopRightRadius:20,\n                                // borderBottomRightRadius:20,\n                                backgroundColor:'rgb(33,33,33)',\n                                // zIndex:99,\n                                pointerEvents:'none',\n                                borderBottomLeftRadius:10,\n                                borderBottomRightRadius:10,\n                                // left:0,\n                                \n                            }}\n                        >\n                            <View\n                                style ={{\n                                    height:'60pt',\n                                    width:'190pt',\n                                    fontSize: '15pt',\n                                    fontWeight:'700',\n                                    textDecorationLine:'none',\n                                    // color:'white',\n                                    // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                    // textShadowOffset: {width: 0, height: 0},\n                                    // textShadowRadius: 2,\n                                    borderBottomLeftRadius:10,\n                                    borderBottomRightRadius:10,\n                                    color:'black',\n                                    textAlign:'center',\n                                    alignItems:'center',\n                                    justifyContent:'center',\n                                    flexDirection:'row',\n                                    marginLeft:'5pt',\n                                    // padding:'auto',\n                                    pointerEvents:'none',\n                                    backgroundColor:\"rgb(33,33,33)\",\n                                    // zIndex:99,\n                                    pointerEvents:'none',\n                                    \n                                }}\n                            >\n                                <Text\n                                    style ={{\n                                        height:'65pt',\n                                        width:'250px',\n                                        fontSize: '15pt',\n                                        fontWeight:'700',\n                                        textDecorationLine:'none',\n                                        // color:'white',\n                                        // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                        // textShadowOffset: {width: 0, height: 0},\n                                        // textShadowRadius: 2,\n                                        color:'white',\n                                        textAlign:'left',\n                                        alignItems:'center',\n                                        justifyContent:'center',\n                                        flexDirection:'row',\n                                        marginTop:'45pt',\n                                        // padding:'auto',\n                                        pointerEvents:'none',\n                                        backgroundColor:'transparent',\n                                        // zIndex:99,\n                                        pointerEvents:'none',\n                                        \n                                    }}\n                                >\n                                    {/* {data.listCategory[i].ct_text} */}\n                                    {listMoodboard.mb_name}\n                                </Text>\n                            </View>\n                        </View>\n                    {/* </a> */}\n                    </TouchableOpacity>\n                    )}\n                    )}\n                    </View>\n                   \n                    \n                \n                </div>\n            );\n        }\n        else{\n            return (\n                <div className=\"MainContent\">\n                \n                    <Navbar />\n                    <NavBarFiller/>\n                    <Text>\n                    로딩중 ...\n                    </Text>\n                    {/* <Content/> */}\n                    \n                    \n                \n                </div>\n            );\n        }\n    \n    }\n    else if(width > 760 && width<=940){\n\n        if(data!=undefined){\n            return (\n                <div className=\"MainContent\"\n                    style={{\n                        display:'block',\n                        height:'auto',\n                        backgroundColor:'black',\n                        paddingTop:'77pt'\n\n                    }}\n                >\n                    <div\n                        style={{\n                            display:'block',\n                            height:'150px',\n                            backgroundColor:'transparent',\n                            topMargin:'77pt',\n                            flexDirection:'column',\n                            textAlign:'left',\n                            paddingLeft:'100px'\n                        }}\n                    >\n                        <TouchableOpacity\n                        \n                        onPress={()=>{  \n                            Linking.openURL('/searchpage?mode=moodboard')\n                        }}>\n                            <div\n                                style={{\n                                    position:'absolute',\n                                    right:'100px',\n                                    top:'0px',\n                                    borderRadius:10,\n                                    border:'1px solid white',\n                                    height:\"30px\",\n                                    width:'100px',\n                                    textAlign:'center'\n                                }}\n                            >\n                                <Text\n                                    style={{\n                                        color:'white',\n                                        lineHeight:'30px',\n\n                                    }}\n                                >\n                                    모두 둘러보기\n                                </Text>\n                            </div>\n                        </TouchableOpacity>\n                        <Text\n                            style={{\n                                fontSize: '25pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                color:'white',\n                                textAlign:'left',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                flexDirection:'row',\n                                marginTop:'40px',\n                                marginBottom:'40px',\n                                padding:'auto',\n                                zIndex:2\n                                // backgroundColor:'red'\n                            }}\n                        > \n                        무드보드\n                        </Text> \n                        <br></br>\n                        <Text\n                            style={{\n                                fontSize: '15pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                color:'white',\n                                textAlign:'left',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                flexDirection:'row',\n                                marginTop:'40px',\n                                marginBottom:'40px',\n                                padding:'auto',\n                                zIndex:2\n                                // backgroundColor:'red'\n                            }}\n                        > \n                            새로운 아이디어와 컨셉을 찾아보세요.\n                        </Text> \n                        <br></br>\n                        <Text\n                            style={{\n                                fontSize: '15pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                color:'white',\n                                textAlign:'left',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                flexDirection:'row',\n                                marginTop:'40px',\n                                marginBottom:'40px',\n                                padding:'auto',\n                                zIndex:2\n                                // backgroundColor:'red'\n                            }}\n                        > \n                            어떤 자재가 어떤 컨셉으로 활용되는지 알아볼 수 있습니다.\n                        </Text> \n                    </div>\n                        <View\n                            style={{\n                                flex: 1, \n                                // flexDirection: 'row',\n                                // justifyContent: 'space-between',\n                                flexwrap:'wrap',\n                                display: 'grid',\n                                gridTemplateColumns: 'auto auto',\n                                paddingLeft: '77pt',\n                                paddingRight: '77pt'\n                            }}\n                        >\n                            \n                        \n                    {data.listMoodboard.map((listMoodboard)=>\n\n                    \n                        <TouchableOpacity\n                        onPress={()=>{\n                            Linking.openURL(`/moodboarddetail?mb_no=${listMoodboard.mb_no}`)\n                        }}\n                        style={{\n                            flexDirection:'column',\n                            borderRadius:10,\n                            height:'260pt',\n                            width:\"200pt\",\n                            backgroundColor:'rgb(33,33,33)',\n                            // boxShadow:'0px 0px 2px',\n                            fontSize: '25pt',\n                            fontWeight:'700',\n                            textDecorationLine:'none',\n                            // color:'white',\n                            // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                            // textShadowOffset: {width: 0, height: 0},\n                            // textShadowRadius: 2,\n                            color:'black',\n                            textAlign:'left',\n                            alignItems:'center',\n                            justifyContent:'center',\n                            flexDirection:'column',\n                            marginLeft:'25pt',\n                            marginRight:'25pt',\n                            marginTop:'25pt',\n                            padding:'auto',\n                            zIndex:2\n                                // backgroundColor:'red'\n                            \n                        }}\n                    >\n                    \n                    <Image\n                        style={{\n                        display:'block',\n                        height:'200pt',\n                        width:'200pt',\n                        borderTopLeftRadius:10,\n                        borderTopRightRadius:10,\n                        zIndex:1,\n                        pointerEvents:'none',\n                        transform:[{\n                            translateX:'0px',\n                            translateY:'0px'\n                        }]\n                        }}\n                        source={{\n                            uri:\n                                // data.listCategory[i].ct_img_url\n                                listMoodboard.mb_img_url\n                        }}\n\n                    >\n                    </Image>\n                    {/* <a\n                        style={{\n                        transform:[{\n                            translateX:'100px'\n                        }]\n                        }}\n                    > */}\n                        <View\n                            style ={{\n                                height:'60pt',\n                                width:'200pt',\n                                fontSize: '15pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                // color:'white',\n                                // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                // textShadowOffset: {width: 0, height: 0},\n                                // textShadowRadius: 2,\n                                color:'black',\n                                textAlign:'center',\n                                // alignItems:'center',\n                                // justifyContent:'center',\n                                flexDirection:'row',\n                                // margin:11,\n                                // padding:'auto',\n                                pointerEvents:'none',\n                                // borderTopRightRadius:20,\n                                // borderBottomRightRadius:20,\n                                backgroundColor:'rgb(33,33,33)',\n                                // zIndex:99,\n                                pointerEvents:'none',\n                                borderBottomLeftRadius:10,\n                                borderBottomRightRadius:10,\n                                // left:0,\n                                \n                            }}\n                        >\n                            <View\n                                style ={{\n                                    height:'60pt',\n                                    width:'190pt',\n                                    fontSize: '15pt',\n                                    fontWeight:'700',\n                                    textDecorationLine:'none',\n                                    // color:'white',\n                                    // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                    // textShadowOffset: {width: 0, height: 0},\n                                    // textShadowRadius: 2,\n                                    borderBottomLeftRadius:10,\n                                    borderBottomRightRadius:10,\n                                    color:'black',\n                                    textAlign:'center',\n                                    alignItems:'center',\n                                    justifyContent:'center',\n                                    flexDirection:'row',\n                                    marginLeft:'5pt',\n                                    // padding:'auto',\n                                    pointerEvents:'none',\n                                    backgroundColor:\"rgb(33,33,33)\",\n                                    // zIndex:99,\n                                    pointerEvents:'none',\n                                    \n                                }}\n                            >\n                                <Text\n                                    style ={{\n                                        height:'65pt',\n                                        width:'250px',\n                                        fontSize: '15pt',\n                                        fontWeight:'700',\n                                        textDecorationLine:'none',\n                                        // color:'white',\n                                        // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                        // textShadowOffset: {width: 0, height: 0},\n                                        // textShadowRadius: 2,\n                                        color:'white',\n                                        textAlign:'left',\n                                        alignItems:'center',\n                                        justifyContent:'center',\n                                        flexDirection:'row',\n                                        marginTop:'45pt',\n                                        // padding:'auto',\n                                        pointerEvents:'none',\n                                        backgroundColor:'transparent',\n                                        // zIndex:99,\n                                        pointerEvents:'none',\n                                        \n                                    }}\n                                >\n                                    {/* {data.listCategory[i].ct_text} */}\n                                    {listMoodboard.mb_name}\n                                </Text>\n                            </View>\n                        </View>\n                    {/* </a> */}\n                    </TouchableOpacity>\n                    )}\n                    </View>\n                   \n                    \n                \n                </div>\n            );\n        }\n        else{\n            return (\n                <div className=\"MainContent\">\n                \n                    <Navbar />\n                    <NavBarFiller/>\n                    <Text>\n                    로딩중 ...\n                    </Text>\n                    {/* <Content/> */}\n                    \n                    \n                \n                </div>\n            );\n        }\n    \n    }\n    else if(width > 512 && width<=760){\n\n        if(data!=undefined){\n            return (\n                <div className=\"MainContent\"\n                    style={{\n                        display:'block',\n                        height:'auto',\n                        backgroundColor:'black',\n                        paddingTop:'77pt'\n                    }}\n                >\n                    <div\n                        style={{\n                            display:'block',\n                            height:'150px',\n                            backgroundColor:'transparent',\n                            topMargin:'77pt',\n                            flexDirection:'column',\n                            textAlign:'left',\n                            paddingLeft:'100px'\n                        }}\n                    >\n                        <Text\n                            style={{\n                                fontSize: '25pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                color:'white',\n                                textAlign:'left',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                flexDirection:'row',\n                                marginTop:'40px',\n                                marginBottom:'40px',\n                                padding:'auto',\n                                zIndex:2\n                                // backgroundColor:'red'\n                            }}\n                        > \n                        무드보드\n                        </Text> \n                        <br></br>\n                        <Text\n                            style={{\n                                fontSize: '15pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                color:'white',\n                                textAlign:'left',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                flexDirection:'row',\n                                marginTop:'40px',\n                                marginBottom:'40px',\n                                padding:'auto',\n                                zIndex:2\n                                // backgroundColor:'red'\n                            }}\n                        > \n                            새로운 아이디어와 컨셉을 찾아보세요.\n                        </Text> \n                        <br></br>\n                        <Text\n                            style={{\n                                fontSize: '15pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                color:'white',\n                                textAlign:'left',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                flexDirection:'row',\n                                marginTop:'40px',\n                                marginBottom:'40px',\n                                padding:'auto',\n                                zIndex:2\n                                // backgroundColor:'red'\n                            }}\n                        > \n                            어떤 자재가 어떤 컨셉으로 활용되는지 알아볼 수 있습니다.\n                        </Text> \n                    </div>\n                        <View\n                            style={{\n                                flex: 1, \n                                // flexDirection: 'row',\n                                // justifyContent: 'space-between',\n                                flexwrap:'wrap',\n                                display: 'grid',\n                                gridTemplateColumns: 'auto',\n                                paddingLeft: '77pt',\n                                paddingRight: '77pt'\n                            }}\n                        >\n                            \n                        \n                    {data.listMoodboard.map((listMoodboard)=>\n\n                    \n                        <TouchableOpacity\n                        onPress={()=>{\n                            Linking.openURL(`/moodboarddetail?mb_no=${listMoodboard.mb_no}`)\n                        }}\n                        style={{\n                            flexDirection:'column',\n                            borderRadius:10,\n                            height:'260pt',\n                            width:\"200pt\",\n                            backgroundColor:'rgb(33,33,33)',\n                            // boxShadow:'0px 0px 2px',\n                            \n                                fontSize: '25pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                // color:'white',\n                                // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                // textShadowOffset: {width: 0, height: 0},\n                                // textShadowRadius: 2,\n                                color:'black',\n                                textAlign:'left',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                flexDirection:'column',\n                                marginLeft:'auto',\n                                marginRight:'auto',\n                                marginTop:'25pt',\n                                padding:'auto',\n                                zIndex:2\n                                // backgroundColor:'red'\n                            \n                        }}\n                    >\n                    \n                    <Image\n                        style={{\n                        display:'block',\n                        height:'200pt',\n                        width:'200pt',\n                        borderTopLeftRadius:10,\n                        borderTopRightRadius:10,\n                        zIndex:1,\n                        pointerEvents:'none',\n                        transform:[{\n                            translateX:'0px',\n                            translateY:'0px'\n                        }]\n                        }}\n                        source={{\n                            uri:\n                                // data.listCategory[i].ct_img_url\n                                listMoodboard.mb_img_url\n                        }}\n\n                    >\n                    </Image>\n                    {/* <a\n                        style={{\n                        transform:[{\n                            translateX:'100px'\n                        }]\n                        }}\n                    > */}\n                        <View\n                            style ={{\n                                height:'60pt',\n                                width:'200pt',\n                                fontSize: '15pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                // color:'white',\n                                // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                // textShadowOffset: {width: 0, height: 0},\n                                // textShadowRadius: 2,\n                                color:'black',\n                                textAlign:'center',\n                                // alignItems:'center',\n                                // justifyContent:'center',\n                                flexDirection:'row',\n                                // margin:11,\n                                // padding:'auto',\n                                pointerEvents:'none',\n                                // borderTopRightRadius:20,\n                                // borderBottomRightRadius:20,\n                                backgroundColor:'rgb(33,33,33)',\n                                // zIndex:99,\n                                pointerEvents:'none',\n                                borderBottomLeftRadius:10,\n                                borderBottomRightRadius:10,\n                                // left:0,\n                                \n                            }}\n                        >\n                            <View\n                                style ={{\n                                    height:'60pt',\n                                    width:'190pt',\n                                    fontSize: '15pt',\n                                    fontWeight:'700',\n                                    textDecorationLine:'none',\n                                    // color:'white',\n                                    // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                    // textShadowOffset: {width: 0, height: 0},\n                                    // textShadowRadius: 2,\n                                    borderBottomLeftRadius:10,\n                                    borderBottomRightRadius:10,\n                                    color:'black',\n                                    textAlign:'center',\n                                    alignItems:'center',\n                                    justifyContent:'center',\n                                    flexDirection:'row',\n                                    marginLeft:'5pt',\n                                    // padding:'auto',\n                                    pointerEvents:'none',\n                                    backgroundColor:\"rgb(33,33,33)\",\n                                    // zIndex:99,\n                                    pointerEvents:'none',\n                                    \n                                }}\n                            >\n                                <Text\n                                    style ={{\n                                        height:'65pt',\n                                        width:'250px',\n                                        fontSize: '15pt',\n                                        fontWeight:'700',\n                                        textDecorationLine:'none',\n                                        // color:'white',\n                                        // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                        // textShadowOffset: {width: 0, height: 0},\n                                        // textShadowRadius: 2,\n                                        color:'white',\n                                        textAlign:'left',\n                                        alignItems:'center',\n                                        justifyContent:'center',\n                                        flexDirection:'row',\n                                        marginTop:'45pt',\n                                        // padding:'auto',\n                                        pointerEvents:'none',\n                                        backgroundColor:'transparent',\n                                        // zIndex:99,\n                                        pointerEvents:'none',\n                                        \n                                    }}\n                                >\n                                    {/* {data.listCategory[i].ct_text} */}\n                                    {listMoodboard.mb_name}\n                                </Text>\n                            </View>\n                        </View>\n                    {/* </a> */}\n                    </TouchableOpacity>\n                    )}\n                    </View>\n                   \n                    \n                \n                </div>\n            );\n        }\n        else{\n            return (\n                <div className=\"MainContent\">\n                \n                    <Navbar />\n                    <NavBarFiller/>\n                    <Text>\n                    로딩중 ...\n                    </Text>\n                    {/* <Content/> */}\n                    \n                    \n                \n                </div>\n            );\n        }\n    \n    }\n    else {\n\n        if(data!=undefined){\n            return (\n                <div className=\"MainContent\"\n                    style={{\n                        display:'block',\n                        height:'auto',\n                        backgroundColor:'black',\n                        paddingTop:'77pt'\n                    }}\n                >\n                    <div\n                        style={{\n                            display:'block',\n                            height:'150px',\n                            backgroundColor:'transparent',\n                            topMargin:'77pt',\n                            flexDirection:'column',\n                            textAlign:'left',\n                            // paddingLeft:'auto',\n                            // paddingRight:'auto'\n                            paddingLeft:'45px',\n                            paddingRight:'45px'\n                        }}\n                    >\n                        <Text\n                            style={{\n                                fontSize: '25pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                color:'white',\n                                textAlign:'center',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                flexDirection:'row',\n                                marginTop:'40px',\n                                marginBottom:'40px',\n                                padding:'auto',\n                                zIndex:2\n                                // backgroundColor:'red'\n                            }}\n                        > \n                        무드보드\n                        </Text> \n                        <br></br>\n                        <Text\n                            style={{\n                                fontSize: '15pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                color:'white',\n                                textAlign:'left',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                flexDirection:'row',\n                                marginTop:'40px',\n                                marginBottom:'40px',\n                                padding:'auto',\n                                zIndex:2\n                                // backgroundColor:'red'\n                            }}\n                        > \n                            새로운 아이디어와 컨셉을 찾아보세요.\n                        </Text> \n                        <br></br>\n                        <Text\n                            style={{\n                                fontSize: '15pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                color:'white',\n                                textAlign:'left',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                flexDirection:'row',\n                                marginTop:'40px',\n                                marginBottom:'40px',\n                                padding:'auto',\n                                zIndex:2\n                                // backgroundColor:'red'\n                            }}\n                        > \n                            어떤 자재가 어떤 컨셉으로 활용되는지 알아볼 수 있습니다.\n                        </Text> \n                    </div>\n                        <View\n                            style={{\n                                flex: 1, \n                                // flexDirection: 'row',\n                                justifyContent: 'center',\n                                flexwrap:'wrap',\n                                display: 'grid',\n                                gridTemplateColumns: 'auto',\n                                paddingLeft: 'auto',\n                                paddingRight: 'auto'\n                            }}\n                        >\n                            \n                        \n                    {data.listMoodboard.map((listMoodboard)=>\n\n                    \n                        <TouchableOpacity\n                        onPress={()=>{\n                            Linking.openURL(`/moodboarddetail?mb_no=${listMoodboard.mb_no}`)\n                        }}\n                        style={{\n                            flexDirection:'column',\n                            borderRadius:10,\n                            height:'260pt',\n                            width:\"200pt\",\n                            backgroundColor:'rgb(33,33,33)',\n                            // boxShadow:'0px 0px 2px',\n                            \n                                fontSize: '25pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                // color:'white',\n                                // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                // textShadowOffset: {width: 0, height: 0},\n                                // textShadowRadius: 2,\n                                color:'black',\n                                textAlign:'left',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                flexDirection:'column',\n                                marginLeft:'25px',\n                                marginRight:'25px',\n                                marginTop:'25px',\n                                padding:'auto',\n                                zIndex:2\n                                // backgroundColor:'red'\n                            \n                        }}\n                    >\n                    \n                    <Image\n                        style={{\n                        display:'block',\n                        height:'200pt',\n                        width:'200pt',\n                        borderTopLeftRadius:10,\n                        borderTopRightRadius:10,\n                        zIndex:1,\n                        pointerEvents:'none',\n                        transform:[{\n                            translateX:'0px',\n                            translateY:'0px'\n                        }]\n                        }}\n                        source={{\n                            uri:\n                                // data.listCategory[i].ct_img_url\n                                listMoodboard.mb_img_url\n                        }}\n\n                    >\n                    </Image>\n                    {/* <a\n                        style={{\n                        transform:[{\n                            translateX:'100px'\n                        }]\n                        }}\n                    > */}\n                        <View\n                            style ={{\n                                height:'60pt',\n                                width:'200pt',\n                                fontSize: '15pt',\n                                fontWeight:'700',\n                                textDecorationLine:'none',\n                                // color:'white',\n                                // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                // textShadowOffset: {width: 0, height: 0},\n                                // textShadowRadius: 2,\n                                color:'black',\n                                textAlign:'center',\n                                // alignItems:'center',\n                                // justifyContent:'center',\n                                flexDirection:'row',\n                                // margin:11,\n                                // padding:'auto',\n                                pointerEvents:'none',\n                                // borderTopRightRadius:20,\n                                // borderBottomRightRadius:20,\n                                backgroundColor:'rgb(33,33,33)',\n                                // zIndex:99,\n                                pointerEvents:'none',\n                                borderBottomLeftRadius:10,\n                                borderBottomRightRadius:10,\n                                // left:0,\n                                \n                            }}\n                        >\n                            <View\n                                style ={{\n                                    height:'60pt',\n                                    width:'190pt',\n                                    fontSize: '15pt',\n                                    fontWeight:'700',\n                                    textDecorationLine:'none',\n                                    // color:'white',\n                                    // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                    // textShadowOffset: {width: 0, height: 0},\n                                    // textShadowRadius: 2,\n                                    borderBottomLeftRadius:10,\n                                    borderBottomRightRadius:10,\n                                    color:'black',\n                                    textAlign:'center',\n                                    alignItems:'center',\n                                    justifyContent:'center',\n                                    flexDirection:'row',\n                                    marginLeft:'5pt',\n                                    // padding:'auto',\n                                    pointerEvents:'none',\n                                    backgroundColor:\"rgb(33,33,33)\",\n                                    // zIndex:99,\n                                    pointerEvents:'none',\n                                    \n                                }}\n                            >\n                                <Text\n                                    style ={{\n                                        height:'65pt',\n                                        width:'250px',\n                                        fontSize: '15pt',\n                                        fontWeight:'700',\n                                        textDecorationLine:'none',\n                                        // color:'white',\n                                        // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                                        // textShadowOffset: {width: 0, height: 0},\n                                        // textShadowRadius: 2,\n                                        color:'white',\n                                        textAlign:'left',\n                                        alignItems:'center',\n                                        justifyContent:'center',\n                                        flexDirection:'row',\n                                        marginTop:'45pt',\n                                        // padding:'auto',\n                                        pointerEvents:'none',\n                                        backgroundColor:'transparent',\n                                        // zIndex:99,\n                                        pointerEvents:'none',\n                                        \n                                    }}\n                                >\n                                    {/* {data.listCategory[i].ct_text} */}\n                                    {listMoodboard.mb_name}\n                                </Text>\n                            </View>\n                        </View>\n                    {/* </a> */}\n                    </TouchableOpacity>\n                    )}\n                    </View>\n                   \n                    \n                \n                </div>\n            );\n        }\n        else{\n            return (\n                <div className=\"MainContent\">\n                \n                    <Navbar />\n                    <NavBarFiller/>\n                    <Text>\n                    로딩중 ...\n                    </Text>\n                    {/* <Content/> */}\n                    \n                    \n                \n                </div>\n            );\n        }\n    \n    }\n \n}\n  \n  export default MainMoodBoard;","/Users/bernardahn/Documents/GitHub/clip/src/components/Footer.js",["339","340","341","342","343","344","345","346","347","348","349","350"],"import React,{useEffect} from 'react';\nimport {TouchableOpacity,Text,View} from 'react-native';\nimport Logo from '../assets/header_logo.png'\nimport instaLogo from '../assets/instagram-brands.svg'\nimport facebookLogo from '../assets/facebook-f-brands.svg'\nimport pinterestLogo from '../assets/pinterest-p-brands.svg'\nconst IntroImage=() => {\n\t\n    return (\n        <div className=\"introImageContainer\"\n            style={{\n                backgroundColor:'white',\n                // height:'300pt'\n                margin:0,\n                height:'400px'\n            }}\n        >\n            <View\n                style={{\n                    // height:'40px',\n                    // marginTop:'15px',\n                    // display:'block',\n                    // // position:'fixed',\n                    // top:'33px',\n                    // marginLeft:'29px',\n                    // height:'33pt'\n                    flexDirection:'column',\n                    textAlign:'left'\n                }}\n            >\n            <a\n            href=\"/clip\"\n          >\n            <View    \n                style={{\n                    height:'40px',\n                    width:'150px',\n                    marginTop:'0px',\n                    display:'block',\n                    // position:'fixed',\n                    backgroundColor:'transparent',\n                    top:'0px',\n                    marginLeft:'0px',\n                    height:'33pt',\n                    flex:1,\n                }}\n            >\n                <img src={Logo} alt=\"Logo\" title=\"Logo\"\n                    style={{\n                        height:'40px',\n                        marginTop:'25px',\n                        display:'block',\n                        // position:'fixed',\n                        top:'35px',\n                        marginLeft:'30px',\n                        height:'33pt'\n                    }}\n                />\n            </View>\n          </a>\n          <View\n            style={{\n                flexDirection:'row'\n            }}\n          >\n          <a\n            href='https://www.instagram.com/clip.style.official/'\n          >\n            <View\n            style={{\n                height:'40px',\n                // marginTop:'15px',\n                display:'block',\n                // position:'fixed',\n                backgroundColor:'transparent',\n                // top:'0px',\n                marginLeft:'5px',\n                height:'33pt',\n                flex:1\n            }}>\n                <img src={instaLogo} alt=\"Logo\" title=\"Logo\"\n                    style={{\n                        height:'40px',\n                        marginTop:'15px',\n                        display:'block',\n                        // position:'fixed',\n                        top:'33px',\n                        marginLeft:'25px',\n                        height:'33pt'\n                    }}\n                />\n\n            </View>\n          </a>\n          <a\n            href='https://www.facebook.com/clip.style.official/'\n          >\n            <View\n            style={{\n                height:'40px',\n                // marginTop:'15px',\n                display:'block',\n                // position:'fixed',\n                backgroundColor:'transparent',\n                // top:'0px',\n                marginLeft:'5px',\n                height:'33pt',\n                flex:1\n            }}>\n                <img src={facebookLogo} alt=\"Logo\" title=\"Logo\"\n                    style={{\n                        height:'40px',\n                        marginTop:'15px',\n                        display:'block',\n                        // position:'fixed',\n                        top:'33px',\n                        marginLeft:'15px',\n                        height:'33pt'\n                    }}\n                />\n\n            </View>\n          </a>\n          <a\n            href='https://www.pinterest.co.kr/clip_style/'\n          >\n            <View\n            style={{\n                height:'40px',\n                // marginTop:'15px',\n                display:'block',\n                // position:'fixed',\n                backgroundColor:'transparent',\n                // top:'0px',\n                marginLeft:'5px',\n                height:'33pt',\n                flex:1\n            }}>\n                <img src={pinterestLogo} alt=\"Logo\" title=\"Logo\"\n                    style={{\n                        height:'40px',\n                        marginTop:'15px',\n                        display:'block',\n                        // position:'fixed',\n                        top:'33px',\n                        marginLeft:'15px',\n                        height:'33pt'\n                    }}\n                />\n\n            </View>\n          </a>\n          </View>\n          <View\n          style={{\n            height:'40px',\n            marginTop:'15px',\n            display:'block',\n            // position:'fixed',\n            backgroundColor:'transparent',\n            // top:'0px',\n            marginLeft:'25px',\n            height:'33pt',\n            flex:1\n          }}>\n\n          \n          <Text\n            style={{\n                // height:'40px',\n                // marginTop:'12px',\n                display:'block',\n                position:'relative',\n                // top:'-50px',\n                marginLeft:'7px',\n                // height:'33pt'\n                fontSize: '15pt',\n                fontWeight:'500',\n                textDecorationLine:'none',\n                color:'black',\n                textAlign:'left',\n                padding:'auto',\n              \n            }}\n          >\n          주식회사 쿼키 \n        \n          </Text>\n          </View>\n          <View\n            style={{\n                // height:'40px',\n                // marginTop:'15px',\n                display:'block',\n                // position:'fixed',\n                backgroundColor:'transparent',\n                // top:'0px',\n                marginLeft:'32px',\n                // height:'33pt',\n                flex:2\n            }}\n          >\n            <View\n            style={{\n                // height:'40px',\n                // marginTop:'15px',\n                display:'block',\n                // position:'fixed',\n                backgroundColor:'transparent',\n                // top:'0px',\n                marginLeft:'0px',\n                // height:'33pt',\n                // flex:2\n            }}>\n                <Text\n                style={{\n                    fontSize: '15pt',\n                    fontWeight:'500',\n                    textDecorationLine:'none',\n                    color:'black',\n                    textAlign:'left',\n                    padding:'auto',\n                }}\n                >\n                    서울시 강남구 영동대로 511 2749호\n                </Text>\n            </View>\n            <br></br>\n            <View\n            style={{\n                // height:'40px',\n                // marginTop:'15px',\n                display:'block',\n                // position:'fixed',\n                backgroundColor:'transparent',\n                // top:'0px',\n                marginLeft:'0px',\n                // height:'33pt',\n                // flex:2\n            }}\n            >\n                <Text\n                style={{\n                    fontSize: '15pt',\n                    fontWeight:'500',\n                    textDecorationLine:'none',\n                    color:'black',\n                    textAlign:'left',\n                    padding:'auto',\n                }}\n                >\n                    사업자 등록번호 : 444-81-01756\n                </Text>\n            </View>\n            <View\n            style={{\n                // height:'40px',\n                // marginTop:'15px',\n                display:'block',\n                // position:'fixed',\n                backgroundColor:'transparent',\n                // top:'0px',\n                marginLeft:'0px',\n                // height:'33pt',\n                // flex:2\n            }}\n            >\n                <Text\n                style={{\n                    fontSize: '15pt',\n                    fontWeight:'500',\n                    textDecorationLine:'none',\n                    color:'black',\n                    textAlign:'left',\n                    padding:'auto',\n                }}\n                >\n                    통신판매업: 2020-서울강남-03319\n                </Text>\n            </View>\n            <br></br>\n          </View>\n          </View>\n          <View\n          style={{\n              textAlign:'left',\n              height:'40px',\n              // marginTop:'15px',\n              display:'block',\n              // position:'fixed',\n              backgroundColor:'transparent',\n              // top:'0px',\n              marginLeft:'32px',\n              height:'33pt',\n              flex:2,\n          }}\n          >\n            <View\n            >\n                <a style={{           \n                            textDecorationLine:'none',\n                            textDecorationStyle:'none',\n                            height:\"100%\",\n                            width:\"100%\",\n                            \n                          }} href=\"mailto:help@clip.style\" >\n                <Text\n                style={{\n                    fontSize: '15pt',\n                    fontWeight:'500',\n                    textDecorationLine:'none',\n                    color:'black',\n                    textAlign:'left',\n                    padding:'auto',\n                }}\n                >\n                    헬프데스크: help@clip.style\n                </Text>\n                </a>\n            </View>\n            <View>\n                <a style={{           \n                    textDecorationLine:'none',\n                    textDecorationStyle:'none',\n                    height:\"100%\",\n                    width:\"100%\",\n                    \n                    }} href=\"mailto:admin@clip.style\" >\n                <Text\n                style={{\n                    fontSize: '15pt',\n                    fontWeight:'500',\n                    textDecorationLine:'none',\n                    color:'black',\n                    textAlign:'left',\n                    padding:'auto',\n                }}\n                >\n                    제휴문의: admin@clip.style\n                </Text>\n                </a>\n            </View>\n            <br></br>\n            <View>\n                <Text\n                style={{\n                    fontSize: '15pt',\n                    fontWeight:'500',\n                    textDecorationLine:'none',\n                    color:'black',\n                    textAlign:'left',\n                    padding:'auto',\n                }}\n                >\n                    © 2021 QWERKY Inc. \n                </Text>\n            </View>\n            <View\n                style={{\n                    flexDirection:'row'\n                }}\n            >\n                <View>\n                    <a\n                        href=\"/privacypolicy\"\n                        style={{\n                            textDecorationLine:'none',\n                            textDecorationStyle:'none',\n                        }}\n                    >\n                        <Text\n                            style={{\n                                fontSize: '15pt',\n                                fontWeight:'500',\n                                textDecorationLine:'none',\n                                color:'black',\n                                textAlign:'left',\n                                padding:'auto',\n                            }}\n                        >\n                                개인정보 처리방침\n                        </Text>\n                    </a>\n                </View>\n                <View>\n                    <Text\n                    style={{\n                        fontSize: '15pt',\n                        fontWeight:'500',\n                        textDecorationLine:'none',\n                        color:'black',\n                        textAlign:'left',\n                        padding:'auto',\n                    }}\n                    >\n                        &nbsp;|&nbsp;\n                    </Text>\n                </View>\n                <View>\n                    <a\n                        href=\"/terms\"\n                        style={{\n                            textDecorationLine:'none',\n                            textDecorationStyle:'none',\n                        }}\n                    >\n                        <Text\n                        style={{\n                            fontSize: '15pt',\n                            fontWeight:'500',\n                            textDecorationLine:'none',\n                            color:'black',\n                            textAlign:'left',\n                            padding:'auto',\n                        }}\n                        >\n                            이용약관\n                        </Text>\n                    </a>\n                </View>\n            </View>\n            <br></br>\n          </View>\n        </div>\n    )\n\n}\n\nexport default IntroImage;","/Users/bernardahn/Documents/GitHub/clip/src/components/PrivacyPolicy.js",["351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366"],"import React,{useEffect} from 'react';\nimport './navbar.css';\n// import Logo from './../logo.svg';\nimport {TouchableOpacity,Text,View,Modal,TouchableHighlight,Dimensions} from 'react-native';\nimport NavbarFiller from './NavBarFiller'\nimport Footer from './Footer'\nimport Logo from '../assets/header_logo.png'\nimport { nativeTouchData } from 'react-dom/test-utils';\nimport searchIcon from '../assets/icnSearch.png'\nimport userIcon from '../assets/icnUser.png'\nimport boxIcon from '../assets/icnBox.png'\nimport {BrowserRouter as Router,Switch,Route,Link} from 'react-router-dom'\n\nconst PrivacyPolicy=() => {\n  const [scrolled,setScrolled]=React.useState(false);\n  const [userModalVisible,setUserModalVisible]=React.useState(false);\n  const [cartModalVisible,setCartModalVisible]=React.useState(false);\n  const [height,setHeight]=React.useState(Dimensions.get('window').height)\n  const [width,setWidth]=React.useState(Dimensions.get('window').width)\n\n  const handleScroll=() => {\n    const offset=window.scrollY;\n    if(offset > 200 ){\n      setScrolled(true);\n    }\n    else{\n      setScrolled(false);\n    }\n  }\n  const toggleUserModal=()=>{\n      setUserModalVisible(!userModalVisible)\n  }\n  const toggleCartModal=()=>{\n    setCartModalVisible(!cartModalVisible)\n}\n  const onChange=()=>{\n    setHeight(Dimensions.get('window').height)\n    setWidth(Dimensions.get('window').width)\n    // console.log(height+\" : \"+width)\n  }\n  useEffect(() => {\n    window.addEventListener('scroll',handleScroll)\n    Dimensions.addEventListener('change',onChange)\n  },[])\n\n  let x=['navbar'];\n  if(scrolled){\n    x.push('scrolled');\n  }\n \n  return (    \n    <div>\n    <header className={x.join(\" \")}>\n        <div className=\"headerContainer\">\n        \n            <div className=\"logo\">\n            <a\n                href=\"/clip\"\n            >\n                <img src={Logo} alt=\"Logo\" title=\"Logo\" />\n            </a>\n            </div>\n        </div>\n    </header>\n    <NavbarFiller/>\n    <Text>\n    이용약관\n\n​\n\n회원 이용약관\n\n \n\n제1조 (목적)\n본 약관은 (주)쿼키 (이하 “회사”)가 제공하는 관련 서비스 (이하 “서비스”)를 이용함에 있어 회사와 회원의 권리, 의무 및 책임사항을 규정함을 그 목적으로 합니다.\n\n​\n\n제2조 (용어의 정의)\n본 약관에서 사용된 용어의 의미는 다음과 같습니다. \n1. “사이트”란 “회사”가 운영하고 있는 인터넷 웹사이트인 clip.style을 의미합니다.\n2. “회원”이란 회사와 서비스 이용계약을 체결하여 회원등록을 하고 회사가 제공하는 서비스를 이용하는 개인 또는 기업을 의미합니다.\n3. “서비스\"란 “회사”가 “사이트”를 통해 제공하는 모든 컨텐츠와 “회원”이 “회사”에 요청하고, 제공받는 물리적 서비스 및 이와 관련한 모든 부대서비스를 말합니다.\n4. “이용자 아이디\" 또는 \"회원 아이디\"라 함은 회원의 식별과 회원의 서비스 이용을 위하여 회원이 선정하고 회사가 부여하는 문자와 숫자의 조합을 말합니다.\n5. \"비밀번호\"라 함은 회사의 서비스를 이용하려는 사람이 이용자 아이디를 부여 받은 자와 동일인 임을 확인하고 회원의 권익을 보호하기 위하여 회원이 선정한 문자와 숫자의 조합을 말합니다.\n6. “콘텐츠”란 회사가 제작 또는 회원이 제작하여 사이트에 등록한 모든 정보를 의미하며, 부호, 문자, 음성, 이미지 또는 동영상 등으로 표현된 자료 또는 정보를 의미합니다.\n\n \n\n제3조 (이용 약관의 효력 및 적용과 변경)\n1. 회사는 본 약관을 “사이트\"에 게시하여 서비스를 이용하고자 하는 자 및 이용자가 본 약관의 내용을 확인할 수 있도록 하여야 합니다.\n2. 이 약관에 동의하고 회원 가입을 한 회원은 약관에 동의한 시점부터 동의한 약관의 적용을 받고 약관의 변경이 있을 경우에는 변경의 효력이 발생한 시점부터 변경된 약관의 적용을 받습니다. 이 약관에 동의하는 것은 정기적으로 홈페이지를 방문하여 약관의 변경 사항을 확인하는 것에 동의하는 것을 의미합니다.\n3. 회사는 본 약관에 명시 되지 아니한 서비스 이용에 대한 특정 조건을 이용정책에 포함시킬 수 있습니다. 본 약관의 일부 조항이 회사에 의해 개정되는 경우, 모든 개정 조항은 본 약관의 현재 버전 및 개정안의 발효일, 개정이유와 함께 발효일 7일 전부터(단, 수정 내용이 이용자에게 불리한 경우에는 14일) 발효일 직전일까지 “사이트”에 게시되거나 이메일 또는 기타 수단을 통하여 통지되어야 합니다.해당 이용정책은 본 약관의 일부를 구성합니다.\n4. 회원은 변경된 약관에 대해 거부할 권리가 있습니다. 본 약관의 변경에 대해 이의가 있는 회원은 서비스 이용을 중단하고 회원 탈퇴를 할 수 있습니다. 회원이 변경된 이용 약관의 시행일 이후에도 서비스를 계속 이용하는 경우에는 변경된 약관에 동의한 것으로 봅니다.\n\n \n\n제4조 (약관 외 준칙)\n1. 이 약관에서 규정하지 않은 사항에 관해서는 약관의 규제 등에 관한 법률, 전기통신 기본법, 전기통신 사업법, 정보통신망 이용촉진 등에 관한 법률 등의 관계법령에 따릅니다.\n2. 회원이 회사와 개별 계약을 체결하여 서비스를 이용하는 경우에는 개별 계약이 우선합니다.\n\n \n\n제5조 (이용 계약의 성립)\n1. 회사의 서비스 이용 계약(이하 “이용 계약”이라 한다)은 서비스를 이용하고자 하는 자의 본 약관과 개인정보 처리 방침의 내용에 대한 동의 및 이용 신청(회원 가입 신청)에 대하여 회사가 승낙함으로써 성립합니다.\n2. 서비스를 이용하고자 하는 자가 이용 신청 당시 웹 상의 \"동의함\"에 체크 후 회원 인증 과정을 완료 시 본 약관 및 개인정보 처리 방침에 대하여 동의한 것으로 간주합니다.\n3. 제1항의 승낙은 이용 신청자의 본 약관에 대한 동의를 확인하고 웹 상의 안내 및 전자 메일로 통지함으로써 이루어지고 이러한 승낙의 통지가 이용 신청자에게 도달하면 이용 계약이 성립합니다.\n4. 회사가 다른 회사와의 협력, 계약을 통해 제공하는 서비스에 대한 내용, 제3자 회사의 의무, 이용자의 권리와 의무 등 상세 사항은 해당 서비스에 대하여 제3자가 제공하는 별도 약관, 운영 정책 등에서 정하는 바에 따릅니다. 이용자가 해당 서비스를 이용할 경우, 제3자가 제공하는 서비스 이용 약관에 대한 동의가 필요할 수 있습니다.\n\n \n\n제6조 (서비스 이용 신청)\n1. 회원으로 가입하여 본 서비스를 이용하고자 하는 이용 고객은 회사에서 요청하는 제반 정보(이름, 회사명, 생년월일, 전화번호, 전자메일 주소 등)를 제공하여야 합니다\n2. 실명으로 등록하지 않거나 허위정보를 제공한 사용자는 일체의 권리를 주장할 수 없습니다.\n3. 타인의 명의를 도용하여 이용 신청을 한 회원의 모든 아이디는 삭제 되며, 관계 법령에 따라 처벌을 받을 수 있습니다.\n\n \n\n제7조 (이용 신청의 승낙과 제한)\n1. 회사는 이용 고객의 회원 신청에 대하여 업무상 또는 기술상의 문제가 없는 경우 서비스 이용을 승낙함을 원칙으로 합니다.\n2. 회사는 아래 사항에 해당하는 경우에 대해서는 이용 신청을 승낙하지 아니합니다.\n가. 실명이 아니거나 타인의 명의를 이용하여 신청한 경우\n나. 이용계약 신청서의 내용을 허위로 기재한 경우\n다. 가입신청자가 이 약관에 의하여 이전에 회원자격을 상실한 적이 있는 경우\n3. 회사는 아래 사항에 해당하는 경우에는 그 신청에 대하여 승낙 제한 사유가 해소될 때까지 승낙을 유보할 수 있습니다.\n가. 회사가 설비의 여유가 없는 경우\n나. 회사의 기술상 지장이 있는 경우\n다. 회사가 제시하는 회원 가입 절차를 완료하지 않은 경우\n라. 기타 회원으로서 부적절한 행위를 할 우려가 있다고 인정되는 경우7\n\n \n\n제8조 (서비스의 이용 및 내용)\n1. 서비스의 이용은 회사의 업무상 또는 기술상 지장이 없는 한 1일 24시간, 연중무휴로 운영됩니다.\n2. 회원은 사이트에 아이디로 접속한 후 별도의 접속 절차 없이 자유롭게 사이트를 이용할 수 있습니다.\n3. 사이트는 정보통신 시스템 등의 정기 점검, 보수, 교체, 고장, 통신 두절 등의 사유가 발생한 경우에는 서비스의 제공을 일시 중단할 수 있으며, 사이트에서 공지 또는 전자메일을 통해 회원에게 알립니다.\n4. 통제할 수 없는 사유로 인해 발생하는 서비스의 수정, 정지 또는 중단에 대해 회사는 어떠한 방식으로도 책임을 지지않습니다.\n5. 회사가 자체 제작한 저작물에 대한 저작권, 기타 지적 재산권은 회사에 귀속합니다.\n6. 회원은 사이트를 이용함으로써 얻은 정보를 회사의 사전 승낙 없이 복제, 송신, 출판, 배포, 방송, 기타 방법에 의하여 영리 목적으로 이용하거나 제3자에게 이용하게 하여서는 안 됩니다.\n\n \n\n제9조 (서비스에 대한 약관 및 이용 조건)\n1. 서비스 이용 자격, 서비스 등록 및 사용제한\n가. 서비스는 건축, 인테리어 및 전문 디자이너 회원을 위해 제공되며, 건축, 인테리어 디자인 회사 및 제조업체 또는 관련업종 종사자/회사로 이용 자격이 제한됩니다.\n나. 서비스는 국내에 위치한 국내 주소 또는 IP주소를 가진 사용자를 위해 제공되며, 제공불가 지역에서의 서비스 이용신청은 제한됩니다.\n다. 서비스 이용을 위해 제출하는 모든 정보는 거짓이 없고, 정확하여야 하며 변경사항 발생 시 항상 최신으로 유지하여야 합니다.\n라. 서비스는 회원이 소속된 회사, 업체, 업종의 사업 또는 상업적 목적을 위해 제공 되는 것이며, 단순히 회원 개인의 사용 목적으로 제공되지 않습니다.\n마. 제조업체 또는 이와 관련된 회원의 경우, 본 서비스를 경쟁 업체의 샘플을 획득하는 용도로 사용하지 말아야 합니다.\n2. 등록 수락 및 제한\n가. 회사는 귀하가 서비스 이용 신청을 위해 제공한 정보에 따라 귀하가 회원으로 수락될 것인지 여부를 결정할 권리가 있습니다.\n나. 회사는 등록 정보 및 기타 요소(건축 / 인테리어 디자이너 여부 또는 관련 업종 종사자/회사 인지 여부 등) 을 검토하는데 걸리는 시간에 따라 즉시 수락되거나 며칠이 소요 될 수 있습니다.\n다. 귀하는 회사의 판단에 따라 서비스 회원으로 수락되지않을 수도 있음을 회원 신청 단계에서 고려하여야 합니다.\n3. 비밀번호 및 계정 관리\n가. 회원 등록이 수락되는 경우, 회원 계정에 액세스 하려면 비밀번호가 필요합니다.\n나. 등록 계정과 관련하여 발생하는 모든 활동에 대한 책임은 회원에게 있으므로 회원은 비밀번호가 노출되지 않도록 주의하여야 합니다.\n다. 등록계정은 회원이 소속된 회사, 업체, 업종의 사업 또는 상업적 목적을 위해서만 사용하여야하며, 다른 사람에게 등록계정을 사용할 수 있도록 허가하거나 양도 할 수 없습니다.\n라. 이메일 메시지를 포함한 등록 계정을 통해 게시 또는 표시되는 모든 콘텐츠와 샘플 주문 등 서비스 이용에 대한 책임은 회원에게 있습니다.\n마. 회원은 등록계정의 비밀번호가 무단으로 사용되거나 노출된 경우, 회사에 즉시 알려야합니다. 또한 회사가 등록계정의 비밀번호가 더이상 안전하지 않다고 판단될 경우, 회원에게 비밀번호 변경을 요청할 수 있습니다.\n바. 회원은 등록계정의 비밀번호를 제 3자에게 공개하거나 제 3자가 등록 계정에 액세스하도록 허용해서는 안됩니다. 또한 등록계정을 판매하거나 양도 할 수 없습니다.\n4. 회원은 회원이 소속된 회사, 업체, 업종의 사업 또는 상업적 목적(샘플링된 재료의 구매여부 결정)을 위해 샘플을 주문하는 것 이외에 다른 목적으로 샘플을 주문할 수 없습니다.\n5. 서비스에 대한 회사의 책임\n가. 회사가 제공하는 컨텐츠 또는 샘플은 회사가 소유하거나 판매하는 것이 아니며, 회사는 회원과 제조업체 간의 중개자 역할을 하며 제조업체를 대신하여 회원에게 컨텐츠 및 샘플을 제공하는 에이전트 역할을 합니다.\n나. 회원과 제조업체는 회사가 회원과 제조업체 간에 생성된 계약의 당사자가 아니라는 것에 동의합니다.\n다. 회사는 단순히 회원과 제조업체를 연결하는 사이트 및 서비스를 운영합니다.\n라. 서비스를 통해 연결된 회원과 제조업체 간의 소통 및 계약, 구매결정 여부는 회원의 책임입니다.\n마. 회사가 제공하는 샘플 및 콘텐츠에 관한 모든 정보는 제조업체로부터 제공받은 정보를 기반으로 합니다. 따라서 회사는 정보가 정확하다는 것을 보증할 수 없으며, 정보의 오류나 누락에 대해 책임지지 않습니다.\n바. 회원은 샘플 신청 이후, 필요한 정보 등에 대해 개별적으로 검토하고, 필요한 경우 제조업체에 직접 정보를 요청해야합니다.\n사. 회사는 회원과 제조업체 간에 체결되는 계약과 관련하여 어떠한 책임도 지지 않습니다.\n\n6. 서비스요금\n가. 회사는 일반적으로 서비스에 대한 수수료를 회원에게 청구하지 않습니다.\n나. 회사는 서비스에 대한 요금을 변경할 권리가 있습니다. 회사가 요금을 변경하는 경우, 회사는 먼저 영향을 받는 당사자에게 이를 고지하고 지불 확인을 요청해야합니다.\n7. 주문관련\n가. 회원이 플랫폼을 통해 샘플을 요청하거나 주문을 하면, 회사는 회원에게 연락하여 샘플 주문 내용을 확인하고, 이와 관련한 추가 제안을 할 수 있습니다.\n나. 회사는 월-목요일 주문 기준 다음 영업일 배송을 원칙으로 하며, 샘플 주문이 배송마감 시간 이후에 이루어진 경우, 2번째 영업일 이내에 샘플을 수령 할 수 있도록 합니다.\n다. 주문물품 배송 및 배송가능 지역은 운송업체에 따라 달라지며, 천재지변등의 통제할 수 없는 이유로 인해 배송이 중단 될 수 있습니다.\n라. 주문물품이 회원에게 도착하지 않은 경우, 어떠한 경우에도 회사는 책임지지 않습니다.\n8. 커뮤니케이션\n- 회사는 회원이 요청한 샘플을 제조업체가 제공할 수 있도록 회원의 동의에 따라 회원의 연락처 정보를 포함한 프로젝트 정보를 제조업체와 공유합니다. 제조업체는 회원에게 제공된 샘플과 관련된 프로모션, 제안 및 관련 정보를 제공합니다.\n- 회사는 제조업체가 회원에게 직접 제공하는 프로모션, 제안 및 정보가 제품 대한 책임이 없습니다.\n- 회사는 회원의 동의에 따라 회사(또는 회원의 요청에 따라 샘플 및 제품정보를 제공하는 모든제조업체)가 요청한 샘플에 대한 후속 조치 목적, 특정 제품 또는 서비스 소개 및 기타 판촉 목적으로 SMS 문자메시지 및 이메일을 발송할 수 있습니다.\n- 샘플의 사용 목적과 프로젝트 또는 이용 정보등 제조업체와의 네트워킹 및 리드 생성에 필요한 정보를 요구할 수 있으며, 해당 데이터를 제조업체에 전달할 수 있습니다.\n\n \n\n제10조 (서비스 콘텐츠에 대한 저작권의 귀속 및 제한)\n1. 회사 및 공급 업체 (라이센스 제공자 포함)는 플랫폼 및 서비스에 대한 모든 소유권을 보유하고 있습니다. 플랫폼에는 회사 및 공급업체 및 라이센스 제공자의 저작권이있는 자료, 상표 및 기타 독점 콘텐츠 및 정보가 포함됩니다.\n2. 오디오, 비디오, 로고, 정보, 데이터, 소프트웨어, 문서, 서비스, 다운로드 또는 플랫폼에 포함 된 기타 유사한 자료 (“콘텐츠\")는 저작권 및 기타 지적 재산권 법, 국제 협약 및 기타 지적 재산권에 의해 보호됩니다.\n3. 회원은 본 이용약관으로 인하여 서비스를 소유하거나 서비스에 관한 저작권을 보유하게 되는 것이 아니라, 회사로부터 서비스의 이용을 허락 받게 되는 바, 서비스는 정보 취득 또는 개인 용도로만 제공되는 형태로 회원이 이용할 수 있습니다.개인 용도 및 단순정보 용으로 콘텐츠를 다운로드할 때에는 다음 사항을 준수하여야 합니다.\n가. 다운로드한 콘텐츠를 수정하지 않음\n나. 다운로드한 콘텐츠에 포함 된 모든 저작권 및 소유권 정보를 포함하여 보관\n다. 다운로드한 콘텐츠에 대한 제한 또는 사용 요구 사항을 준수\n라. 단, 단순 다운로드 이외에 플랫폼에서 콘텐츠 데이터를 스크래핑하는 행위 금지\n4. 회원은 회사를 이용함으로써 얻은 정보 중 회사에게 지적 재산권이 귀속된 정보를 회사의 사전 승낙 없이 복제, 송신, 출판, 배포, 방송, 기타 방법에 의하여 다음과 같은 용도로 사용하여서는 안됩니다.\n가. 콘텐츠 재생산 또는 판촉 용도\n나. 상업적 판매, 재판매 또는 배포 목적 (사전에 서면 허가를 받거나 플랫폼 이용 약관에 명시된 특정 권한이 제공된 정보 제외)\n다. 본 이용 약관의 어떠한 내용도 여기 또는 플랫폼의 다른 곳에서 명시 적으로 제공된 경우를 제외하고 MB 콘텐츠를 포함하여 플랫폼 또는 플랫폼에 포함 된 모든 자료를 사용할 수있는 라이센스 또는 권리를 부여하는 것으로 해석되지 않습니다.\n5. 회원은 콘텐츠의 오류가 있을 경우 이의를 제기 할 수 있습니다. 단,  회사는 회원의 견해를 반드시 반영 할 필요는 없으며, 회사는 콘텐츠의 내용이나 자료에 대해 보증하지 않습니다.\n\n \n\n제 11조(서비스의 제공 및 변경)\n1. 회사는 이용 감소로 인한 원활한 서비스 제공의 곤란 및 수익성 악화, 기술적 사양 변경 및 불가피한 사정, 서비스 제공과 관련한 회사 정책의 변경 등 기타 상당한 이유가 있는 경우에 운영상, 기술상의 필요에 따라 제공하고 있는 전부 또는 일부 서비스를 변경 또는 중단할 수 있습니다. 이 경우에는 변경된 서비스의 내용을 공지합니다. 단, 회사는 불가피한 여건이나 사정이 있는 경우, 위 공지를 하지 않을 수 있습니다.\n2. 회사는 무료로 제공되는 서비스의 일부 또는 전부를 회사의 정책 및 운영의 필요상 수정, 중단, 변경할 수 있으며, 이에 대하여 관련법에 특별한 규정이 없는 한 회원에게 별도의 보상을 하지 않습니다.\n3. 서비스의 내용, 이용 방법, 이용 시간에 대하여 변경 또는 서비스 중단이 있는 경우에는 변경 또는 중단될 서비스의 내용 및 사유와 일자 등은 그 변경 또는 중단 전에 회사 사이트 또는 서비스 내 공지사항 화면 등 회원이 충분하게 인지할 수 있는 방법으로 30일의 기간을 두고 사전에 공지합니다.\n\n \n\n제12조 (정보의 제공 및 광고의 게재)\n1. 회사는 회원에게 서비스 이용에 필요가 있다고 인정되거나 서비스 개선 및 회원 대상의 서비스 소개 등의 목적으로 하는 각종 정보를 회원이 수신 동의한 경우, 전자메일, SMS(Short Message Service), MMS(Multimedia Message Service)로 제공할 수 있습니다.\n2. 회사는 제공하는 서비스와 관련되는 정보 또는 광고를 서비스 화면, 홈페이지 등에 게재할 수 있으며, 회원들에게 전자메일 및 SMS, MMS를 통해 알릴 수 있습니다.\n3. 회사는 서비스 상에 게재되어 있거나 본 서비스를 통한 광고주의 판촉 활동에 회원이 참여하거나 교신 또는 거래를 함으로써 발생하는 모든 손실과 손해에 대해 회사의 고의, 중과실로 인한 경우가 아닌 한 책임을 지지 않습니다.\n4. 본 서비스의 회원은 서비스 이용 시 노출되는 광고 게재에 대해 동의하는 것으로 간주합니다.\n\n \n\n제13조 (회사의 의무)\n1. 회사는 본 약관에서 정한 바에 따라 계속적, 안정적으로 서비스를 제공할 수 있도록 최선의 노력을 다해야 합니다.\n2. 회사는 회원이 안전하게 서비스를 이용할 수 있도록 회원의 개인 정보(신용 정보 포함)보호를 위해 보안 시스템을 갖추어야 하며 개인정보 취급 방침을 공시하고 준수합니다.\n3. 회사는 서비스 이용과 관련하여 회원으로부터 제기된 의견이나 불만이 정당하다고 인정할 경우에는 이를 처리하여야 합니다. 회원이 제기한 의견이나 불만 사항에 대해서는 연락 가능한 수단을 통하여 회원에게 처리 과정 및 결과를 전달합니다.\n4. 회사는 유료 결제와 관련한 결제 사항 정보를 상법 등 관련 법령의 규정에 의하여 5년 이상 보존합니다.\n5. 천재지변 등 예측하지 못한 일이 발생하거나 시스템의 장애가 발생하여 서비스가 중단될 경우 이에 대한 손해에 대해서는 회사가 책임을 지지 않습니다. 다만 자료의 복구나 정상적인 서비스 지원이 되도록 최선을 다할 의무를 집니다.\n6. 회사는 회원의 개인정보를 본인의 승낙 없이 타인에게 누설, 배포하지 않습니다. 단, 전기통신 관련 법령 등 관 법령에 의하여 관련 국가기관 등의 요구가 있는 경우에는 그러하지 아니합니다.\n7. 회원이 등록한 자료로 인하여 사이트의 원활한 운영에 영향을 미친다고 판단될 시, 등록된 모든 자료를 회원의 사전 동의 없이 삭제할 수 있습니다.\n\n \n\n제14조 (회원의 의무)\n1. 회원은 관계 법령과 본 약관의 규정 및 기타 회사가 통지하는 사항을 준수하여야 하며, 기타 회사의 업무에 방해되는 행위를 해서는 안됩니다.\n2. 회원은 서비스 이용 등록 시, 그리고 서비스 이용과정에서 회사에 제출하는 모든 등록 정보를 정확하고, 최신상태로 유지하여야 합니다.\n3. 회원은 서비스를 이용하여 얻은 정보를 회사의 사전 동의 없이 복사, 복제, 번역, 출판, 방송 기타의 방법으로 사용하거나 이를 타인에게 제공할 수 없습니다.\n4. 회원은 회사가 제공하는 서비스를 이용함에 있어 다음 각 호에 해당하는 내용을 목적으로 하거나 의도하는 행위를 하여서는 안됩니다.\n가. 다른 회원의 아이디를 부정 사용하는 행위\n나. 범죄 행위를 목적으로 하거나 기타 범죄 행위와 관련된 행위\n다. 타인의 명예를 훼손하거나 모욕하는 행위\n라. 타인의 지적 재산권 등의 권리를 침해하는 행위\n마. 해킹 행위 또는 바이러스의 유포 행위\n바. 타인의 의사에 반하여 광고성 정보 등 일정한 내용을 계속적으로 전송하는 행위\n사. 서비스의 안정적인 운영에 지장을 주거나 줄 우려가 있다고 판단되는 행위\n아.사이트의 정보 및 서비스를 이용한 영리 행위\n자. 그 밖에 선량한 풍속, 기타 사회 질서를 해하거나 관계 법령에 위반하는 행위\n\n \n\n제15조 (회원의 가입해지/서비스 중지/자료 삭제)\n1. 회원은 언제든지 서비스 내 “탈퇴” 기능을 통하여 이용 계약 해지 신청을 할 수 있으며, 회사는 관련법 등이 정하는 바에 따라 이를 즉시 처리하여야 합니다.\n2. 회원이 계약을 해지할 경우, 관련법 및 개인정보 처리 방침에 따라 회사가 회원정보를 보유하는 경우를 제외하고는 해지 즉시 회원의 모든 데이터는 소멸됩니다.\n3. 다음의 사항에 해당하는 경우 회사는 사전 동의 없이 가입 해지나 서비스 중지 조치를 취할 수 있습니다.\n가. 회원의 의무를 성실하게 이행하지 않은 경우\n나. 타 이용자에게 심한 모욕을 주거나, 서비스 이용을 방해한 경우\n다. 회사의 서비스 또는 사이트의 정보를 회사의 동의 없이 호스팅하거나 회사의 서버 또는 네트워크를 방해 또는 방해시도 하는 경우\n라. 회사에 제공한 정보가 허위 또는 오도의 소지가 있거나 조작되었을 경우\n마. 신원을 숨기려고 하거나, 공개할 권리가 없는 정보를 제공한 경우\n바. 회원 자격 또는 회사의 서비스 또는 그 일부를 재판매하거나 재판매 시도하는 경우\n사. 허가받지 않은 웹사이트 또는 웹페이지 링크로의 접근을 유도하는 경우\n아. 정보통신 윤리위원회 등 관련 공공기관의 시정 요구가 있는 경우\n자. 제3자의 지적재산권을 침해한 경우\n차. 불법 콘텐츠인 경우\n카. 부당한 방법으로 평점을 조작하거나 타인의 서비스 이용에 방해를 초래하는 경우\n타. 회사의 동의나 허락, 승인 없이 홍보성 게시 글이나 광고를 게시하는 경우\n파. 본 서비스 목적에 맞지 않는 분야에 정보를 활용하여 사회적 물의가 발생한 경우기타 본 서비스 명예를 훼손하였거나 회사가 판단하기에 적합하지 않은 목적으로 회원 가입을 하였을 경우\n하. 회사는 회원 가입이 해제된 경우에 해당 회원의 정보를 임의로 삭제할 수 있습니다.\n\n \n\n제16조 (휴면 아이디)\n1. 회원이 12개월 (365일) 이상 로그인 하지 않은 경우 해당 회원의 아이디는 휴면아이디가 되어 회원 로그인을 비롯한 모든 서비스에 대한 이용이 정지되고, 회사는 회원이 서비스 사용을 위해 등록한 정보를 삭제할 수 있으며, 회사는 휴면아이디의 개인정보를 다른 아이디와 별도로 관리합니다.\n2. 회사는 1항에 의한 서비스 이용 정지 30일 전 전자메일을 통하여 서비스 이용 정지에 대하여 안내하고, 서비스 이용 정지가 되는 경우 다시 전자메일을 통하여 서비스 이용 정지 사실에 대하여 고지합니다.\n3. 회원은 서비스 이용 정지 이후에 사이트 상에서 직접 본인 확인을 거쳐 휴면 상태 해지 신청을 하는 즉시 다시 정상적으로 서비스를 이용할 수 있습니다.\n\n \n\n제17조 (손해 배상)\n회사는 회원에게 무료로 제공하는 서비스의 이용과 관련하여 개인정보 보호 정책에서 정하는 내용에 해당하지 않는 사항에 대하여는 어떠한 손해도 책임을 지지 않습니다.\n\n \n\n제18조 (면책 조항)\n1. 회사는 천재지변, 전쟁 및 기타 이에 준하는 불가항력으로 인하여 서비스를 제공할 수 없는 경우에는 서비스 제공에 대한 책임이 면제됩니다.\n2. 회사는 기간 통신 사업자가 전기통신 서비스를 중지하거나 정상적으로 제공하지 아니하여 손해가 발생한 경우 책임이 면제됩니다.\n3. 회사는 서비스용 설비의 보수, 교체, 정기점검, 공사 등 부득이한 사유로 발생한 손해에 대한 책임이 면제됩니다.\n4. 회사는 회원의 귀책 사유로 인한 서비스 이용의 장애 또는 손해에 대하여 책임을 지지 않습니다.\n5. 회사는 이용자의 컴퓨터 오류에 의해 손해가 발생한 경우, 또는 회원이 신상 정보 및 서비스 이용 관련하여 회사가 요청한 정보를 부실하게 기재하여 손해가 발생한 경우 책임을 지지 않습니다.\n6. 회사는 회원이 서비스를 이용하여 기대하는 수익을 얻지 못하거나 상실한 것에 대하여 책임을 지지 않습니다.\n7. 회사는 회원이 서비스를 이용하면서 얻은 자료로 인한 손해에 대하여 책임을 지지 않습니다. 또한 회사는 회원이 서비스를 이용하며 타 회원으로 인해 입게 되는 정신적 피해에 대하여 보상할 책임을 지지 않습니다.\n8. 회사는 사이트에 게재한 각종 정보, 자료, 사실의 신뢰도, 정확성 등 내용에 대하여 책임을 지지 않습니다.\n9. 회사는 이용자 상호간 및 이용자와 제 3자 상호 간에 서비스를 매개로 발생한 분쟁에 대해 개입할 의무가 없으며, 이로 인한 손해를 배상할 책임도 없습니다.\n10. 회원이 서비스를 이용함에 있어 행한 불법 행위나 본 약관 위반 행위로 인하여 회사가 당해 회원 이외의 제3자로부터 손해 배상 청구 또는 소송을 비롯한 각종 이의 제기를 받는 경우 당해 회원은 자신의 책임과 비용으로 회사를 면책 시켜야 하며, 회사가 면책되지 못한 경우 당해 회원은 그로 인하여 회사에 발생한 모든 손해를 배상하여야 합니다.\n11. 회사는 회원이 게재한 정보, 자료, 사실의 신뢰도, 정확성 등 내용에 관해서는 책임을 지지 않습니다.\n12. 회원이 발송한 메일 내용에 대한 법적인 책임은 회원에게 있습니다.\n13. 회사는 회원 간 또는 회원과 제3자 상호간에 서비스를 매개로 하여 거래 등을 한 경우에는 책임이 면제됩니다.\n\n \n\n제19조 (회원의 개인정보 보호)\n회사는 이용자의 개인정보 보호를 위하여 노력해야 합니다. 이용자의 개인정보 보호에 관해서는 정보통신망 이용 촉진 및 정보 보호 등에 관한 법률에 따르고, 사이트에 \"개인정보 처리 방침\"을 고지합니다.\n\n \n\n제20조 (신용 정보의 제공 활용 동의)\n회사가 회원 가입과 관련하여 취득한 회원의 개인 신용정보를 타인에게 제공하거나 활용하고자 할 때에는 신용정보의 이용 및 보호에 관한 법률 제32조의 규정에 따라 사전에 그 사유 및 해당 기관 또는 업체 명 등을 밝히고 해당 회원의 동의를 얻어야 합니다.\n\n \n\n제21조 (분쟁 해결)\n1. 회사는 이용자가 제기하는 정당한 의견이나 불만을 반영하고 그 피해를 최소화하기 위하여 노력합니다.\n2. 회사는 이용자로부터 제출되는 불만 사항 및 의견은 우선적으로 그 사항을 처리합니다. 다만, 신속한 처리가 곤란한 경우에는 이용자에게 그 사유와 처리 일정을 즉시 통보해야 합니다.\n3. 회사와 이용자 간에 발생한 전자상거래 분쟁과 관련하여 이용자의 피해 구제 신청이 있는 경우에는 공정거래 위원회 또는 시, 도지사가 의뢰하는 분쟁 조정 기관의 조정에 따를 수 있습니다.\n\n \n\n제22조 (재판권 및 준거법)\n1. 이 약관의 해석 및 회사와 회원 간의 분쟁에 대하여서는 대한민국의 법을 적용합니다.\n2. 이 약관에 명시되지 않은 사항은 통신 심의 관련법 등 관계 법령과 상관습에 따릅니다.\n3. 서비스 이용으로 발생한 분쟁에 대해 소송이 제기되는 경우 회사의 본사 소재지를 관할하는 법원을 관할 법원으로 합니다.\n\n \n\n[부칙]\n본 약관은  2020년 12월 1일부터 적용합니다.\n\n \n\n \n\n브랜드 파트너 이용약관\n\n본 클립 서비스 이용 약관(이하 “본 약관”)은 (주)쿼키 (그 계열회사, 임직원 및 계약관계에 따른 이해당사자를 포함하며, 이하 총칭하여 “회사”)가 제공하는 서비스 이용에 대한 조건을 정하고 있으며, 서비스 이용자(그 계열회사, 임직원, 계약관계에 따른 이해관계인 및 이해당사자를 포함하며, 이하 총칭하여 “이용자”) 및 회사 간의 계약을 구성한다. 회사의 서비스를 이용하고자 하는 자는 서비스를 등록 및 사용함에 있어서 본 약관에 따라 본 약관, 서비스 약관, 이용정책 등에 구속되며 본 약관을 준수할 것에 동의한다.\n\n \n\n제 1조 (목적)\n본 약관의 목적은 회사와 이용자의 권리, 의무 및 책임, 서비스 이용 절차 및 기타 관련 사항을 정함으로써 상호 우호적인 거래관계에 기여하고 궁극적으로는 양 당사자의 이익을 증진시키고 상호 발전을 촉진시키는 데 있습니다.\n\n \n\n제 2조 (정의)\n본 약관에서 사용된 용어의 의미는 다음과 같습니다. 본 약관에서 정의되지 않은 용어는 일반 거래 관행에 따라 정의된 의미를 가집니다.\n1. “클립”이란 이용자가 회사의 서비스를 이용할 수 있도록 정보통신 시설/장비/네트워크를 통해 회사가 제공하는 서비스 플랫폼을 의미합니다.\n2. “서비스”란 회사가 제공한 모든 서비스 및 추가 서비스를 의미합니다.\n3. “개별 서비스”란 회사가 제공하는 서비스로서 독립적인 서비스로 분류하는 서비스를 말하며, 해당 서비스와 관련하여 제공되는 추가 서비스, 자료 등을 포함하는 의미입니다\n4. “이용정책”이란 “클립” 서비스에 대한 이용정책, 이용 약관, 규칙 및 지침 및 서비스 이용과 관련하여 회사가 설정한 기타 정책(향후 회사가 개정하는 내용 포함)을 의미합니다.\n5. “이용자 전용 시스템”이란 회사가 관련 정보를 상호 교환하기 위해 이용자에게 제공하는 온라인 포털 사이트 및 툴을 의미하며, 이용자가 서비스를 이용하는 데 필요한 기능을 갖추고 있습니다.\n6. “서비스 이용 수수료”란 서비스 이용 시 회사가 제공하는 다양한 서비스의 이용에 대하여 이용자가 회사에 지불하는 금액을 의미합니다.\n7. “서비스 이용 정보”란 이용자가 회사로부터 취득하거나 본 약관, 본 약관·클립·이용자 전용 시스템의 이용에 따른 거래 및 서비스를 통해 취득 또는 생산된 모든 데이터, 정보, 자료 등을 의미합니다.\n\n \n\n제 3조 (약관의 게시, 유효성 및 개정)\n1. 회사는 본 약관을 클립 웹페이지 또는 이용자 전용 시스템에 게시하여 서비스를 이용하고자 하는 자 및 이용자가 본 약관의 내용을 확인할 수 있도록 하여야 합니다.\n2. 회사는 본 약관에 명시 되지 아니한 서비스 이용에 대한 특정 조건을 이용정책에 포함시킬 수 있으며, 관련 서비스 웹페이지, 이용자 전용 시스템 등을 통해 이를 통지할 수 있습니다. 해당 이용정책은 본 약관의 일부를 구성합니다.\n3. 본 약관은 회사가 수시로 개정할 수 있는 이용정책을 포함하며, 이용자는 본 약관, 이용정책에 동의합니다. 본 약관, 이용정책에 동의하는 것은 양 당사자의 인감이 날인된 계약의 이행과 동일한 효력을 갖습니다.\n4. 본 약관은 회사와 이용자 간의 서비스 이용 합의에 대한 기본 조건이며, 회사는 특정 개별 서비스에 관한 사항을 별도의 약관에 정할 수 있습니다. 만약 회사가 해당 서비스 관련 웹페이지, 이용자 전용 시스템 등을 통해 개별 이용약관을 통지하고 이용자가 이에 동의하는 경우에는, 개별 이용약관은 본 약관 및 서비스 이용약관과 함께 서비스 이용 계약의 일부를 구성하게 됩니다.\n5. 이용자가 동의한 경우, 개별 이용약관은 해당 개별 서비스에 관해서만 본 약관 및 서비스 이용약관에 우선합니다. 이 경우, 본 약관 및 서비스 이용약관은 보완적인 효력을 가집니다.\n6. 만약 본 약관의 일부 조항이 회사에 의해 개정되는 경우, 모든 개정 조항은 본 약관의 현재 버전 및 개정안의 발효일, 개정이유와 함께 발효일 7일 전부터(단, 수정 내용이 이용자에게 불리한 경우에는 14일) 발효일 직전일까지 “클립” 웹페이지, 이용자 전용 시스템 등에 게시되거나 이메일 또는 기타 수단을 통하여 통지되어야 합니다.\n7. 만약 회사가, 상기 제7항에 따라 본 약관의 개정안을 공개하거나 통지하는 동안, 7일(이용자에게 불리한 개정안의 경우에는 14일) 이내에 의사를 밝히지 않는 이용자는 의사를 밝힌 것으로 간주된다고 명확하게 알리거나 통지 하였음에도 불구하고, 이용자가 거부 의사를 명시적으로 나타내지 않는 경우에는, 이용자는 본 약관의 개정안에 동의하는 것으로 간주됩니다.\n\n \n\n제 4조 (이용자에 대한 통지)\n1. 회사는 이메일이나 기타 서면 등의 방법으로 이용자에게 통지할 수 있습니다.\n2. 회사가 모든 이용자들에게 통지해야 하는 경우에는, 제1항에 따라 통지하는 대신에, 적어도 1주일 간 관련 웹페이지, 이용자 전용 시스템 등에 해당 통지내용을 게시할 수 있습니다.\n\n \n\n제 5조 이용자 등록\n1. “회사가 제공하는 서비스를 이용하고 이용자 등록을 신청하고자 하는 자(이하 “등록 신청자”)는 본 약관에 동의하고 회사가 제공하는 등록 신청서 양식에 필요한 정보 등을 등록해야 합니다. 이 경우, 회사는 등록 신청자에게 추가적인 정보의 제공을 요청할 수 있습니다.\n2. 본 약관은 회사가 제1항에 따른 등록 신청을 수락하면 효력이 발생됩니다. 이 경우, 회사는 관련 웹페이지에서 제4조에 명시된 수락 의사를 통보하거나 공개할 것이며, 본 약관은 수락 의사가 등록신청자에게 전달되거나 공개된 시점에 양 당사자에 대해 유효하게 효력이 발생됩니다.\n3. 만 19세 이상의 사업자(자연인 또는 법인 불문)는 상기 제1항의 등록 신청 자격이 있습니다. 등록 신청자는 실명으로 등록 신청을 해야 합니다. (법인인 경우, 법인의 이름으로 하여야 하며, 이하 본 조에서 동일하게 적용됩니다). 실명이 아닌 이름을 사용하거나 다른 사람의 정보를 도용하는 등록 신청자는 서비스 이용이 제한되거나 관련 법률 및 규정에 따라 처벌 받을 수 있습니다.\n4. 회사는 등록신청자에게 신원 확인 절차를 요구할 수 있으며, 그러한 절차가 불가능할 경우에는 회사는 신원 확인을 위한 관련 자료를 제출하도록 등록 신청자에게 요구할 수 있습니다.\n5. 회사는 다음의 경우에는 등록 신청을 거부할 수 있습니다.\n가. 등록신청자가 회사와의 거래관계에서 계약 조건 및 관련 법률, 규정 등을 위반한 경우;\n나. 등록신청자가 제공한 정보에 허위 정보, 정보 누락, 오타 등이 포함되어 있는 경우;\n다. 등록신청자가 미성년자인 경우;\n라. 등록신청자가 실명으로 등록 신청을 하지 않는 경우;\n마. 성명, 주민등록번호, 사업자등록번호, 법인등록번호 및 기타\n바. 주요 등록 정보가 이미 등록된 다른 이용자와 동일한 경우;\n사. 본 약관 및 서비스 이용약관기존약관또는사용조건포함)의 해지/취소로부터 2개월 이내에 재등록 신청서가 제출된 경우;\n아. 등록신청이 불법 또는 불공정한 것으로 밝혀진 경우.\n6. 이용자는 등록정보에 변경이 있을 경우, 즉시 등록된 정보를 회사가 정한 방식으로 변경하거나 ,해당 변경 사실을 회사에 통지하여야 합니다.\n7. 이용자는 회사에 정보를 제공하거나 등록정보를 변경할 때, 허위 정보를 제공해서는 아니 되며, 관련 자료를 즉시 제공하여야 합니다.\n8. 이용자는이용자및제3자가회사에부정확한정보또는관련 자료를 제공함으로써(등록 정보의 업데이트를 하지 아니한 경우 포함) 이용자 및 제3자가 입은 손해에 대해 책임을 져야 하며, 그러한 손해에 대해 회사에게 배상하고 회사를 면책시켜야 합니다.\n\n \n\n제 6조 (관련자료 제출 등)\n1. “제5조 제1항,제4항 및 제7항에 따라 이용자가 제공 또는 등록한 정보의 정확성을 확인하기 위하여, 회사는 관련 법령 및 규정이 허용하는 한도 내에서 이용자에게 관련 자료의 제공을 요구할 수 있습니다.\n2. 이용자가 정당한 사유없이 정보 및 관련 자료를 제공하지 않는 경우, 회사는 본 약관의 해지/취소, 서비스 사용 제한 또는 결제 금액의 지급 보류를 포함하여 필요한 조치를 취할 수 있습니다. 이 경우, 이용자는 모든 관련 위험 및 책임을 부담하여야 합니다.\n\n \n\n제 7조 (서비스 이용 수수료)\n1. 회사는 서비스의 성격, 제공 비용, 방법, 시장 조건, 사업 유형 및 이용자의 사용 패턴 등을 고려하여 서비스에 대한 서비스 이용 수수료를 결정합니다.\n2. 회사는 이용 정책상 서비스 이용 수수료의 종류, 요율, 청구방법 및 지급 방법, 세금 계산서 발행 등에 관한 특정 조건을 명시하고, 이용자 전용 시스템, 서비스 관련 웹페이지 등을 통해 동일 내용을 통지하여야 합니다.\n3. 회사는 필요에 따라 서비스 이용 수수료를 신규로 설정 또는 변경할 수 있으며, 서비스 유형별로 서비스 이용 수수료의 계산 및 지급 방법 등을 달리 정할 수 있습니다. 이 경우 회사는 상기 제2항의 방식에 따라 신규 설립된 서비스 이용 수수료 및 변경된 서비스 이용 수수료의 세부 사항을 통지하여야 합니다.\n4. 상기 제3항에 따른 회사의 지급(결제) 방법에 신용카드 또는 추가적인 수수료가 부과되는 기타 다른 지급 수단이 포함되어 있는 경우에는, 해당 추가 수수료는 그 지급 수단을 이용하는 이용자에게 부과됩니다.\n5. 회사는 서비스 유형 별로 지정된 날짜에 이용자에게 서비스 이용 수수료에 대한 세금계산서를 발행해야 합니다.\n\n \n\n제 8조 (지급 정산 및 유예)\n1. 이용자는 회사의 사이트를 통한 마케팅 활동에 대한 대가의 비용을 회사에 지급하여야 합니다. 단, 계약이 해지된 이후는 이를 적용치 아니한다.\n2. 회사는 월말기준 해당월 거래 내역을 작성하여 익월 5일한 이용자에게 제공합니다.\n3. 회사는 거래 내역을 근거로 정산, 세금계산서를 발행하여 비용을 이용자에게 매 월 7일한 청구하고 이용자는 10일한 회사에게 이를 지급한다.\n4. 배송비, 포장비, 운영비 등을 사이트 운영 및 샘플관리와 관련한 모든 항목을 포함됩니다.\n\n \n\n제 9조 (본 약관의 기간 및 해지)\n1. “본 약관 및 개별서비스의 기간은 본 약관이 회사와 이용자 간에 효력이 발생된 때부터 시작하여 본 약관에서 명시된 대로 회사 또는 사용자에 의해 본 약관이 해지되는 시점에 종료됩니다. 달리 명시 되지 아니하는 한, 본 약관 및 다른 개별 서비스에 대한 이용자 약관은 개별 서비스의 종료 또는 중단으로 인해 종료되거나 중단되지 않습니다.\n2. 회사는 이용자에게 이를 통지함으로써 본 약관 및 서비스 이용약관을 해지하거나 서비스를 중단할 수 있습니다.\n3. 이용자는 회사가 정한 방식으로 해지 의사를 회사에 통지함으로써 어떠한 이유로든 본 약관 또는 서비스 이용약관을 해지할 수 있습니다. 이 경우, 해지 의사를 통지하기 전에, 이용자는 서비스 이용을 중단해야 하며, 이용자가 서비스를 이용하여 거래를 이행한 경우, 이용자는 해당 거래를 완료하고 해당 구매자와 회사에게 지급할 금액을 지급해야 합니다.\n4. 본 조항에 의거하여 본 약관이 해지되는 경우, 회사는 이용자에게 부여된 모든 혜택을 철회할 수 있으며, 해지 사유 및 해당 사유의 해소 여부를 고려하여 이용자의 재신청을 거부할 수 있습니다.\n5. 이용자는 본 조항에 의거하여 본 약관이 해지된 후에도, 구매자를 보호하기 위하여 해지일 현재 아직 처리되지 않은 주문에 관한 배송, 교환, 환불, 수리 등 필요한 조치를 취하여야 합니다.\n6. 이용자가 판매한 상품으로 인해 발생하는 이용자의 의무 및 책임에 관한 제8조, 제10조, 제11조, 제12조, 제13조 및 제16조 및 기타 조항은 본 조항에 따라 본 약관이 해지된 이후에도 유효하게 존속됩니다.\n\n \n\n제 10조 (회사 및 이용자 간 관계)\n1. 회사와 이용자는 서로 독립적이며, 본 약관 및 서비스 이용약관은 회사와 이용자 간의 합작투자, 판매업자, 프랜차이즈, 대리인, 고용 또는 독점 관계를 구성하지 않습니다.\n2. 이용자는 회사의 사전동의없이 회사의 명칭, 상표, 로고 등을 자신의 재량으로 사용할 수 없으며, 회사와 이용자 간의 관계를 표시, 홍보 또는 과장 해서는 안됩니다.\n3. 본 약관 및 서비스 이용약관 전부는 회사와 이용자 간의 관계에서만 유효하며, 제3자는 본 약관 및 서비스 이용약관과 관련하여 어떠한 권리, 청구 등을 주장할 수 없습니다.\n4. 이용자는 이용자를 대신하여 회사가 공급하는 상품 또는 용역 서비스의 샘플의 이용에 대하여 모든 책임을 부담합니다.\n\n \n\n제 11조 (권리의 부여 및 합의)\n1. 이용자는 회사에게, 지리적 및 시간적 제한 없이, 이용자가 회사에 등록 또는 제공하는 모든 정보, 자료 등을 사용, 복제, 구현, 공개, 배포, 변경, 수정, 공개 전송, 임대, 파생 상품 제작, 상업적 및 비상업적인 목적으로 사용할 로열티 없는 권리 및 라이선스를 부여해야 합니다. 단, 회사는 이용자가 제공한 양식에서 이용자 상표를 변경하지 않습니다. (상표의 상대적 비율이 동일하게 유지되는 한, 상표의 크기를 재조정하는 데 필요한 범위까지는 제외)\n2. 회사에 등록 또는 제공되는 모든 정보, 자료 등이 항상 정확하고 완전하며 유효하다는 것을 보장하기 위해, 이용자는 필요한 경우 최신 정보, 자료 등을 즉시 제공하거나 등록해야 합니다.\n3. 회사는 상표권자에 의한 특정 상표의 삭제 요청을 준수해야 합니다. 단, 회사가 상표권자로부터 해당 상표에 대한 권리 또는 라이선스를 취득하지 않고 해당 상표를 사용할 수 있도록 관련 법령에서 허용하는 경우에는(예를 들어, 저작권의 정당한 사용, 상표의 기술적 사용, 제3자가 부여한 유효한 권리 또는 라이선스 등), 회사는 그러하지 아니합니다.\n4. 이용자는 서비스 이용과 관련하여 생산된 모든 정보가 회사의 자산이며 회사의 재량으로 회사가 수집하여 사용할 수 있음을 인정하고 이에 동의합니다.\n5. 이용자는 “클립” 서비스와 관련하여 이용자가 제공한 제안, 의견, 아이디어, 개선사항 또는 기타 대응이나 자료(관련 기술 포함)를 회사의 재량으로 공개, 재생산, 수정, 배포 및 사용할 수 있음을 인정하고 이에 동의합니다.\n6. 본 조항에 따른 의무는 본 약관 및 개별 서비스의 종료 후에도 회사 및 이용자에 대하여 유효하게 존속됩니다.\n\n \n\n제 12조 (이용자의 보증)\n1. 이용자는 (i) 관련 법률 및 규정에 따라 합법적이고 완전한 자격을 갖추고 본 약관 및 서비스 이용약관에 따라 권리, 라이선스 및 권한을 부여하는 데 필요한 모든 권리 및 권한을 보유하고 있으며, (ii) 이용자가 회사에 제공하거나 회사가 사용할 수 있는 모든 정보 및 자료는 항상 정확하고 완전, 유효하며, (iii) 이용자는 본 약관 및 서비스 이용약관에 따른 자신의 의무를 완전히 이행하여야 하고 관련 법령 및 규정을 준수함을 진술 및 보증합니다.\n2. 이용자는 “국제상거래에있어서외국공무원에대한뇌물방지법”, “부정청탁및 금품등수수의금지에관한법률” 등 국내 부패방지 관련 법령 및 미국 해외부패방지법 (FCPA), 영국 뇌물방지법 (Bribery Act) 등 해외 부패방지 관련 법령을 위반하지 아니하였음을 진술 및 보증하며, 향후에도 위 법령들을 위반하거나 회사가 위 법령들을 위반하게 되는 원인이 될 어떠한 행위도 하지 아니함을 진술 및 보증합니다.\n3. 이용자는 이용자 혹은 이용자를 직간접적으로 50% 이상 소유하고 있는 법인이 국제제재 적용 대상이 아니함을 진술 및 보증합니다.\n4. 이용자는 본 약관 및. 서비스에 따른 의무 이행 및 거래수행, 그의 상품, 자료 등으로 인하여 회사와 그 임직원에게 발생한 청구, 소송, 조사, 벌금, 검사, 행정적 조치 및 그에 따른 책임, 보상, 손해, 비용 등으로부터 회사와 임직원을 면책시키고 방어하며 보상해야 합니다.\n5. 청구, 소송, 조사, 벌금, 검사, 행정적 조치 등이 회사에 악영향을 미칠 가능성이 있다고 판단되는 경우, 회사는 자신의 비용으로 이에 대응하거나 이에 개입할 수 있습니다. 이 경우, 이용자는 회사의 사전 서면 동의 없이(해당 동의는 합리적 이유 없이 보류되어서는 안됨), 어떠한 절차에 연루되거나 어떠한 주장에 동의할 수 없습니다.\n6. 본 조항에 따른 의무는 본 계약 및 개별 서비스의 종료 후에도 회사와 이용자에 대하여 유효하게 존속됩니다.\n\n \n\n제 13조 (비밀 유지)\n1. 이용자는 서비스 사용중 자신이 인지하거나 취득한 회사 또는 서비스에 관한 어떠한 정보(서비스 이용 정보, 직접 또는 간접적으로 취득한 기술 및 사업 정보, 고객 정보 및 문서, 전자 파일 등과 같은 형식을 취하는 기타 그 밖의 정보, 본 약관에서 명시된 당사자들의 권리 의무에 관한 세부사항 등을 포함하나 이에 제한되지 않음, 이하 “기밀정보”)도 본 약관의 이행, 서비스의 사용, 서비스를 통한 상품의 구매자와의 거래 수행 등을 위한 목적 이외의 목적으로 사용해서는 안됩니다.\n2. 이용자는 모든 기밀정보가 회사 소유이며 자산가치를 지니고 있음을 인정하고, 본 약관 및 서비스 이용약관에서 달리 명시되지 아니하는 한, 기밀 정보 보호를 위해 합리적인 조치를 취해야 합니다.\n3. 이용자는 회사의 사전 서면동의없이 기밀정보를 복사, 복제또는 가공하거나 제3자에게 제공, 판매, 홍보 또는 공개할 수 없으며, 고의 또는 과실로 인한 제3자에 대한 기밀 정보 유출에 대하여 모든 책임을 부담합니다(제3자에 대한 손해 및 복구를 포함하나 이에 제한되지 않음).\n4. 본조항에 따른 의무는 본 약관 및. 개별 서비스의 종료 후에도 회사와 이용자에 대하여 유효하게 존속됩니다.\n\n \n\n제 14조  (ID 및 비밀번호 관리)\n1. ID 및 비밀번호는 서비스를 이용하기 위해 이용자 전용 시스템(또는 회사가 제공하는 다른 툴)에 접속하기 위한 기간 동안에만 사용될 수 있습니다.\n2. 이용자는 회사의 귀책사유가 아닌 사유로 인하여 발생한 ID 또는 비밀번호의 유출, 양도 또는 대여로 인해 발생하는 모든 손실 및 손해에 대하여 책임을 부담합니다.\n3. 이용자가 자신의 ID나 비밀번호가 도난 당하거나 권한 없는 제3자에 의해 사용되었다는 것을 인지한 경우, 이용자는 즉시 이를 회사에 통지하여야 합니다. 이 경우, 회사는 신속하게 해당 문제를 해결하기 위해 최선을 다합니다.\n\n \n\n제 15조 (이용자 개인정보 보호)\n1. 회사는 이용자가 동의한 서비스 운영 이외의 목적으로 이용자가 서비스 이용을 위해 제공한 개인정보를 이용하지 않습니다. 회사가 그러한 정보를 새로운 목적으로 사용하거나 제3자에게 제공하고자 하는 경우에는, 그러한 사용 또는 제공의 목적 등을 이용자에게 통지하고, 해당 사용 또는 제공 시점에 이용자로부터 별도의 동의를 얻어야 합니다. 단, 관련 법령 및 규정에서 달리 정하고 있는 경우에는 그러하지 아니합니다.\n2. 회사는 이용자가 개인정보의 수집, 이용 및 제공에 대한 동의를 거부할 경우 이용이 제한되는 서비스를 특정하여야 하며, 회사는 필수적이지 않은 개인정보의 수집, 이용 및 제공에 대한 동의를 거부한 이용자에 대해서 서비스 이용 약관을 제한하거나 거부해서는 안됩니다.\n3. 이용자의 개인정보를 제3자에게 제공할 필요가 있는 경우, 이용자의 개인정보를 보호하기 위하여 회사는 관련 법령이 정하는 바에 따라 이용자의 동의를 얻어야 하며, 회사가 이용자의 개인정보 처리를 제3자에게 위탁하는 경우, 회사는 “이용자 개인정보보호 정책(필요한 경우, 본 정책은 서비스 유형에 따라 다를 수 있음)”을 통해 위탁 관련 세부 사항을 공개해야 합니다.\n\n \n\n제 16조 (양도의 금지 등)\n1. 이용자는 회사의 사전 서면 동의없이 본 약관 및 서비스 이용약관에 따른 권리 및 의무를 제3자에게 양도할 수 없습니다.\n2. 본 약관 및 서비스 이용약관은 이용자 및 이용자의 승계인 및 양수인에 대하여 법적으로 구속력을 가집니다.\n\n \n\n제 17조 (윤리규정 준수)\n1. 회사와 이용자는 공정하고 투명한 윤리경영을 추진하여 상호간의 신뢰를 구축하고 지속 가능한 발전을 위해 다음의 의무사항을 준수해야 합니다.\n가. 회사는 이용자 및 관계자 혹은 제3자와 거래시 어떠한 경우에도 금품, 선물, 향응, 편의 또는 접대를 요구하거나 받는 등의 행위를 하지 않습니다.\n나. 이용자는 회사와의 계약 이행과정에서 불공정행위를 하거나 금품, 선물, 향응, 편의 또는 접대 등을 요구하거나 제공하지 않습니다.\n다. 이용자는 회사의 임직원 및 관계자 혹은 제3자가 대가를 요구하면서 고의적으로 업무를 지연하거나 불이익을 제공하는 등 부도덕한 행위를 하는 경우에는 회사의 윤리경영 담당부서로 즉시 신고하여야 합니다.\n2. 회사와 이용자는 본약관, 회사와 이용자 간의 제반 약정사항 및 법령을 준수하며, 이용자는 회사의 임직원, 기타 관련자 및 이해관계자와 부정한 목적으로 본 약관에 따른 서비스를 악용하지 않을 책임을 부담합니다.\n3. 회사 및 이용자가 제1항의 의무를 위반한 경우 위반 당사자는 상대방 당사자에 대하여 위반내용에 따른 거래 중지, 계약 해지 등의 책임을 부과합니다.\n4. 제 3항에 의하여 거래중지, 계약해지 등의 거래제한 조치를 받은 당사자는 거래 제한 조치를 취한 당사자에 대하여 손해배상청구 및 기타 민.형사상의 책임, 행정상의 책임의 일체의 이의를 제기하지 않습니다.\n\n \n\n제 18조  (손해배상)\n1. 일방 당사자가 자신의 귀책사유로 인해 본 서비스의 사용 및 본 약관의 이행과 관련하여 상대방 당사자에게 손해를 초래한 경우, 상대방 당사자가 입은 손해에 대해 배상하여야 합니다.\n2. 이용자의 관련 법령 및 규정, 본 약관, 서비스 이용약관, 이용자 정책 등 위반으로 인하여 회사의 명예훼손을 포함한 유무상의 손해가 당사에게 발생한 경우, 이용자는 회사가 입은 해당 손해에 대하여 전액 배상하여야 합니다. 이와 관련하여, 회사가 제 3자에게 발생한 손해에 대한 배상 책임이 있는 경우에는, 이용자는 회사가 지급해야 하는 손해 및 기타 관련 우발 지출(이자, 변호사 비용 및 기타 방어 비용 포함)에 대하여 전적으로 책임을 부담합니다.\n\n \n\n제 19조 (회사의 권한 및 면책)\n1. 일방 당사자가 자신의 귀책사유로 인해 본 서비스의 사용 및 본 약관의 이행과 관련하여 상대방 당사자에게 손해를 초래한 경우, 상대방 당사자가 입은 손해에 대해 배상하여야 합니다.\n2. 회사는 “클립” 서비스의 내용, 외관, 디자인, 기능 및 기타 양상을 결정할 수 있습니다.\n3. 회사는 본 약관 및 서비스 이용약관에서 명시된 제한된 목적을 위해 필요한 경우가 아니면 이용자 및 회원의 대리인으로 행동하지 않습니다.\n4. 회사는 합리적인 통제를 넘어 발생하는 사유, 사건등으로 인해 본 약관 및 서비스에 따른 의무 이행의 지연 또는 불이행에 대해 책임을 지지 않습니다.\n5. 회사는 관련 법령이 허용하는 한도 내에서 본 약관 및. 서비스로 인해 발생하는 투자 손실, 이익 손실, 사업 기회 손실 등에 대해 어떠한 보증도 제공하지 않으며, 회사는 이에 대해 책임 지지 않습니다. 또한, 본 약관이나 특정 거래와 관련하여 발생하는 회사의 총 책임은 해당 청구를 유발한 특정 서비스와 관련하여 이용자가 회사에 지난 6개월 동안 지급한 총 금액을 초과하지 않습니다.\n\n \n\n제 20조  (준거법 및 관할)\n1. 본 약관 및 서비스 이용약관에 대한 회사와 이용자 간의 해석차이로 인하여 발생하는 모든 분쟁은 대한민국 법에 따라 규율됩니다.\n2. 본 약관 및 서비스 이용으로 인하여 회사 및 이용자 간에 발생하는 모든 분쟁/소송은 서울 중앙지방법원에 관할권이 있습니다.\n\n \n\n[부칙]\n본 약관은  2020년 12월 1일부터 적용합니다.\n    </Text>\n    <Footer/>\n    </div>\n\n  )\n\n\n};\n\nexport default PrivacyPolicy;","/Users/bernardahn/Documents/GitHub/clip/src/components/Terms.js",["367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382"],"import React,{useEffect} from 'react';\nimport './navbar.css';\n// import Logo from './../logo.svg';\nimport {TouchableOpacity,Text,View,Modal,TouchableHighlight,Dimensions} from 'react-native';\nimport NavbarFiller from './NavBarFiller'\nimport Footer from './Footer'\nimport Logo from '../assets/header_logo.png'\nimport { nativeTouchData } from 'react-dom/test-utils';\nimport searchIcon from '../assets/icnSearch.png'\nimport userIcon from '../assets/icnUser.png'\nimport boxIcon from '../assets/icnBox.png'\nimport {BrowserRouter as Router,Switch,Route,Link} from 'react-router-dom'\n\nconst PrivacyPolicy=() => {\n  const [scrolled,setScrolled]=React.useState(false);\n  const [userModalVisible,setUserModalVisible]=React.useState(false);\n  const [cartModalVisible,setCartModalVisible]=React.useState(false);\n  const [height,setHeight]=React.useState(Dimensions.get('window').height)\n  const [width,setWidth]=React.useState(Dimensions.get('window').width)\n\n  const handleScroll=() => {\n    const offset=window.scrollY;\n    if(offset > 200 ){\n      setScrolled(true);\n    }\n    else{\n      setScrolled(false);\n    }\n  }\n  const toggleUserModal=()=>{\n      setUserModalVisible(!userModalVisible)\n  }\n  const toggleCartModal=()=>{\n    setCartModalVisible(!cartModalVisible)\n}\n  const onChange=()=>{\n    setHeight(Dimensions.get('window').height)\n    setWidth(Dimensions.get('window').width)\n    // console.log(height+\" : \"+width)\n  }\n  useEffect(() => {\n    window.addEventListener('scroll',handleScroll)\n    Dimensions.addEventListener('change',onChange)\n  },[])\n\n  let x=['navbar'];\n  if(scrolled){\n    x.push('scrolled');\n  }\n \n  return (    \n    <div>\n    <header className={x.join(\" \")}>\n        <div className=\"headerContainer\">\n        \n            <div className=\"logo\">\n            <a\n                href=\"/clip\"\n            >\n                <img src={Logo} alt=\"Logo\" title=\"Logo\" />\n            </a>\n            </div>\n        </div>\n    </header>\n    <NavbarFiller/>\n    <Text>\n    개인정보 처리방침\n\n​\n\n(주)쿼키(이하 “회사”)는 통신비밀보호법, 전기통신사업법, 정보통신망 이용촉진 및 정보보호 등에 관한 법률 등 정보통신 서비스 제공자가 준수하여야 할 관련 법령 상의 개인정보 보호 규정을 준수하며, 관련 법령에 의거한 개인정보 취급 방침을 정하여 이용자 권익 보호에 최선을 다하고 있습니다. 본 개인정보 처리 방침은 회사가 제공하는 클립 (CLIP) 서비스에 적용되며 다음과 같은 내용을 포함하고 있습니다.\n\n​\n\n1. 개인정보 수집 및 이용 현황\n\n회사는 서비스 제공을 위한 최소한의 범위 내에서 이용자의 동의 하에 개인정보를 수집하며, 수집한 모든 개인정보는 고지한 목적 범위 내에서만 사용됩니다.\n\n \n\n필수정보\n- 수집 항목: 전자메일(아이디), 비밀번호, 이름, 회사명, 회사규모, 직종, 직책, 전화번호, 웹사이트,블로그 또는 SNS주소, 직종, 직책, 전문분야, 회사규모.\n- 수집 및 이용목적: 본인 확인 및 가입 의사 확인, 회원가입 승인여부 판단, 부정이용 확인∙방지, 상담 및 문의 처리, 회원 맞춤형 정보 제공.\n- 보유 및 이용기간: 회원 탈퇴 시 즉시 삭제함. 부정이용 방지를 위한 정보(ID, 불량 이용 기록)는 탈퇴DB에서 6개월 후 삭제함.\n\n \n\n추가정보\n- 수집 항목: 수취인정보(이름, 연락처, 주소), 프로젝트정보(프로젝트 이름, 유형, 규모, 시기 등), 샘플이용정보(적용부위, 시공여부 등), 통화가능 시간.\n- 수집 및 이용목적: 물품의 주문/배송/취소. 제품 안내 및 상담, 문의 처리, 샘플제공업체 마케팅 정보 제공\n- 보유 및 이용기간: 재화 또는 서비스의 제공 목적이 달성된 후 파기(단, 관계법령에 정해진 규정에 따라 법정기간 동안 보관). 거래기록 보존을 위한 정보(ID, 계좌번호, 배송지 주소)는 5년간 보관함(전자상거래 등에서의 소비자보호에 관한 법률).\n\n \n\n선택정보\n- 수집 항목: 마케팅 정보 수신 동의(휴대폰 번호, 전자메일, SMS/MMS), 뉴스레터 수신 동의(전자메일).\n- 수집 및 이용목적: 신규 서비스 안내, 설문, 이벤트 관련 정보 및 참여 기회 제공, 광고 및 마케팅 정보 제공.\n- 보유 및 이용기간: 정보 삭제 또는 이용 정지 요청 및 회원 탈퇴 시 즉시 삭제\n\n※ 부정이용이란 회원 탈퇴 후 재가입, 허위정보를 통한 물품 주문, 물품 주문 후 구매취소 등을 반복적으로 행하는 등, 이용약관 등에서 금지하고 있는 행위, 명의도용 등의 불·편법 행위 등을 포함합니다.\n\n※ 고객의 권리를 보장해 드리기 위하여 탈퇴 회원 또는 장기 미이용 회원에게 환불 또는 리콜 안내를 목적으로 구매정보를 이용하여 연락을 취할 수 있습니다.\n\n※ 위의 정보는 서비스 이용에 따른 통계∙분석에 이용될 수 있습니다.\n\n \n\n2. 개인정보의 공유 및 제공\n\n회사는 “1. 개인정보 수집 및 이용 현황”에서 고지한 범위 내에서만 개인정보를 이용하며, 이용자의 사전 동의 없이는 동 범위를 초과하여 이용하지 않습니다. 물품 주문이 이루어진 경우, 상담 및 배송 등의 원활한 거래 이행을 위하여 관련된 정보를 필요한 범위 내에서 샘플제공업체(제3자)에게 전달합니다.\n\n제공받는 자: 샘플제공 업체\n제공 목적: 서비스 제공, 업체 직발송 물품 배송, 제품 안내, 홍보 및 상담, 문의 처리\n제공 정보: 수취인정보(이름, 연락처, 주소), 프로젝트정보(프로젝트 이름, 유형, 규모, 시기 등), 샘플이용정보(적용부위, 시공여부 등), 통화가능 시간.\n보유 및 이용기간: 재화 또는 서비스의 제공 목적이 달성된 후 파기(단, 관계법령에 정해진 규정에 따라 법정기간 동안 보관)\n\n※ 동의 거부권 등에 대한 고지\n\n개인정보 제공은 서비스 이용을 위해 꼭 필요합니다. 개인정보 제공을 거부하실 수 있으나, 이 경우 서비스 이용이 제한될 수 있습니다. 개인정보 제3자 제공은 샘플 주문시에만 이뤄지며, 명확한 내용은 주문 신청 시 안내하여 드립니다.\n\n \n\n3. 개인정보의 파기\n\n수집된 개인정보의 보유•이용기간은 서비스 이용계약 체결(회원가입)시부터 서비스 이용계약 해지(탈퇴신청, 직권탈퇴포함)시까지 입니다. 또한 동의 해지 시 고객의 개인정보를 상기 명시한 정보보유 사유에 따라 일정 기간 저장하는 자료를 제외하고는 지체 없이 파기합니다. 종이에 출력된 개인정보는 분쇄기로 분쇄하거나 소각 등을 통하여 파기하고, 전자적 파일형태로 저장된 개인정보는 기록을 재생할 수 없는 기술적 방법 또는 물리적 방법을 사용하여 파기합니다.\n\n수집•이용목적이 달성된 개인정보의 경우 별도의 DB에 옮겨져 내부규정 및 관련 법령을 준수하여 안전하게 보관되며, 정해진 기간이 종료되었을 때 지체없이 파기됩니다. 이때, 별도의 DB로 옮겨진 개인정보는 회원이 동의한 목적을 초과하거나 혹은 법률이 정한 경우 외의 다른 목적으로 이용되지 않습니다.\n\n \n\n4. 고객의 권리와 의무\n\n \n\n4.1 고객의 권리\n\n고객 및 법정대리인은 언제든지 수집 정보에 대하여 수정, 동의 철회, 삭제, 열람을 요청할 수 있습니다. 다만, 동의 철회, 삭제 시 서비스의 일부 또는 전부 이용이 제한될 수 있습니다.\n\n회사가 수집한 개인정보는 CLIP 웹페이지에서 - 개인정보 확인 수정 / 주문목록 / 배송조회를 통해 확인할 수 있습니다. CLIP 웹을 통해 직접 확인하지 못하는 정보는 고객센터 help@clip.style에 요청하여 확인할 수 있습니다.\n\n개인정보 동의 철회 및 삭제, 처리 정지를 요청하고자 하는 경우에는 고객센터 help@clip.style을 통해 요청할 수 있습니다. 또한, 고객은 언제든 회원탈퇴를 통해 개인정보의 수집 및 이용 동의를 철회할 수 있습니다. 이러한 요청 시, 서비스의 일부 또는 전부 이용이 제한될 수 있습니다.\n\n또한 법률에 특별한 규정이 있거나 법령상 의무를 준수하기 위하여 불가피한 경우, 다른 사람의 생명·신체를 해할 우려가 있거나 다른사람의 재산과 그 밖의 이익을 부당하게 침해할 우려가 있는 경우, 개인정보를 처리하지 아니하면 정보 주체와 약정한 서비스를 제공하지 못하는 등 계약의 이행이 곤란한 경우로서 정보주체가 그 계약의 해지 의사를 명확하게 밝히지 아니한경우에는 동의 철회, 삭제, 처리 정지가 어려울 수 있습니다.\n\n요청하신 처리가 완료될 때까지 해당 정보를 이용하거나 타인에게 제공하지 않습니다. 또한, 합리적인 사유로 잘못된 개인정보를 제3자에게 이미 제공한 경우, 그 결과를 지체 없이 제3자에게 통지하여 동의 철회, 삭제, 처리 정지하도록 조치합니다.\n\n \n\n4.2. 고객의 의무\n\n고객은 자신의 개인정보를 보호할 의무가 있으며, 회사의 귀책사유가 없이 ID(이메일 주소), 비밀번호, 접근매체 등의양도·대여·분실이나 로그인 상태에서 이석 등 고객 본인의 부주의나 관계법령에 의한 보안조치로 차단할 수 없는 방법이나 기술을 사용한 해킹 등 회사가 상당한 주의에도 불구하고 통제할 수 없는 인터넷상의 문제 등으로 개인정보가 유출되어 발생한 문제에 대해 회사는 책임을 지지 않습니다.\n\n고객은 자신의 개인정보를 최신의 상태로 유지해야 하며, 고객의 부정확한 정보 입력으로 발생하는 문제의 책임은 고객 자신에게 있습니다. 타인의 개인정보를 도용한 회원가입 또는 ID등을 도용하여 결제 처리 시 고객 자격 상실과 함께 관계법령에 의거하여 처벌될 수 있습니다.\n\n고객은 아이디, 비밀번호 등에 대해 보안을 유지할 책임이 있으며 제3자에게 이를 양도하거나 대여할 수 없습니다. 고객은 회사의 개인정보보호정책에 따라 보안을 위한 주기적인 활동에 협조할 의무가 있습니다.\n\n \n\n5. 자동 수집되는 개인정보 및 거부에 관한 사항\n\n회사는 이용자 맞춤서비스 등을 제공하기 위하여 쿠키(cookie)를 설치 및 운영합니다. 쿠키의 사용 목적과 거부에 관한 사항은 아래와 같습니다.\n\n가. 쿠키란?\n쿠키는 웹사이트를 운영하는데 이용되는 서버가 이용자의 브라우저에 보내는 아주 작은 텍스트 파일로서 이용자의 컴퓨터에 저장되어 운영됩니다.\n\n나. 쿠키의 사용 목적\n이용자들의 접속 관리, 이용자 별 사용 환경 제공, 이용자 활동 정보 파악, 이벤트 및 프로모션 통계 확인 등을 파악하여 최적화된 맞춤형 서비스를 제공하기 위해 사용합니다.\n\n다. 쿠키의 설치·운영 및 거부\n서비스를 이용함에 있어 이용자는 쿠키 설치에 대한 선택권을 가지고 있습니다. 이용자는 웹 브라우저에서 옵션을 설정함으로써 모든 쿠키를 허용 또는 거부 하거나, 쿠키가 저장될 때마다 확인을 거치도록 할 수 있습니다. 쿠키 설치 허용 여부를 지정하는 방법은 다음과 같습니다.\n\nInternet Explorer : 웹 브라우저 상단 도구 메뉴 > 인터넷 옵션 > 개인정보 > 개인정보처리 수준 설정Chrome : 웹 브라우저 우측 설정 메뉴 > 도구 > 인터넷 사용기록 삭제\n\n \n\n6. 개인정보 보호책임자 및 담당자 안내\n\n고객의 개인정보에 관한 업무를 총괄해서 책임지고, 개인정보와 관련된 불만처리 및 피해구제 등을 위하여 아래와 같이 개인정보 보호책임자 및 담당부서를 지정하여 운영하고 있습니다. 회사가 제공하는 서비스를 이용하면서 발생하는 개인정보 보호 관련 문의, 불만, 피해구제 등에 관한 사항은 아래로 연락하여 문의할 수 있습니다.\n\n \n\n개인정보 보호책임자\n성명: 부창용\n이메일: help@clip.style\n    \n개인정보 민원처리 담당부서\n부서명: (주)쿼키 고객센터\n이메일: help@clip.style\n\n \n\n기타 개인정보 침해에 대한 신고나 상담이 필요하신 경우에는 아래 기관에 문의하시기 바랍니다.\n대검찰청 사이버범죄 수사단 (www.spo.go.kr / 국번없이 1301)\n개인정보 침해 신고 센터 (privacy.kisa.or.kr / 국번없이 118)\n경찰청 사이버안전국 (http://cyberbureau.police.go.kr / 국번없이 182)\n\n \n\n7. 링크사이트\n\n회사는 홈페이지에 다른 회사의 웹사이트 또는 자료에 대한 링크를 제공할 수 있습니다. 홈페이지에 링크되어 있는 다른 회사의 웹사이트로 옮겨갈 경우 해당 웹사이트의 개인정보처리방침이 적용됩니다.\n\n \n\n8. 고지의 의무\n\n이 개인정보 처리방침은 시행일로부터 적용됩니다. 고객의 개인정보 권리에 중요한 변경 사유가 발생하는 경우 최소 14일전에 공지사항을 통하여 고지합니다. 이 외의 다른 변경사항이 발생하는 경우에는 변경사항의 시행 최소 7일 전부터 공지사항을 통해 고지합니다.\n\n현재 개인정보 처리방침 공고일자: 2020년   12월 1일\n현재 개인정보 처리방침 시행일자: 2020년   12월 1일\n    </Text>\n    <Footer/>\n    </div>\n\n  )\n\n\n};\n\nexport default PrivacyPolicy;","/Users/bernardahn/Documents/GitHub/clip/src/components/BrandsDropDown.js",["383","384","385","386","387","388","389","390","391","392","393","394","395","396"],"import React,{useEffect} from 'react';\nimport {TouchableOpacity,Text,View,Modal,Image,TouchableHighlight,Linking,Dimensions} from 'react-native';\nimport xIcon from '../assets/x.png'\n\nconst queryString = require('query-string');\n\nfunction BrandsDropDown(props) {\n  // var bestProducts\n  const[brandListData,setBrandListData]=React.useState([])\n  const[brandData,setBrandData]=React.useState({})\n  const[detailView,setDetailView]=React.useState(false)\n  const[brandId,setBrandId]=React.useState(null)\n  const [height,setHeight]=React.useState(Dimensions.get('window').height)\n  const [width,setWidth]=React.useState(Dimensions.get('window').width)\n//   const brands=()=>{\n//     fetch('/brandslist')\n//     .then(res=>res.json())\n//     .then((incomingData)=>{\n//       setBrandListData(incomingData)\n//     })\n//     .catch(err=>{\n//         console.log(err)\n//     })\n\n//   }\nconst brands=()=>{\n    fetch('/brandslist')\n    .then(res=>res.json())\n    .then((incomingData)=>{\n      setBrandListData(incomingData)\n    })\n    .catch(err=>{\n        console.log(err)\n    })\n  }\n//   const oneBrand=(ct_id)=>{\n//       fetch('/onebrand?'+\n//         queryString.stringify({\n//               ct_id:ct_id\n//             })\n//         )\n//       .then(res=>res.json())\n//       .then((incomingData)=>{\n//         console.log(incomingData)\n//         setBrandData(incomingData)\n//         })\n//       .catch(err=>{\n//           console.log(err)\n//       })\n//   }\n  const onChange=()=>{\n    setHeight(Dimensions.get('window').height)\n    setWidth(Dimensions.get('window').width)\n  }\n  useEffect(() => {\n\n    Dimensions.addEventListener('change',onChange)\n    // const parsed = queryString.parse(props.location.search);\n    // console.log(parsed.ct_id==undefined)\n    // if(parsed.ct_id==undefined){\n    brands()\n    //   setDetailView(false)\n    // }\n    // else{\n    //   oneBrand(parsed.ct_id)\n    //   setBrandId(parsed.ct_id)\n    //   setDetailView(true)\n    // }\n\n  },[])\n  useEffect(()=>{\n    console.log(typeof(brandListData))\n    console.log(brandListData)\n  },[brandListData])\n  useEffect(()=>{\n    if(brandData.bestproducts_brand){\n      console.log(brandData)\n    }\n  },[brandData])\n  \n    return (\n        <div\n            style={{\n            position:'fixed',\n            height:'100vh',\n            width:'100vw',\n            top:'100px',\n            left:0,\n            backgroundColor:'white',\n            display:'block'\n            }}\n        >\n          <div\n          style={{\n            paddingTop:'50px',\n            paddingLeft:'65px',\n            paddingRight:'65px'\n          }}\n          >\n            <div\n              style={{\n                textAlign:'left',\n                // margin:'25pt'\n                paddingLeft:'25px',\n                paddingRight:'25px',\n                backgroundColor:'transparent'\n              }}\n            >\n            <div\n                style={{\n                  height:'25px',\n                  width:'25px',\n                  backgroundColor:'transparent',\n                  position: 'absolute',\n                  top:'62px',\n                  right:'75px'\n                }}\n              >\n                <TouchableOpacity\n                  onPress={()=>{\n                    props.toggleBrandsDropDown()\n                  }}\n                >\n                <img\n                  src={xIcon}\n                  style={{\n                    height:'25px',\n                    width:'25px',\n                  }}\n                >\n                </img>\n                </TouchableOpacity>\n              </div>\n              \n              <Text\n                style ={{\n                  fontSize: '40px',\n                  fontWeight:'700',\n                  textDecorationLine:'none',\n                  color:'black',\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                  flexDirection:'row',\n                  // margin:11,\n                  marginTop:'5px',\n                  padding:'auto',\n                  pointerEvents:'none'\n                }}\n              >\n                브랜드\n              </Text>\n             \n            </div>\n            <div\n              style={{\n                height:'20px',\n                width:'100vw',\n                backgroundColor:'transparent'\n              }}\n            >\n\n            </div>\n            <div\n            style={{\n              //padding:'25px',\n              \n            }}\n            >\n            <div\n            style={{\n              // columnCount:3,\n              //flexwrap:'wrap',\n              //flexDirection:'column',\n              display: 'grid',\n              gridTemplateColumns: 'auto auto auto',\n              width:'80vw',\n              height:'50vh',\n              overflowY: 'scroll',\n            }}\n            >\n          \n            {brandListData.map((brand)=>\n            <div\n              style={{\n                marginTop:'3px'\n              }}\n            >\n            <TouchableOpacity\n              onPress={() => \n                Linking.openURL(`/brands?ct_id=${brand.ct_id}`)\n              }\n            >\n            \n            <div\n            style={{\n              textAlign:'left',\n              height:'30px',\n              paddingLeft:'27px',\n              paddingRight:'27px',\n              paddingTop:'7px',\n              backgroundColor:'transparent'\n            }}\n            >\n\n              <Text\n                style ={{\n                  fontSize: '12pt',\n                  fontWeight:'500',\n                  textDecorationLine:'none',\n                  color:'black',\n                  textAlign:'left',\n                  alignItems:'center',\n                  justifyContent:'center',\n                  flexDirection:'row',\n                  marginTop:'45pt',\n                  pointerEvents:'none',\n                  backgroundColor:'transparent',\n                  pointerEvents:'none',\n              }}\n              >\n                {brand.ct_text}\n              </Text>\n            </div>\n            \n            </TouchableOpacity>\n            </div>\n            )}\n            </div>\n            </div>\n          </div>\n      </div>\n    );\n}\n  \n  export default BrandsDropDown;","/Users/bernardahn/Documents/GitHub/clip/src/components/CategoryDropDown.js",["397","398","399","400","401","402","403","404","405","406","407","408","409","410"],"import fetch from 'node-fetch';\nimport React,{useEffect} from 'react';\nimport {TouchableOpacity,Text,View,Modal,Image,TouchableHighlight,Linking,Dimensions} from 'react-native';\nimport xIcon from '../assets/x.png'\n\nconst queryString = require('query-string');\n\nfunction CategoryDropDown(props) {\n  // var bestProducts\n  var subCategory=[]\n  const[categoryData,setCategoryData]=React.useState([])\n  const[detailedCategoryData,setDetailedCategoryData]=React.useState({})\n  const [height,setHeight]=React.useState(Dimensions.get('window').height)\n  const [width,setWidth]=React.useState(Dimensions.get('window').width)\n\n\n  const outerCategory=(ct_id)=>{\n    fetch('/categorylist?'+\n        queryString.stringify({\n            ct_depth:2,\n            ct_parent:1\n        })\n    )\n    .then(res=>res.json())\n    .then((incomingData)=>{\n      // console.log(incomingData)\n      setCategoryData(incomingData)\n    })\n    .catch(err=>{\n        console.log(err)\n    })\n  \n  }\n  const categoryList=()=>{\n    fetch('/wholecategorylist')\n    .then(res=>res.json())\n    .then((incomingData)=>{\n      setCategoryData(incomingData)\n    })\n    .catch(err=>{\n      console.log(err)\n    })\n\n  }\n  const detailedCategoryDataObject = function(){\n    var data=[]\n    // if(detailedCategoryData.length==0){\n      console.log('fetch call for category')\n      categoryData.map((oneCategory,index)=>{\n        fetch('/categorylist?'+\n          queryString.stringify({\n            ct_depth:3,\n            // ct_parent:categoryData[index].ct_id\n            ct_parent:oneCategory.ct_id\n          })\n        )\n        .then(res=>res.json())\n        .then((childrenData)=>{\n\n          //setDetailedCategoryData(...detailedCategoryData,childrenData)\n          data.push({...oneCategory,children:childrenData})\n          //subCategory[index]=childrenData\n\n        })\n        .catch(err=>{\n            console.log(err)\n            // return {...oneCategory,children:null}\n            // data.push({...oneCategory,children:null})\n        })\n  \n      })\n      setDetailedCategoryData(data)\n      \n      // return data\n    // }\n    // else{\n    //   return detailedCategoryData\n    // }\n   \n}\n\n\n  const onChange=()=>{\n    setHeight(Dimensions.get('window').height)\n    setWidth(Dimensions.get('window').width)\n  }\n  useEffect(() => {\n    Dimensions.addEventListener('change',onChange)\n    //outerCategory()\n    categoryList()\n  },[])\n\n  useEffect(()=>{\n\n    // const detailedCategoryDataArray = function(){\n    //     var data=[]\n    //     // if(detailedCategoryData.length==0){\n    //       console.log('fetch call for category')\n    //       categoryData.map((oneCategory,index)=>{\n    //         fetch('/categorylist?'+\n    //           queryString.stringify({\n    //             ct_depth:3,\n    //             ct_parent:categoryData[index].ct_id\n    //           })\n    //         )\n    //         .then(res=>res.json())\n    //         .then((childrenData)=>{\n    //           data.push({...oneCategory,children:childrenData})\n    //         })\n    //         .catch(err=>{\n    //             console.log(err)\n    //             // return {...oneCategory,children:null}\n    //             // data.push({...oneCategory,children:null})\n    //         })\n      \n    //       })\n    //       return data\n    //     // }\n    //     // else{\n    //     //   return detailedCategoryData\n    //     // }\n       \n    // }\n\n    // setDetailedCategoryData(detailedCategoryDataArray)\n    console.log(categoryData)\n    //detailedCategoryDataObject()\n  },[categoryData])\n  \n  // useEffect(()=>{\n  //   console.log(detailedCategoryData)\n  // },[detailedCategoryData])\n  if(categoryData){\n    return (\n      <div\n      style={{\n      position:'fixed',\n      height:'100vh',\n      width:'100vw',\n      top:'100px',\n      left:0,\n      backgroundColor:'white',\n      display:'block'\n      }}\n  >\n    <div\n    style={{\n      paddingTop:'50px',\n      paddingLeft:'65px',\n      paddingRight:'65px'\n    }}\n    >\n      <div\n        style={{\n          textAlign:'left',\n          // margin:'25pt'\n          paddingLeft:'0px',\n          paddingRight:'0px',\n          backgroundColor:'transparent'\n        }}\n      >\n      <div\n          style={{\n            height:'25px',\n            width:'25px',\n            backgroundColor:'transparent',\n            position: 'absolute',\n            top:'62px',\n            right:'75px'\n          }}\n        >\n          <TouchableOpacity\n            onPress={()=>{\n              // console.log(detailedCategoryData)\n              props.toggleCategoryDropDown()\n            }}\n          >\n          <img\n            src={xIcon}\n            style={{\n              height:'25px',\n              width:'25px',\n            }}\n          >\n          </img>\n          </TouchableOpacity>\n        </div>\n        \n        <Text\n          style ={{\n            fontSize: '40px',\n            fontWeight:'700',\n            textDecorationLine:'none',\n            color:'black',\n            textAlign:'center',\n            alignItems:'center',\n            justifyContent:'center',\n            flexDirection:'row',\n            // margin:11,\n            marginTop:'5px',\n            //padding:'auto',\n            pointerEvents:'none'\n          }}\n        >\n          자재카테고리\n        </Text>\n       \n      </div>\n      <div\n        style={{\n          height:'20px',\n          width:'100vw',\n          backgroundColor:'transparent'\n        }}\n      >\n\n      </div>\n      <div\n      style={{\n        //padding:'25px',\n        \n      }}\n      >\n      <div\n      style={{\n        columnCount:3,\n        flexwrap:'wrap',\n        flexDirection:'column',\n        display: 'grid',\n        gridTemplateColumns: 'auto auto auto',\n        // padding:'100px',\n        width:'80vw',\n        height:'62vh',\n        overflowY: 'scroll',\n      }}\n      >\n      {/* {detailedCategoryData.map((category)=> */}\n      {categoryData.map((category,index)=>\n    \n      \n      <div>\n      <div\n      style={{\n        textAlign:'left',\n        height:'200px',\n        //paddingLeft:'27px',\n        //paddingRight:'27px',\n        backgroundColor:'transparent'\n      }}\n      >\n        <TouchableOpacity\n                // onPress={() => \n                //   Linking.openURL(`/brands?ct_id=${brand.ct_id}`)\n                // }\n                onPress={() => Linking.openURL(`/searchPage?search_target=CATEGORY_DEPTH1&search_value=${category.ct_id}`)}\n              >\n        <Text\n          style ={{\n            fontSize: '15pt',\n            fontWeight:'700',\n            textDecorationLine:'none',\n            color:'black',\n            textAlign:'left',\n            alignItems:'center',\n            justifyContent:'center',\n            flexDirection:'row',\n            // marginTop:'45pt',\n            pointerEvents:'none',\n            backgroundColor:'transparent',\n            pointerEvents:'none',\n            // marginTop:100\n        }}\n        >\n          {category.ct_text}\n        </Text>\n        </TouchableOpacity> \n        <div\n          style={{\n            flexDirection:'column'\n          }}\n        >\n        {categoryData[index].children.map((child,jndex)=>\n          <div\n            style={{\n              paddingTop:'7px'\n            }}\n          >\n          <TouchableOpacity\n          // onPress={() => \n          //   Linking.openURL(`/brands?ct_id=${brand.ct_id}`)\n          // }\n          onPress={() => Linking.openURL(`/searchPage?search_target=CATEGORY_DEPTH2&search_value=${child.ct_id}`)}\n          >\n          <Text\n            style ={{\n              fontSize: '12pt',\n              fontWeight:'500',\n              textDecorationLine:'none',\n              color:'black',\n              textAlign:'left',\n              alignItems:'center',\n              justifyContent:'center',\n              flexDirection:'row',\n             // marginTop:'45pt',\n              pointerEvents:'none',\n              backgroundColor:'transparent',\n              pointerEvents:'none',\n              // marginTop:100\n          }}\n          >\n            {child.ct_text}\n          </Text>\n          </TouchableOpacity>\n          </div>\n        )}\n        </div>\n      </div>\n      </div>\n      \n)}\n      </div>\n      </div>\n    </div>\n</div>\n    );\n  }\n\telse{\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Text>\n\t\t\t\t로딩중 ...\n\t\t\t\t</Text>\n\t\t\t</div>\n\t\t)\n\t}\n}\n  \n  export default CategoryDropDown;","/Users/bernardahn/Documents/GitHub/clip/src/components/SearchPage.js",["411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508"],"/Users/bernardahn/Documents/GitHub/clip/src/components/UseDropDown.js",["509","510","511","512","513","514","515","516","517","518","519","520","521","522"],"import fetch from 'node-fetch';\nimport React,{useEffect} from 'react';\nimport {TouchableOpacity,Text,View,Modal,Image,TouchableHighlight,Linking,Dimensions} from 'react-native';\nimport xIcon from '../assets/x.png'\n\nconst queryString = require('query-string');\n\nfunction UseDropDown(props) {\n  // var bestProducts\n  var subUse=[]\n  const[usageData,setUsageData]=React.useState([])\n  const[detailedUseData,setDetailedUseData]=React.useState({})\n  const [height,setHeight]=React.useState(Dimensions.get('window').height)\n  const [width,setWidth]=React.useState(Dimensions.get('window').width)\n\n\n  const outerUse=(ct_id)=>{\n    fetch('/Uselist?'+\n        queryString.stringify({\n            ct_depth:2,\n            ct_parent:1\n        })\n    )\n    .then(res=>res.json())\n    .then((incomingData)=>{\n      // console.log(incomingData)\n      setUsageData(incomingData)\n    })\n    .catch(err=>{\n        console.log(err)\n    })\n  \n  }\n  const usageList=()=>{\n    fetch('/wholeuselist')\n    .then(res=>res.json())\n    .then((incomingData)=>{\n      setUsageData(incomingData)\n    })\n    .catch(err=>{\n      console.log(err)\n    })\n\n  }\n  const detailedUseDataObject = function(){\n    var data=[]\n    // if(detailedUseData.length==0){\n      console.log('fetch call for usage')\n      usageData.map((oneUse,index)=>{\n        fetch('/uselist?'+\n          queryString.stringify({\n            ct_depth:3,\n            // ct_parent:useData[index].ct_id\n            ct_parent:oneUse.ct_id\n          })\n        )\n        .then(res=>res.json())\n        .then((childrenData)=>{\n\n          //setDetailedUseData(...detailedUseData,childrenData)\n          data.push({...oneUse,children:childrenData})\n          //subUse[index]=childrenData\n\n        })\n        .catch(err=>{\n            console.log(err)\n            // return {...oneUse,children:null}\n            // data.push({...oneUse,children:null})\n        })\n  \n      })\n      setDetailedUseData(data)\n      \n      // return data\n    // }\n    // else{\n    //   return detailedUseData\n    // }\n   \n}\n\n\n  const onChange=()=>{\n    setHeight(Dimensions.get('window').height)\n    setWidth(Dimensions.get('window').width)\n  }\n  useEffect(() => {\n    Dimensions.addEventListener('change',onChange)\n    //outerUse()\n    usageList()\n  },[])\n\n  useEffect(()=>{\n\n    // const detailedUseDataArray = function(){\n    //     var data=[]\n    //     // if(detailedUseData.length==0){\n    //       console.log('fetch call for Use')\n    //       UseData.map((oneUse,index)=>{\n    //         fetch('/Uselist?'+\n    //           queryString.stringify({\n    //             ct_depth:3,\n    //             ct_parent:UseData[index].ct_id\n    //           })\n    //         )\n    //         .then(res=>res.json())\n    //         .then((childrenData)=>{\n    //           data.push({...oneUse,children:childrenData})\n    //         })\n    //         .catch(err=>{\n    //             console.log(err)\n    //             // return {...oneUse,children:null}\n    //             // data.push({...oneUse,children:null})\n    //         })\n      \n    //       })\n    //       return data\n    //     // }\n    //     // else{\n    //     //   return detailedUseData\n    //     // }\n       \n    // }\n\n    // setDetailedUseData(detailedUseDataArray)\n    console.log(usageData)\n    //detailedusageDataObject()\n  },[usageData])\n  \n  // useEffect(()=>{\n  //   console.log(detaileduseData)\n  // },[detaileduseData])\n  if(usageData){\n    return (\n      <div\n      style={{\n      position:'fixed',\n      height:'100vh',\n      width:'100vw',\n      top:'100px',\n      left:0,\n      backgroundColor:'white',\n      display:'block'\n      }}\n  >\n    <div\n    style={{\n      paddingTop:'50px',\n      paddingLeft:'65px',\n      paddingRight:'65px'\n    }}\n    >\n      <div\n        style={{\n          textAlign:'left',\n          // margin:'25pt'\n          paddingLeft:'0px',\n          paddingRight:'0px',\n          backgroundColor:'transparent'\n        }}\n      >\n      <div\n          style={{\n            height:'25px',\n            width:'25px',\n            backgroundColor:'transparent',\n            position: 'absolute',\n            top:'62px',\n            right:'75px'\n          }}\n        >\n          <TouchableOpacity\n            onPress={()=>{\n              // console.log(detailedUseData)\n              props.toggleUseDropDown()\n            }}\n          >\n          <img\n            src={xIcon}\n            style={{\n              height:'25px',\n              width:'25px',\n            }}\n          >\n          </img>\n          </TouchableOpacity>\n        </div>\n        \n        <Text\n          style ={{\n            fontSize: '40px',\n            fontWeight:'700',\n            textDecorationLine:'none',\n            color:'black',\n            textAlign:'center',\n            alignItems:'center',\n            justifyContent:'center',\n            flexDirection:'row',\n            // margin:11,\n            marginTop:'5px',\n            //padding:'auto',\n            pointerEvents:'none'\n          }}\n        >\n          사공부위\n        </Text>\n       \n      </div>\n      <div\n        style={{\n          height:'20px',\n          width:'100vw',\n          backgroundColor:'transparent'\n        }}\n      >\n\n      </div>\n      <div\n      style={{\n        //padding:'25px',\n        \n      }}\n      >\n      <div\n      style={{\n        columnCount:3,\n        flexwrap:'wrap',\n        flexDirection:'column',\n        display: 'grid',\n        gridTemplateColumns: 'auto auto auto',\n        // padding:'100px',\n        width:'80vw',\n        height:'62vh',\n        overflowY: 'scroll',\n      }}\n      >\n      {/* {detaileduseData.map((use)=> */}\n      {usageData.map((usage,index)=>\n    \n      \n      <div>\n      <div\n      style={{\n        textAlign:'left',\n        height:'200px',\n        //paddingLeft:'27px',\n        //paddingRight:'27px',\n        backgroundColor:'transparent'\n      }}\n      >\n        <TouchableOpacity\n                // onPress={() => \n                //   Linking.openURL(`/brands?ct_id=${brand.ct_id}`)\n                // }\n                onPress={() => Linking.openURL(`/searchPage?search_target=USE_DEPTH1&search_value=${usage.ct_id}`)}\n              >\n        <Text\n          style ={{\n            fontSize: '15pt',\n            fontWeight:'700',\n            textDecorationLine:'none',\n            color:'black',\n            textAlign:'left',\n            alignItems:'center',\n            justifyContent:'center',\n            flexDirection:'row',\n            // marginTop:'45pt',\n            pointerEvents:'none',\n            backgroundColor:'transparent',\n            pointerEvents:'none',\n            // marginTop:100\n        }}\n        >\n          {usage.ct_text}\n        </Text>\n        </TouchableOpacity> \n        <div\n          style={{\n            flexDirection:'column'\n          }}\n        >\n        {usageData[index].children.map((child,jndex)=>\n          <div\n            style={{\n              paddingTop:'7px'\n            }}\n          >\n          <TouchableOpacity\n          // onPress={() => \n          //   Linking.openURL(`/brands?ct_id=${brand.ct_id}`)\n          // }\n          onPress={() => Linking.openURL(`/searchPage?search_target=USE_DEPTH2&search_value=${child.ct_id}`)}\n          >\n          <Text\n            style ={{\n              fontSize: '12pt',\n              fontWeight:'500',\n              textDecorationLine:'none',\n              color:'black',\n              textAlign:'left',\n              alignItems:'center',\n              justifyContent:'center',\n              flexDirection:'row',\n             // marginTop:'45pt',\n              pointerEvents:'none',\n              backgroundColor:'transparent',\n              pointerEvents:'none',\n              // marginTop:100\n          }}\n          >\n            {child.ct_text}\n          </Text>\n          </TouchableOpacity>\n          </div>\n        )}\n        </div>\n      </div>\n      </div>\n      \n)}\n      </div>\n      </div>\n    </div>\n</div>\n    );\n  }\n\telse{\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Text>\n\t\t\t\t로딩중 ...\n\t\t\t\t</Text>\n\t\t\t</div>\n\t\t)\n\t}\n}\n  \n  export default UseDropDown;","/Users/bernardahn/Documents/GitHub/clip/src/components/Pagination.js",["523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543"],"import fetch from 'node-fetch';\nimport React,{useEffect} from 'react';\nimport {TouchableOpacity,Text,View,Modal,Image,TouchableHighlight,Linking,Dimensions} from 'react-native';\nimport xIcon from '../assets/x.png'\nconst queryString = require('query-string');\n\nfunction Pagination(props) {\n    const[currentPage,setCurrentPage]=React.useState(1)\n    const[endPage,setEndPage]=React.useState(0)\n    const[pageNeighbours,setPageNeighbours]=React.useState(2)\n    const[betweenPages,setBetweenPages]=React.useState([])\n    // useEffect(() => {\n    // },[])\n    useEffect(() => {\n        setCurrentPage(props.currentPage)\n        setEndPage(props.endPage)\n        var array=[]\n        for(var i= props.currentPage-2;i<props.currentPage+3;i++){\n            array.push(i)\n        }\n        if(array.indexOf(1)!=-1){\n            for(var i=0;i<array.indexOf(1)+1;i++){\n                array.push(array[array.length-1]+1)\n            }\n            array=array.splice(array.indexOf(1)+1)\n        }\n        if(array.indexOf(props.endPage)!=-1){\n            for(var i=0;i<array.length-array.indexOf(props.endPage);i++){\n                if(array[0]-1>1){\n                    array.unshift(array[0]-1)\n                } \n            }\n            array.splice(array.indexOf(props.endPage))\n        }\n        setBetweenPages(array.slice())\n\n\n    },[props.currentPage,props.endPage])\n    // useEffect(()=>{\n        \n    // },[props.endPage])\n    const handleMoveLeft = function(){\n        setCurrentPage(currentPage-(pageNeighbours*2-1))\n    }\n    const handleMoveRight = function(){\n        setCurrentPage(currentPage+(pageNeighbours*2-1))\n    }\n    if(endPage!=1){\n        return(\n            <div\n                style={{\n                    position:'relative',\n                    display:'flex',\n                    flexDirection:'row',\n                    backgroundColor:'transparent',\n                    padding:'15px'\n                }}\n            >\n                <TouchableOpacity\n                onPress={()=>{\n                    props.currentPageTo(1)\n                }}\n                style={{\n                    backgroundColor:1==currentPage?'rgb(255,123,88)':'transparent',\n                    // border:'1px solid rgb(255,123,88)',\n                    width:'30px',\n                    height:'30px',\n                    justifyContent:'center',\n                    alignItems:'center',\n                    textAlign:'center',\n                    padding:'auto'\n                }}\n                \n                >\n                    <Text\n                        \n                    >\n                        1\n                    </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                    style={{\n                        backgroundColor:'transparent',\n                        // border:'1px solid rgb(255,123,88)',\n                        width:'30px',\n                        height:'30px',\n                        justifyContent:'center',\n                        alignItems:'center',\n                        textAlign:'center',\n\n                    }}\n                    onPress={()=>{\n                    props.leftPageJump()\n                }}>\n                    <Text>\n                        &lt;\n                    </Text>\n                </TouchableOpacity>\n\n                {betweenPages.map((pageNumber,index)=>\n                    <TouchableOpacity\n                    onPress={()=>{\n                        props.currentPageTo(pageNumber)\n                        }}\n                        style={{\n                        backgroundColor:pageNumber==currentPage?'rgb(255,123,88)':'transparent',\n                        // border:'1px solid rgb(255,123,88)',\n                        width:'30px',\n                        height:'30px',\n                        justifyContent:'center',\n                        alignItems:'center',\n                        textAlign:'center',\n                        padding:'auto'\n                    }}\n                        \n                        >\n                        <Text>\n                            {pageNumber}\n                        </Text>\n                    </TouchableOpacity>\n                )}\n\n                <TouchableOpacity\n                    style={{\n                        backgroundColor:'transparent',\n                        // border:'1px solid rgb(255,123,88)',\n                        width:'30px',\n                        height:'30px',\n                        justifyContent:'center',\n                        alignItems:'center',\n                        textAlign:'center',\n\n                    }}\n                    onPress={()=>{\n                        props.rightPageJump()\n                    }}>\n                    <Text>\n                        &gt;\n                    </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                    style={{\n                        backgroundColor:endPage==currentPage?'rgb(255,123,88)':'transparent',\n                        // border:'1px solid rgb(255,123,88)',\n                        width:'30px',\n                        height:'30px',\n                        justifyContent:'center',\n                        alignItems:'center',\n                        textAlign:'center',\n\n                    }}\n                    onPress={()=>{\n                    props.currentPageTo(endPage)\n                }}\n                >\n                    <Text>\n                        {endPage}\n                    </Text>\n                </TouchableOpacity>\n            </div>\n\n        )\n    }\n    else{\n        return(\n            <TouchableOpacity\n                onPress={()=>{\n                    props.currentPageTo(1)\n                }}\n                style={{\n                    backgroundColor:1==currentPage?'rgb(255,123,88)':'transparent',\n                    // border:'1px solid rgb(255,123,88)',\n                    width:'30px',\n                    height:'30px',\n                    justifyContent:'center',\n                    alignItems:'center',\n                    textAlign:'center',\n                    padding:'auto'\n                }}\n                \n                >\n                    <Text\n                        \n                    >\n                        1\n                    </Text>\n                </TouchableOpacity>\n        )\n        \n    }\n}\nexport default Pagination;",["544","545"],"/Users/bernardahn/Documents/GitHub/clip/src/components/PartDetail.js",["546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576"],"/Users/bernardahn/Documents/GitHub/clip/src/components/ClipBoard.js",["577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604"],"import React,{useEffect} from 'react';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport NavBarFiller from './NavBarFiller';\nimport Pagination from './Pagination';\nimport {TouchableOpacity,Text,View,Modal,Image,TouchableHighlight,Linking,Dimensions,textInput} from 'react-native';\nimport xIcon from '../assets/x.png';\nconst queryString = require('query-string');\n\nfunction ClipBoard(props){\n    const [height,setHeight]=React.useState(Dimensions.get('window').height)\n    const [width,setWidth]=React.useState(Dimensions.get('window').width)\n    const[clipBoardData,setClipBoardData]=React.useState([])\n    const [checkButtonChecked,setCheckButtonChecked]=React.useState([])\n    // const[clipBoardDataDetail,setClipBoardDataDetail]=React.useState([])\n    const [boardBuilding,setBoardBuilding]=React.useState(false)\n    const [refresh,setRefresh]=React.useState(0)\n    const [newBoard,setNewBoard]=React.useState(false)\n    const [inputValue,setInputValue]=React.useState(\"\")\n    const [makeButtonEnable,setMakeButtonEnable]=React.useState(false)\n    const onChange=()=>{\n        setHeight(Dimensions.get('window').height)\n        setWidth(Dimensions.get('window').width)\n        // console.log(height+\" : \"+width)\n      }\n    const clipBoardInfo=(qStr)=>{\n    // console.log(qStr)\n    fetch('/clipboardInfo?'+qStr\n    )\n    .then(res=>res.json())\n    .then((incomingData)=>{\n        console.log(incomingData)\n        setClipBoardData(incomingData.sort(function(a,b){\n            var textA = a.cb_name.toUpperCase()\n            var textB = b.cb_name.toUpperCase()\n            return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n        }))\n        })\n    .catch(err=>{\n        console.log(err)\n    })\n    }\n    // const clipBoardDetailInfo=(qStr)=>{\n    //     // console.log(qStr)\n    //     fetch('/clipboardDetailInfo?'+qStr\n    //     )\n    //     .then(res=>res.json())\n    //     .then((incomingData)=>{\n    //         console.log(incomingData)\n    //         setClipBoardDataDetail([...clipBoardDataDetail,...incomingData])\n    //         })\n    //     .catch(err=>{\n    //         console.log(err)\n    //     })\n    //     }\n    const checkboxClicked=(index,e,cb_no,details)=>{\n        console.log('clicked')\n        console.log(details.cb_no)\n        var mem_no=undefined\n        if(localStorage.login!=undefined){\n            mem_no=JSON.parse(localStorage.login).message.split('_')[0]\n            //parsed.mem_no=mem_no \n            console.log(mem_no)\n        }\n        else{\n            mem_no=\"\"\n        }\n        fetch('/ScrapClipboard?'+\n            queryString.stringify({\n                    mem_no:mem_no,\n                    cb_no:details.cb_no,\n                    ce_type:\"MATERIAL\",\n                    ce_detail:props.material_num\n                })\n        )\n        .then(res=>res.json())\n        .then((incomingData)=>{\n            console.log(incomingData)\n            setRefresh(refresh+1)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n        \n        // e.target.checked=true\n        // setActivePage(1)\n        // if(e.target.checked==true){\n        //     var numbers=checkedCategory\n        //     numbers.push(String(category_name))\n        //     setCheckedCategory(numbers)\n        //     var filterQ={...filter}\n        //     filterQ.list_category=numbers\n        //     filterQ.page=1\n        //     setFilter(filterQ)\n        // }\n        // else if(e.target.checked==false){\n        //     var numbers=checkedCategory\n        //     var indexOfCategory=numbers.indexOf(String(category_name))\n        //     numbers.splice(indexOfCategory,1)\n        //     //console.log(numbers)\n        //     setCheckedCategory(numbers)\n        //     var filterQ={...filter}\n        //     filterQ.list_category=numbers\n        //     filterQ.page=1\n        //     setFilter(filterQ)\n        // }\n\n        \n        \n      }\n      const updateInputValue=(e)=>{\n          setInputValue(e.target.value)\n          if(e.target.value!=\"\"){\n              setMakeButtonEnable(true)\n          }\n          else{\n              setMakeButtonEnable(false)\n          }\n      }\n      const addClipboard=(cb_name)=>{\n        var mem_no=undefined\n        if(localStorage.login!=undefined){\n            mem_no=JSON.parse(localStorage.login).message.split('_')[0]\n        }\n        else{\n            mem_no=\"\"\n        }\n        console.log({mem_no:mem_no,cb_name:cb_name})\n        fetch('/AddClipboard?'+\n            queryString.stringify({\n                    mem_no:mem_no,\n                    cb_name:cb_name\n                })\n        )\n        .then(res=>res.json())\n        .then((incomingData)=>{\n            console.log(incomingData)\n            //setNewBoard(!newBoard)\n            //setRefresh(refresh+1)\n            window.location.reload()\n        })\n        .catch(err=>{\n            console.log(err)\n        })       \n      }\n    const materialNumberMatch=(materialNumber,object)=>{\n        var value=false\n        for(var i=0; i<object.detail.list_material.length; i++){\n            // console.log(object.detail.list_material[i].mt_no)\n            // console.log(materialNumber)\n            // console.log(object.detail.list_material[i].mt_no==materialNumber)\n            if(object.detail.list_material[i].mt_no==materialNumber){\n                value=true\n            }\n        }\n        console.log('number match = '+value)\n        return value\n    }\n    useEffect(() => {\n        Dimensions.addEventListener('change',onChange)\n        // const parsed = queryString.parse(props.location.search);\n        var parsed = {}\n        //console.log(localStorage.login==undefined)\n        if(localStorage.login!=undefined){\n            var mem_no=undefined\n            mem_no=JSON.parse(localStorage.login).message.split('_')[0]\n            parsed.mem_no=mem_no \n        }\n        else{\n            parsed.mem_no=\"\"\n        }\n        parsed.cb_type='INDIV'\n        console.log(parsed)\n        clipBoardInfo(queryString.stringify(parsed)) \n        console.log('q = '+JSON.stringify(parsed))\n\n        \n      },[])\n      useEffect(() => {\n        var parsed = {}\n        // console.log(localStorage.login==undefined)\n        if(localStorage.login!=undefined){\n            var mem_no=undefined\n            mem_no=JSON.parse(localStorage.login).message.split('_')[0]\n            parsed.mem_no=mem_no \n        }\n        else{\n            parsed.mem_no=\"\"\n        }\n        parsed.cb_type='INDIV'\n        console.log(parsed)\n        clipBoardInfo(queryString.stringify(parsed)) \n  \n      },[props.refresh,refresh])\n    useEffect(()=>{\n        // console.log(\"clipboard length \")\n        // console.log(clipBoardData.length == 0)\n        // if(clipBoardData.length!=0){\n        //     for(var i=0;i<clipBoardData.length;i++){\n        //         console.log(clipBoardData[i].cb_no)\n        //         clipBoardDetailInfo(queryString.stringify({cb_no:clipBoardData[i].cb_no}))\n        //     }\n        // }\n        // console.log(clipBoardData)\n        if(clipBoardData.length!=0){\n            var temp=checkButtonChecked.slice()\n            for(var i=0;i<clipBoardData.length;i++){\n                //console.log(clipBoardData[i].detail.list_material)\n                var checked=false\n                for(var j=0; j<clipBoardData[i].detail.list_material.length;j++){\n                    if(props.material_num==clipBoardData[i].detail.list_material[j].mt_no){\n                        checked=true\n                    }\n                }\n                temp[i]=checked\n            }\n            console.log(temp)\n            setCheckButtonChecked(temp)\n            //setRefresh(refresh+1)\n        }\n        \n        \n    },[clipBoardData])\n    // useEffect(()=>{\n    //     console.log(clipBoardDataDetail)\n    // })\n    if(newBoard){\n        return (\n            <div\n            style={{\n            position:'fixed',\n            height:'100vh',\n            width:'100vw',\n            top:0,\n            left:0,\n            backgroundColor:'rgba(0,0,0,0.5)',\n            display:'block',\n        //   padding:'160px',\n            zIndex:101\n            }}\n        >\n        <div\n        style={{\n            paddingTop:'100px',\n            paddingLeft:'65px',\n            paddingRight:'65px'\n        }}\n        >\n            <div\n            style={{\n                textAlign:'left',\n                // margin:'25pt'\n                paddingLeft:'0px',\n                paddingRight:'0px',\n                backgroundColor:'transparent'\n            }}\n            >\n            \n            \n            \n            \n            </div>\n\n\n            <div\n            style={{\n            borderRadius:'10px',\n            backgroundColor:'white',\n            width:'100%',\n            height:'300px',\n            paddingTop:'15px',\n            // columnCount:3,\n            // flexwrap:'wrap',\n            // flexDirection:'column',\n            // display: 'grid',\n            // gridTemplateColumns: 'auto auto',\n            // // padding:'100px',\n            overflowY: 'scroll',\n            }}\n            >\n                <div\n                style={{\n                height:'25px',\n                width:'25px',\n                backgroundColor:'transparent',\n                position: 'absolute',\n                top:'110px',\n                left:'75px',\n                zIndex:102,\n                }}\n            >\n                <TouchableOpacity\n                onPress={()=>{\n                    // console.log(detailedCategoryData)\n                    props.toggleClipBoard()\n                    setNewBoard(false)\n                }}\n                >\n                <img\n                src={xIcon}\n                style={{\n                    height:'25px',\n                    width:'25px',\n                }}\n                >\n                </img>\n                </TouchableOpacity>\n            </div>\n            \n                <View\n                style={{\n                    backgroundColor:'white',\n                    height:'298px',\n                    width:'100%',\n                    borderBottomLeftRadius:'10px',\n                    borderBottomRightRadius:'10px'\n\n                }}\n                >\n                    <View\n                        style={{\n                            position:'relative',\n                            top:0,\n                            height:'30px',\n                            width:'100%',\n                            backgroundColor:'white',\n                            borderTopLeftRadius:'10px',\n                            borderTopRightRadius:'10px',\n                            borderBottom:'1px solid rgb(221,221,221)'\n                        }}\n                    >\n                    <Text\n                        style={{\n                            fontWeight:700,\n                        }}\n                    >새로운 클립보드 생성</Text>\n                    </View>\n\n                <div\n                    style={{\n                    display: 'block',\n                    textAlign:'left',\n                    padding:'15px',\n                    overflowY:'scroll',\n                    backgroundColor:'white',\n                    height:'100%'\n                }} \n                >\n                    <Text\n                        style={{\n                            fontWeight:700\n                        }}\n                    >보드명</Text>\n                    <div>\n                        <input \n                            style={{\n                                overflow:'hidden', \n                                width:'100%',\n                                height:'40px',\n                                padding:'12px 20px',\n                                margin:\"8px 0\",\n                                border:\"1px solid #ccc\",\n                                borderRadius:'4px',\n                                boxSizing:'border-box'\n                            }}\n                            value={inputValue} \n                            onChange={updateInputValue}\n                            placeholder={'입력'}\n                        />\n                    </div>\n                </div>\n                <div>\n                <TouchableOpacity\n                    style={{\n                        position:'absolute',\n                        bottom:0,\n                        height:'50px',\n                        width:'100%',\n                        backgroundColor:'transparent',\n                        borderBottomLeftRadius:'10px',\n                        borderBottomRightRadius:'10px',\n                        zIndex:100\n                    }}\n                    onPress={()=>{\n                        console.log('make a new board')\n                        //setNewBoard(!newBoard)\n                        \n                        addClipboard(inputValue)\n                        // setRefresh(refresh+1)\n                        // setInputValue('')\n                        \n                    }}\n                    disabled={\n                        !makeButtonEnable\n                    }\n                >\n                    <View\n                        style={{\n                            backgroundColor:makeButtonEnable==true ? 'white':'silver',\n                            borderTop:'1px solid rgb(221,221,221)',\n                            zIndex:200\n                        }}\n                    >\n                    <Text\n                        style={{\n                            lineHeight:'50px',\n                            fontWeight:700,\n                            color:makeButtonEnable==false ? 'grey':'black'\n                        }}\n                    >\n                        새로 만들기\n                    </Text>\n                    </View>\n                </TouchableOpacity>\n                </div>\n                </View>\n                {/* <Text>{props.material_num}</Text> */}\n            </div>\n        </div>\n    </div>\n        );\n    }\n    else{\n        return (\n            <div\n            style={{\n            position:'fixed',\n            height:'100vh',\n            width:'100vw',\n            top:0,\n            left:0,\n            backgroundColor:'rgba(0,0,0,0.5)',\n            display:'block',\n        //   padding:'160px',\n            zIndex:101\n            }}\n        >\n        <div\n        style={{\n            paddingTop:'100px',\n            paddingLeft:'65px',\n            paddingRight:'65px'\n        }}\n        >\n            <div\n            style={{\n                textAlign:'left',\n                // margin:'25pt'\n                paddingLeft:'0px',\n                paddingRight:'0px',\n                backgroundColor:'transparent'\n            }}\n            >\n            \n            \n            \n            \n            </div>\n    \n    \n            <div\n            style={{\n            borderRadius:'10px',\n            backgroundColor:'white',\n            width:'100%',\n            height:'300px',\n            paddingTop:'15px',\n            // columnCount:3,\n            // flexwrap:'wrap',\n            // flexDirection:'column',\n            // display: 'grid',\n            // gridTemplateColumns: 'auto auto',\n            // // padding:'100px',\n            overflowY: 'scroll',\n            }}\n            >\n                <div\n                style={{\n                height:'25px',\n                width:'25px',\n                backgroundColor:'transparent',\n                position: 'absolute',\n                top:'110px',\n                left:'75px',\n                zIndex:102,\n                }}\n            >\n                <TouchableOpacity\n                onPress={()=>{\n                    // console.log(detailedCategoryData)\n                    props.toggleClipBoard()\n                    setRefresh(refresh+1)\n                }}\n                >\n                <img\n                src={xIcon}\n                style={{\n                    height:'25px',\n                    width:'25px',\n                }}\n                >\n                </img>\n                </TouchableOpacity>\n            </div>\n            \n                <View\n                style={{\n                    backgroundColor:'white',\n                    height:'298px',\n                    width:'100%',\n                    borderBottomLeftRadius:'10px',\n                    borderBottomRightRadius:'10px'\n    \n                }}\n                >\n                    <View\n                        style={{\n                            position:'relative',\n                            top:0,\n                            height:'30px',\n                            width:'100%',\n                            backgroundColor:'white',\n                            borderTopLeftRadius:'10px',\n                            borderTopRightRadius:'10px',\n                            borderBottom:'1px solid rgb(221,221,221)'\n                        }}\n                    >\n                    <Text\n                        style={{\n                            fontWeight:700,\n                        }}\n                    >클립하기</Text>\n                    </View>\n                <View\n                    style={{\n                        display: clipBoardData.length==0 ? 'block':'none',\n                        textAlign:'left',\n                        padding:'15px'\n                    }}\n                >\n                    <Text\n                    style={{\n                        fontWeight:700,\n                    }}\n                    >\n                        생성된 보드가 아직 없습니다.\n                    </Text>\n                    <br></br>\n                    <Text>\n                        진행하고 있는 프로젝트에 필요한 자재를 클립할 보드를 만들어보세요.\n                    </Text>\n                </View>\n                <div\n                    style={{\n                    display: clipBoardData.length==0 ? 'none':'block',\n                    textAlign:'left',\n                    padding:'15px',\n                    overflowY:'scroll',\n                    backgroundColor:'transparent'\n                }} \n                >\n                {clipBoardData.map((clipboard,index)=>\n                            \n                    <div\n                        style={{\n                            display:'flex',\n                            flexDirection:'row',\n                            backgroundColor:'transparent',\n                            paddingLeft:'15px',\n                            paddingRight:'15px',\n                            justifyContent:'space-between'\n                        }}\n                    >\n                        <div\n                            style={{\n                                display:'flex',\n                                flexDirection:'row',\n                                backgroundColor:'transparent',\n                                padding:'15px',\n                            }}\n                        >\n                        <div\n                            style={{\n                                borderRadius:'10px',\n                                backgroundColor:'grey',\n                                height:'50px',\n                                width:'50px',\n                                display:'flex',\n                                flexDirection:'column',\n                            }}\n                        >\n                            <div\n                                style={{\n                                    display:'flex',\n                                    flexDirection:'row',\n                                    height:'25px',\n                                    width:'50px'\n                                }}\n                            >\n                                <div\n                                    style={{\n                                        height:'25px',\n                                        width:'25px',\n                                        backgroundColor:'grey',\n                                        borderTopLeftRadius:'10px'\n                                    }}\n                                >\n                                    <Image\n                                        style={{\n                                        display:'block',\n                                        height:'25px',\n                                        width:'25px',\n                                        // borderTopLeftRadius:10,\n                                        // borderTopRightRadius:10,\n                                        borderTopLeftRadius:'10px',\n                                        pointerEvents:'none',\n                                        marginLeft:'0px',\n                                        marginRight:'0px',\n                                        position:'relative',\n                                        left:'0px'\n                                        // transform:[{\n                                        //     translateX:'0px',\n                                        //     translateY:'0px'\n                                        // }]\n                                        }}\n                        \n                                        source={{\n                                            uri:\n                                                clipboard.cb_images[0]\n                                        }}\n    \n                                        >\n                                        </Image>\n                                </div>\n                                <div\n                                    style={{\n                                        height:'25px',\n                                        width:'25px',\n                                        backgroundColor:'grey',\n                                        borderTopRightRadius:'10px'\n                                    }}\n                                >\n                                    <Image\n                                        style={{\n                                        display:'block',\n                                        height:'25px',\n                                        width:'25px',\n                                        // borderTopLeftRadius:10,\n                                        // borderTopRightRadius:10,\n                                        borderTopRightRadius:'10px',\n                                        pointerEvents:'none',\n                                        marginLeft:'0px',\n                                        marginRight:'0px',\n                                        position:'relative',\n                                        left:'0px'\n                                        // transform:[{\n                                        //     translateX:'0px',\n                                        //     translateY:'0px'\n                                        // }]\n                                        }}\n                        \n                                        source={{\n                                            uri:\n                                                clipboard.cb_images[1]\n                                        }}\n    \n                                        >\n                                        </Image>\n                                </div>\n                            </div>\n                            <div\n                                style={{\n                                    display:'flex',\n                                    flexDirection:'row',\n                                    height:'25px',\n                                    width:'50px'\n                                }}\n                            >\n                                <div\n                                    style={{\n                                        height:'25px',\n                                        width:'25px',\n                                        backgroundColor:'grey',\n                                        borderBottomLeftRadius:'10px'\n                                    }}\n                                >\n                                    <Image\n                                        style={{\n                                        display:'block',\n                                        height:'25px',\n                                        width:'25px',\n                                        // borderTopLeftRadius:10,\n                                        // borderTopRightRadius:10,\n                                        borderBottomLeftRadius:'10px',\n                                        pointerEvents:'none',\n                                        marginLeft:'0px',\n                                        marginRight:'0px',\n                                        position:'relative',\n                                        left:'0px'\n                                        // transform:[{\n                                        //     translateX:'0px',\n                                        //     translateY:'0px'\n                                        // }]\n                                        }}\n                        \n                                        source={{\n                                            uri:\n                                                clipboard.cb_images[2]\n                                        }}\n    \n                                        >\n                                        </Image>\n                                </div>\n                                <div\n                                    style={{\n                                        height:'25px',\n                                        width:'25px',\n                                        backgroundColor:'grey',\n                                        borderBottomRightRadius:'10px'\n                                    }}\n                                >\n                                    <Image\n                                        style={{\n                                        display:'block',\n                                        height:'25px',\n                                        width:'25px',\n                                        // borderTopLeftRadius:10,\n                                        // borderTopRightRadius:10,\n                                        borderBottomRightRadius:'10px',\n                                        pointerEvents:'none',\n                                        marginLeft:'0px',\n                                        marginRight:'0px',\n                                        position:'relative',\n                                        left:'0px'\n                                        // transform:[{\n                                        //     translateX:'0px',\n                                        //     translateY:'0px'\n                                        // }]\n                                        }}\n                        \n                                        source={{\n                                            uri:\n                                                clipboard.cb_images[3]\n                                        }}\n    \n                                        >\n                                        </Image>\n                                </div>\n                            </div>\n    \n                        </div>\n                        <div\n                            style={{\n                                display:'flex',\n                                flexDirection:'column',\n                                backgroundColor:'transparent',\n                                padding:'0px' \n                            }}\n                        >\n                        <div\n                            style={{\n                                backgroundColor:'transparent',\n                                height:'25px',\n                                width:'165px',\n                                // display:'inline-block',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                textAlign:'left',\n                                // paddingTop:'11px',\n                                paddingLeft:'5px',\n                                lineHeight:'20px'\n                            }}\n                        >\n                            <Text\n                            style={{\n                                display:'inline-block',\n                                lineHeight:'25px',\n                                fontWeight:700\n                            }}\n                        >{clipboard.cb_name}</Text>\n                        </div>\n                        <div\n                            style={{\n                                backgroundColor:'transparent',\n                                height:'25px',\n                                width:'165px',\n                                // display:'inline-block',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                textAlign:'left',\n                                paddingTop:'0px',\n                                paddingLeft:'5px',\n                                lineHeight:'15px'\n                            }}\n                        >\n                            <Text\n                            style={{\n                                display:'inline-block',\n                                color:'grey',\n                                fontSize:'10px',\n                                lineHeight:'25px'\n                            }}\n                        >클립된 항목 {clipboard.cb_num_element}개\n                        </Text>\n                        </div>\n                        </div>\n                        </div>\n    \n                        <div\n                            className='checkContainer'\n                            style={{\n                                // position:'absolute',\n                                right:'0px',\n                                //top:'5px',\n                                marginTop:'10px',\n                                backgroundColor:'transparent',\n                                height:'50px',\n                                width:'50px',\n                                // display:'inline-block',\n                                paddingTop:\"5px\",\n                                // marginTop:\"5px\",\n                                // transform:[{\n                                //         translateX:'0px',\n                                //         translateY:'15px'\n                                //     }]\n                                alignItems:'center',\n                                justifyContent:'center',\n                                zIndex:98\n    \n                            }}\n                        >   \n                            <div\n                                style={{\n                                    display:'flex',\n                                    alignItems:'center',\n                                    justifyContent:'center',\n                                    marginTop:'15px'\n                                }}\n                            >\n                            <input \n                                className='checkbox'\n                                type=\"checkbox\" \n                                id={clipboard.cb_no}\n                                style={{\n                                    height:'20px',\n                                    width:'20px',\n                                    margin:'auto',\n                                    zIndex:99,\n                                    // flex:1,\n                                    //left:0,\n                                    // backgroundColor: 'orange'\n                                    \n                                }}\n                                // checked={true}\n                                //defaultChecked={materialNumberMatch(props.material_num,clipboard)}\n                                //defaultChecked={checkButtonChecked[index]}\n                                checked={checkButtonChecked[index]}\n                                onClick={(e)=>\n                                    // checkboxClicked(index,e,category.code_name,category.code_text)\n                                    checkboxClicked(index,e,clipboard.cb_no,clipboard.detail)\n                                    \n                                    // console.log(e)\n                                }\n    \n                        \n                        ></input>\n                        </div>\n                        </div>\n                    </div>\n                )}\n                    <div\n                        style={{\n                            height:'50px',\n                            width:'100%',\n                        }}\n                    >\n                    </div>\n                </div>\n                <div>\n                <TouchableOpacity\n                    style={{\n                        position:'absolute',\n                        bottom:0,\n                        height:'50px',\n                        width:'100%',\n                        backgroundColor:'white',\n                        borderBottomLeftRadius:'10px',\n                        borderBottomRightRadius:'10px',\n                        zIndex:100\n                    }}\n                    onPress={()=>{\n                        console.log('make a new board')\n                        setNewBoard(!newBoard)\n                        setRefresh(refresh+1)\n                    }}\n                >\n                    <View\n                        style={{\n                            backgroundColor:'white',\n                            borderTop:'1px solid rgb(221,221,221)',\n                            zIndex:200\n                        }}\n                    >\n                    <Text\n                        style={{\n                            lineHeight:'50px',\n                            fontWeight:700,\n                        }}\n                    >\n                        새로운 보드 생성\n                    </Text>\n                    </View>\n                </TouchableOpacity>\n                </div>\n                </View>\n                {/* <Text>{props.material_num}</Text> */}\n            </div>\n        </div>\n    </div>\n        );\n    }\n}\nexport default ClipBoard","/Users/bernardahn/Documents/GitHub/clip/src/components/MoodboardDetail.js",["605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657"],"import React,{useEffect} from 'react';\nimport {TouchableOpacity,Text,View,Modal,Image,TouchableHighlight,Linking,Dimensions} from 'react-native';\nimport Navbar from './Navbar';\nimport NavBarFiller from './NavBarFiller';\nimport ClipBoard from './ClipBoard';\nimport MoodClipBoard from './MoodClipBoard';\nimport parse from 'html-react-parser';\nimport { Carousel } from 'react-responsive-carousel';\nimport chatIcon from '../assets/chat.png'\nimport boxIcon from '../assets/icnBox.png'\nimport clipOff from '../assets/clipOff.png'\nimport clipOn from '../assets/clipOn.png'\nconst queryString = require('query-string');\nfunction PartDetail(props){\n    const [height,setHeight]=React.useState(Dimensions.get('window').height)\n    const [width,setWidth]=React.useState(Dimensions.get('window').width)\n    const [q,setQ]=React.useState(undefined)\n    const [moodboardData,setMoodboardData]=React.useState(undefined)\n    const [hoverOne, setHoverOne]=React.useState(null)\n    const [hoverTwo, setHoverTwo]=React.useState(null)\n    const [clipBoard,setClipBoard]=React.useState(false)\n    const [moodClipBoard,setMoodClipBoard]=React.useState(false)\n    const [moodboardClipBoard,setMoodboardClipBoard]=React.useState(false)\n    const [moodBoardNumber,setMoodBoardNumber]=React.useState(null)\n    const [refreshClipboard,setRefreshClipboard]=React.useState(0)\n    const [materialNumber,setMaterialNumber]=React.useState(undefined)\n    \n    const toggleClipBoard=()=>{\n        setClipBoard(!clipBoard)\n    }\n    const toggleMoodClipBoard=()=>{\n        setMoodClipBoard(!moodClipBoard)\n    }\n    const onChange=()=>{\n        setHeight(Dimensions.get('window').height)\n        setWidth(Dimensions.get('window').width)\n        // console.log(height+\" : \"+width)\n      }\n    const moodboardInfo=(qStr)=>{\n    // console.log(qStr)\n    fetch('/MoodboardDetails?'+qStr\n    )\n    .then(res=>res.json())\n    .then((incomingData)=>{\n        console.log(incomingData)\n        setMoodboardData(incomingData)\n        })\n    .catch(err=>{\n        console.log(err)\n    })\n    \n}\n    // var stringToHTML=function(str){\n    //     var parser=new DOMParser();\n    //     var doc = parser.parseFromString(str,'text/html')\n    //     return doc.body;\n    // }\n    useEffect(() => {\n        Dimensions.addEventListener('change',onChange)\n        const parsed = queryString.parse(props.location.search);\n        \n        console.log(localStorage.login==undefined)\n        if(localStorage.login!=undefined){\n            var mem_no=undefined\n            mem_no=JSON.parse(localStorage.login).message.split('_')[0]\n            parsed.mem_no=mem_no \n        }\n        else{\n            parsed.mem_no=\"\"\n        }\n        console.log(parsed)\n        moodboardInfo(queryString.stringify(parsed)) \n        console.log('q = '+queryString.stringify(parsed))\n        \n     \n        \n      },[])\n      if(moodboardData!=undefined){\n        return(\n            <div>\n                    <div\n                        style={{\n                            display: clipBoard ? 'block':'none' \n                        }}\n                    >\n                        <ClipBoard toggleClipBoard={toggleClipBoard} material_num={materialNumber} refresh={clipBoard}/>\n                    </div>\n                    <div\n                        style={{\n                            display: moodClipBoard ? 'block':'none' \n                        }}\n                    >\n                        <MoodClipBoard toggleClipBoard={toggleMoodClipBoard} moodboard_num={moodBoardNumber} refresh={moodClipBoard}/>\n                    </div>\n                    <Navbar />\n                    <NavBarFiller/>\n                    <div\n                    style={{\n                        backgroundColor:'transparent',\n                        height:'50px',\n                        width:'100%'\n                    }}\n                >\n\n                </div>\n                <View\n                    style={{\n                        textAlign:'left',\n                        paddingLeft:'160px',\n                        paddingRight:'160px'\n                    }}\n                >\n                    <View\n                        style={{\n                            backgroundColor:'transparent',\n                            height:'400px',\n                            width:'100%',\n                            flexDirection:'row',\n                            // flex:1,\n                            // justifyContent:'flex-start'\n                            justifyContent:'space-between',\n                            alignItems:'center',\n                            // overflowY:'hidden'\n                        }}\n                    >\n                        <View\n                            style={{\n                                backgroundColor:'transparent',\n                                // position:'absolute',\n                                justifyContent:'flex-start',\n                                // flex:1,\n                                flexDirection:'row',\n                                width:'400px'\n                                \n                            }}\n                        >\n                            <Image\n                            style={{\n                            display:'block',\n                            height:'400px',\n                            width:'400px',\n                            // borderTopLeftRadius:10,\n                            // borderTopRightRadius:10,\n                            borderRadius:'10px',\n                            pointerEvents:'none',\n                            marginLeft:'auto',\n                            marginRight:'auto',\n                            position:'relative',\n                            left:'0px'\n                            // transform:[{\n                            //     translateX:'0px',\n                            //     translateY:'0px'\n                            // }]\n                            }}\n             \n                            source={{\n                                uri:\n                                    moodboardData.mb_img_url\n                            }}\n\n                            >\n                            </Image>\n                            <TouchableOpacity\n                           \n                            onPress={()=>{  \n                                console.log(moodboardData)\n                                setMoodBoardNumber(moodboardData.mb_no)\n                                toggleMoodClipBoard()\n                            }}\n                        >\n                        <Image\n                                style={{\n                                position:'absolute',\n                                height:'40px',\n                                width:'40px',\n                                borderTopLeftRadius:10,\n                                borderTopRightRadius:10,\n                                zIndex:1,\n                                right:'15px',\n                                top:'15px'\n                                // pointerEvents:'none',\n                                // display:materialData.is_clipped==false ? 'block':'none'\n                                // transform:[{\n                                //     translateX:'0px',\n                                //     translateY:'0px'\n                                // }]\n                                }}\n                                source={clipOff}\n\n                                >\n                                \n                            </Image>\n                            {/* <Image\n                                style={{\n                                display:'block',\n                                height:'40px',\n                                width:'40px',\n                                borderTopLeftRadius:10,\n                                borderTopRightRadius:10,\n                                zIndex:1,\n                                pointerEvents:'none',\n                                display:materialData.is_clipped==true ? 'block':'none'\n                                // transform:[{\n                                //     translateX:'0px',\n                                //     translateY:'0px'\n                                // }]\n                                }}\n                                source={clipOn}\n\n                                >\n                                \n                            </Image> */}\n                            </TouchableOpacity>\n                        </View>\n                        <View\n                            style={{\n                                flex:1,\n                                flexDirection:'column',\n                                backgroundColor:'transparent',\n                                width:width-800,\n                                height:'400px',\n                                justifyContent:'left',\n                                textAlign:'left',\n                                paddingLeft:'15px',\n                                paddingRight:'15px',\n                                overflowY:'hidden'\n                            }}\n                        >\n                            \n                            <Text\n                                style={{\n                                    fontWeight:700,\n                                    fontSize:'24px'\n                                }}\n                            >\n                                {moodboardData.mb_name}\n                            </Text>\n                            <Text\n                                style={{\n                                    \n                                    fontWeight:500,\n                                    fontSize:'15px',\n                                    marginBottom:'13px'\n                                }}\n                            >\n                                {moodboardData.mb_description}\n                            </Text>\n                            <div\n                            style={{\n                                backgroundColor:\"transparent\",\n                                width:'100%',\n                                // maxWidth:'250px',\n                                justifyContent:'center',\n                                alignItems:'center',\n                                height:'40px',\n                                paddingLeft:'0px',\n                                position:'absolute',\n                                bottom:'0px',\n                                paddingRight:'160px'\n                            }}\n                        >\n                        <TouchableOpacity\n                            style={{\n                                display:'block',\n                                height:'40px',\n                                width:width-750,\n                                backgroundColor:'rgb(255,123,88)',\n                                color:'white',\n                                borderRadius:'10px',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                textAlign:'center',\n                                verticalAlign:'middle',\n                                lineHeight:'40px',\n                               \n\n                            }}\n                        >\n            \n                                <Text\n                                    style={{\n                                        color:'white',\n                                        \n                                    }}\n                                >\n                                    장바구니에 샘플 담기\n                                </Text>\n                            \n                        </TouchableOpacity>\n                        </div>\n                        </View>\n                        \n                    </View>\n                </View>\n                <View\n                    style={{\n                        textAlign:'left',\n                        paddingLeft:'160px',\n                        paddingRight:'160px',\n                        marginTop:'15px'\n                    }}\n                >\n                    {moodboardData.material_set.map((category,index)=>{\n                        return(\n                            <View\n                             style={{\n                                flexwrap:'wrap',\n                                justifyContent:'space-between',\n                                display: 'grid',\n                                gridTemplateColumns: 'auto auto auto auto',\n                             }}\n                            >\n                            {category.map((material,innerIndex)=>{  \n                                 \n                                if(innerIndex==0){\n                                    return(\n                                        <div\n                                            style={{\n                                                backgroundColor:'transparent',\n                                                height:\"300px\",\n                                                width:'125px',\n                                                marginBottom:'15px'\n                                            }}\n                                        >\n                                        \n                                        <Text\n                                        style={{\n                                                    \n                                            fontWeight:700,\n                                            fontSize:'24px',\n                                            marginBottom:'12px',\n                                            marginTop:'12px',\n                                            color:'black'\n                                            \n                                        }}\n                                        >\n                                            {material.mt_first_large_category}\n                                        </Text>\n                                        <div\n                                        style={{\n                                            height:'30px',\n                                            width:\"170px\",\n                                            position:'absolute',\n                                            top:\"30px\",\n                                            backgroundColor: 'transparent',\n                                            lineHeight:'30px',\n                                            marginBottom:'30px',\n                                        }}\n                                        >\n                                            <Text\n                                                style={{\n                                                    fontWeight:700\n                                                }}\n                                            >\n                                                표시된 상품\n                                            </Text>\n                                        </div>\n                                        {/* <div\n                                        style={{\n                                            height:'30px',\n                                            position:'absolute',\n                                            bottom:0,\n                                            backgroundColor: 'yellow'\n                                        }}\n                                    > */}\n                                        {/* <Image\n                                        style={{\n                                        position:'absolute',\n                                        bottom:\"70px\",\n                                        display:'block',\n                                        height:'125px',\n                                        width:'125px',\n                                        // borderTopLeftRadius:10,\n                                        // borderTopRightRadius:10,\n                                        borderRadius:'10px',\n                                        pointerEvents:'none',\n                                        // marginLeft:'auto',\n                                        // marginRight:'auto',\n                                        // position:'relative',\n                                        // left:'0px'\n                                        }}\n                        \n                                        source={{\n                                            uri:\n                                                material.mt_feature_img_url\n                                        }}\n            \n                                        >\n                                        </Image> */}\n                                         <div\n                                            style={{\n                                                position:'absolute',\n                                                bottom:'15px'\n                                            }}\n                                        >\n                                        <View\n                                            style={{\n                                                backgroundColor:'transparent',\n                                                height:'240px',\n                                                width:'170px',\n                                                // marginLeft:'auto',\n                                                // marginRight:'auto',\n                                                marginTop:'20px',\n                                                borderRadius:10,\n                                                boxShadow:'0px 0px 3px black'\n                                            }}\n                                            onMouseEnter={()=>{\n                                                console.log('entered ' + index + innerIndex)\n                                                // var mem_no=JSON.parse(localStorage.login).message.split('_')\n                                                // console.log(mem_no)\n                                                setHoverOne(index)\n                                                setHoverTwo(innerIndex)\n                                                // setHoverTwo(index)\n                                                // console.log(materialData.samecategory_list[index])\n                                            }\n                                            }\n                                            onMouseLeave={()=>{\n                                                setHoverOne(null)\n                                                setHoverTwo(null)\n                                                console.log('exited '+index)\n                                            }} \n                                        >\n                                            <div\n                                                style={{\n                                                    backgroundColor:'white',\n                                                    width:'55px',\n                                                    height:'12px',\n                                                    position:'absolute',\n                                                    zIndex:100,\n                                                    top:'6px',\n                                                    left:'6px',\n                                                    borderRadius:'6px',\n                                                    display:hoverOne==index&&hoverTwo==innerIndex ? 'block':'none'\n                                                }}\n                                                onPress={()=>{  \n                                                    console.log('pressed clip ')\n                                                }}\n                                            >\n                                                <Text\n                                                    style={{\n                                                        transform:'translate(2px,-2px)',\n                                                        position:'absolute',\n                                                        top:'1px',\n                                                        left:'2px',\n                                                        fontWeight:50,\n                                                        fontSize:'12px',\n                                                        color:moodboardData.material_set[index][innerIndex].mt_budget<1 ? 'rgb(219,219,219)':'black' \n                                                    }}\n                                                >₩</Text>\n                                                <Text\n                                                    style={{\n                                                        transform:'translate(2px,-2px)',\n                                                        position:'absolute',\n                                                        top:'1px',\n                                                        left:'12px',\n                                                        fontWeight:50,\n                                                        fontSize:'12px',\n                                                        color:moodboardData.material_set[index][innerIndex].mt_budget<2 ? 'rgb(219,219,219)':'black'\n                                                    }}\n                                                >₩</Text>\n                                                <Text\n                                                    style={{\n                                                        transform:'translate(2px,-2px)',\n                                                        position:'absolute',\n                                                        top:'1px',\n                                                        left:'22px',\n                                                        fontWeight:50,\n                                                        fontSize:'12px',\n                                                        color:moodboardData.material_set[index][innerIndex].mt_budget<3 ? 'rgb(219,219,219)':'black'\n                                                    }}\n                                                >₩</Text>\n                                                <Text\n                                                    style={{\n                                                        transform:'translate(2px,-2px)',\n                                                        position:'absolute',\n                                                        top:'1px',\n                                                        left:'32px',\n                                                        fontWeight:50,\n                                                        fontSize:'12px',\n                                                        color:moodboardData.material_set[index][innerIndex].mt_budget<4 ? 'rgb(219,219,219)':'black'\n                                                    }}\n                                                >₩</Text>\n                                                <Text\n                                                    style={{\n                                                        transform:'translate(2px,-2px)',\n                                                        position:'absolute',\n                                                        top:'1px',\n                                                        left:'42px',\n                                                        fontWeight:50,\n                                                        fontSize:'12px',\n                                                        color:moodboardData.material_set[index][innerIndex].mt_budget<5 ? 'rgb(219,219,219)':'black'\n                                                    }}\n                                                >₩</Text> \n                                            </div>\n                                            <TouchableOpacity\n                                                style={{\n                                                    backgroundColor:'transparent',\n                                                    width:'20px',\n                                                    height:'20px',\n                                                    position:'absolute',\n                                                    zIndex:100,\n                                                    top:'6px',\n                                                    right:'6px',\n                                                    display:hoverOne==index&&hoverTwo==innerIndex? 'block':'none'\n                                                }}\n                                                onPress={()=>{  \n                                                    setMaterialNumber(moodboardData.material_set[index][innerIndex].mt_no)\n                                                    toggleClipBoard()\n                                                //   console.log('pressed clip ' + brandData.bestproducts_brand[index].mt_no)\n                                                }}\n                                            >   \n                                                <Image\n                                                    style={{\n                                                    display:'block',\n                                                    height:'20px',\n                                                    width:'20px',\n                                                    borderTopLeftRadius:10,\n                                                    borderTopRightRadius:10,\n                                                    zIndex:1,\n                                                    pointerEvents:'none',\n                                                    // display:materialData.samecategory_list[index].is_clipped==false ? 'block':'none'\n                                                    // transform:[{\n                                                    //     translateX:'0px',\n                                                    //     translateY:'0px'\n                                                    // }]\n                                                    }}\n                                                    source={clipOff}\n\n                                                >\n                                \n                                                </Image>\n                            {/* <Image\n                                style={{\n                                display:'block',\n                                height:'20px',\n                                width:'20px',\n                                borderTopLeftRadius:10,\n                                borderTopRightRadius:10,\n                                zIndex:1,\n                                pointerEvents:'none',\n                                display:materialData.samecategory_list[index].is_clipped==true ? 'block':'none'\n                                // transform:[{\n                                //     translateX:'0px',\n                                //     translateY:'0px'\n                                // }]\n                                }}\n                                source={clipOn}\n\n                                >\n                                \n                            </Image> */}\n                                            </TouchableOpacity>\n                                            <TouchableOpacity\n                                                onPress={()=>{\n                                                    // console.log(materialData.samecategory_list[index].mt_no)\n                                                    Linking.openURL('/partDetail?mt_no='+moodboardData.material_set[index][innerIndex].mt_no)\n                                                }}\n                                            >\n                                            <Image\n                                                style={{\n                                                display:'block',\n                                                height:'170px',\n                                                width:'170px',\n                                                borderTopLeftRadius:10,\n                                                borderTopRightRadius:10,\n                                                zIndex:1,\n                                                pointerEvents:'none',\n                                                // filter:hoverTwo==index ? 'brightness(90%)':'brightness(100%)'\n                                                // transform:[{\n                                                //     translateX:'0px',\n                                                //     translateY:'0px'\n                                                // }]\n                                                filter:hoverOne==index&&hoverTwo==innerIndex ? 'brightness(90%)':'brightness(100%)'\n                                                }}\n                                                source={{\n                                                    uri:\n                                                        moodboardData.material_set[index][innerIndex].mt_feature_img_url\n                                                }}\n\n                                            >\n                                            </Image>\n                 \n                                            <View\n                                                style ={{\n                                                height:'70px',\n                                                width:'170px',\n                                                fontSize: '12pt',\n                                                fontWeight:'500',\n                                                textDecorationLine:'none',\n                                                color:'white',\n                                                textAlign:'center',\n                                                flexDirection:'column',\n                                                // pointerEvents:'none',\n                                                backgroundColor:'white',\n                                                // pointerEvents:'none',\n                                                borderBottomLeftRadius:10,\n                                                borderBottomRightRadius:10,\n                                                padding:'10px'\n                                                }}\n                                            >\n                                                <TouchableOpacity\n                                                    style={{\n                                                        zIndex:100,\n                                                        backgroundColor:'transparent',\n                                                        position:'absolute',\n                                                        top:'7px',\n                                                        right:'7px',\n                                                        height:'30px',\n                                                        width:'30px',\n                                                        display:moodboardData.material_set[index][innerIndex].mt_isdelivery==\"Y\"?\"block\":\"none\"\n                                                    }}\n                                                    onPress={()=>{\n                                                        console.log(moodboardData.material_set[index][innerIndex].mt_isdelivery)\n                                                    }}\n                                                >\n                                                    <View\n                                                    style={{\n                                                        backgroundColor:'transparent',\n                                                        display:'flex',\n                                                        height:'30px',\n                                                        width:'30px',\n                                                        // position:'absolute',\n                                                        // top:'7px',\n                                                        // right:'15px'\n                                                    }}\n                                                    >\n                                    \n                                                        <img\n                                                            src={boxIcon}\n                                                            style={{\n                                                                //display: categoryOpened? 'none': 'block',\n                                                                width:'30px',\n                                                                height:'30px',\n                                                                right:'15px'\n                                                            }}\n                                                        >\n                                                        </img>\n                                                    \n                                                    </View>\n                                                </TouchableOpacity>\n                                                <Text\n                                                    style ={{\n                                                        // height:'65pt',\n                                                        // width:'250px',\n                                                        fontSize: '8pt',\n                                                        fontWeight:'700',\n                                                        textDecorationLine:'none',\n                                                        color:'black',\n                                                        textAlign:'left',\n                                                        //alignItems:'center',\n                                                        //justifyContent:'center',\n                                                        //flexDirection:'row',\n                                                        //marginTop:'45pt',\n                                                        pointerEvents:'none',\n                                                        backgroundColor:'transparent',\n                                                        pointerEvents:'none',\n                                                    }}\n                                                >\n                                                    {moodboardData.material_set[index][innerIndex].vd_name}\n                                                </Text>\n                                                <Text\n                                                    style ={{\n                                                        height:'100px',\n                                                        width:'120px',\n                                                        fontSize: '8pt',\n                                                        fontWeight:'500',\n                                                        textDecorationLine:'none',\n                                                        color:'black',\n                                                        textAlign:'left',\n                                                        alignItems:'center',\n                                                        justifyContent:'center',\n                                                        flexDirection:'row',\n                                                        // marginLeft:'1px',\n                                                        // marginTop:'1px',\n                                                        pointerEvents:'none',\n                                                        backgroundColor:'transparent',\n                                                        pointerEvents:'none',\n                                                    }}\n                                                >\n                                                    {moodboardData.material_set[index][innerIndex].mt_subname}\n                      \n                                                </Text>\n                                                <Text\n                                                    style ={{\n                                                        height:'100px',\n                                                        width:'120px',\n                                                        fontSize: '8pt',\n                                                        fontWeight:'500',\n                                                        textDecorationLine:'none',\n                                                        color:'rgb(85,85,85)',\n                                                        textAlign:'left',\n                                                        alignItems:'center',\n                                                        justifyContent:'center',\n                                                        flexDirection:'row',\n                                                        // marginLeft:'1px',\n                                                        // marginTop:'1px',\n                                                        pointerEvents:'none',\n                                                        backgroundColor:'transparent',\n                                                        pointerEvents:'none',\n                                                        whiteSpace:'nowrap',\n                                                        textOverflow: 'ellipsis',\n                                                        overflow:'hidden'\n                                                    }}\n                                                >\n                                                    {moodboardData.material_set[index][innerIndex].mt_name}\n                                                </Text>\n                    \n                                            </View>\n                                        </TouchableOpacity>\n                                    </View>\n                                </div>\n                                {/* </div> */}\n                            </div>\n                                    )\n                                }\n                                else if(innerIndex==1){\n                                    return(\n                                        <div\n                                            style={{\n                                                backgroundColor:'transparent',\n                                                height:\"270px\",\n                                                width:'125px',\n                                                marginBottom:'15px'\n                                            }}\n                                        >\n                                        \n                                        <Text\n                                        style={{\n                                                    \n                                            fontWeight:700,\n                                            fontSize:'24px',\n                                            marginBottom:'12px',\n                                            marginTop:'12px',\n                                            color:'black'\n                                            \n                                        }}\n                                        >\n                                            {material.mt_first_large_category}\n                                        </Text>\n                                        <div\n                                        style={{\n                                            height:'30px',\n                                            width:'125px',\n                                            position:'absolute',\n                                            top:\"30px\",\n                                            backgroundColor: 'transparent',\n                                            lineHeight:'30px'\n                                        }}\n                                        >\n                                        <Text\n                                            style={{\n                                                fontWeight:700\n                                            }}\n                                        >\n                                            유사 상품\n                                        </Text>\n                                        </div>\n                                        {/* <div\n                                        style={{\n                                            height:'30px',\n                                            position:'absolute',\n                                            bottom:0,\n                                            backgroundColor: 'yellow'\n                                        }}\n                                    > */}\n                                        {/* <Image\n                                        style={{\n                                        position:'absolute',\n                                        bottom:\"70px\",\n                                        display:'block',\n                                        height:'125px',\n                                        width:'125px',\n                                        // borderTopLeftRadius:10,\n                                        // borderTopRightRadius:10,\n                                        borderRadius:'10px',\n                                        pointerEvents:'none',\n                                        // marginLeft:'auto',\n                                        // marginRight:'auto',\n                                        // position:'relative',\n                                        // left:'0px'\n                                        }}\n                        \n                                        source={{\n                                            uri:\n                                                material.mt_feature_img_url\n                                        }}\n            \n                                        >\n                                        </Image> */}\n                                        {/* </div> */}\n                                        <div\n                                            style={{\n                                                position:'absolute',\n                                                bottom:'15px'\n                                            }}\n                                        >\n                                        <View\n                  style={{\n                    backgroundColor:'transparent',\n                    height:'240px',\n                    width:'170px',\n                    // marginLeft:'auto',\n                    // marginRight:'auto',\n                    marginTop:'20px',\n                    borderRadius:10,\n                    boxShadow:'0px 0px 3px black'\n                  }}\n                  onMouseEnter={()=>{\n                    console.log('entered ' + index+innerIndex)\n                    // var mem_no=JSON.parse(localStorage.login).message.split('_')\n                    // console.log(mem_no)\n                    setHoverOne(index)\n                    setHoverTwo(innerIndex)\n                    // console.log(materialData.samecategory_list[index])\n                  }\n                  }\n                  onMouseLeave={()=>{\n                      setHoverTwo(null)\n                      console.log('exited '+index+innerIndex)\n                  }} \n                >\n                <div\n                      style={{\n                          backgroundColor:'white',\n                          width:'55px',\n                          height:'12px',\n                          position:'absolute',\n                          zIndex:100,\n                          top:'6px',\n                          left:'6px',\n                          borderRadius:'6px',\n                          display:hoverOne==index&&hoverTwo==innerIndex ? 'block':'none'\n                      }}\n                      onPress={()=>{  \n                          console.log('pressed clip ')\n                      }}\n                  >\n                      <Text\n                          style={{\n                              transform:'translate(2px,-2px)',\n                              position:'absolute',\n                              top:'1px',\n                              left:'2px',\n                              fontWeight:50,\n                              fontSize:'12px',\n                              color:moodboardData.material_set[index][innerIndex].mt_budget<1 ? 'rgb(219,219,219)':'black' \n                          }}\n                      >₩</Text>\n                     <Text\n                          style={{\n                              transform:'translate(2px,-2px)',\n                              position:'absolute',\n                              top:'1px',\n                              left:'12px',\n                              fontWeight:50,\n                              fontSize:'12px',\n                              color:moodboardData.material_set[index][innerIndex].mt_budget<2 ? 'rgb(219,219,219)':'black'\n                          }}\n                      >₩</Text>\n                      <Text\n                          style={{\n                              transform:'translate(2px,-2px)',\n                              position:'absolute',\n                              top:'1px',\n                              left:'22px',\n                              fontWeight:50,\n                              fontSize:'12px',\n                              color:moodboardData.material_set[index][innerIndex].mt_budget<3 ? 'rgb(219,219,219)':'black'\n                          }}\n                      >₩</Text>\n                      <Text\n                          style={{\n                              transform:'translate(2px,-2px)',\n                              position:'absolute',\n                              top:'1px',\n                              left:'32px',\n                              fontWeight:50,\n                              fontSize:'12px',\n                              color:moodboardData.material_set[index][innerIndex].mt_budget<4 ? 'rgb(219,219,219)':'black'\n                          }}\n                      >₩</Text>\n                      <Text\n                          style={{\n                              transform:'translate(2px,-2px)',\n                              position:'absolute',\n                              top:'1px',\n                              left:'42px',\n                              fontWeight:50,\n                              fontSize:'12px',\n                              color:moodboardData.material_set[index][innerIndex].mt_budget<5 ? 'rgb(219,219,219)':'black'\n                          }}\n                      >₩</Text>\n                  </div>\n                  <TouchableOpacity\n                      style={{\n                          backgroundColor:'transparent',\n                          width:'20px',\n                          height:'20px',\n                          position:'absolute',\n                          zIndex:100,\n                          top:'6px',\n                          right:'6px',\n                          display:hoverOne==index&&hoverTwo==innerIndex ? 'block':'none'\n                      }}\n                      onPress={()=>{  \n                        setMaterialNumber(moodboardData.material_set[index][innerIndex].mt_no)\n                        toggleClipBoard()\n                      //   console.log('pressed clip ' + brandData.bestproducts_brand[index].mt_no)\n                    }}\n                  >   \n                      <Image\n                                style={{\n                                display:'block',\n                                height:'20px',\n                                width:'20px',\n                                borderTopLeftRadius:10,\n                                borderTopRightRadius:10,\n                                zIndex:1,\n                                pointerEvents:'none',\n                                // display:materialData.samecategory_list[index].is_clipped==false ? 'block':'none'\n                                // transform:[{\n                                //     translateX:'0px',\n                                //     translateY:'0px'\n                                // }]\n                                \n                                }}\n                                source={clipOff}\n\n                                >\n                                \n                            </Image>\n                            {/* <Image\n                                style={{\n                                display:'block',\n                                height:'20px',\n                                width:'20px',\n                                borderTopLeftRadius:10,\n                                borderTopRightRadius:10,\n                                zIndex:1,\n                                pointerEvents:'none',\n                                display:materialData.samecategory_list[index].is_clipped==true ? 'block':'none'\n                                // transform:[{\n                                //     translateX:'0px',\n                                //     translateY:'0px'\n                                // }]\n                                }}\n                                source={clipOn}\n\n                                >\n                                \n                            </Image> */}\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    onPress={()=>{\n                        // console.log(materialData.samecategory_list[index].mt_no)\n                        Linking.openURL('/partDetail?mt_no='+moodboardData.material_set[index][innerIndex].mt_no)\n                    }}\n                  >\n                  <Image\n                    style={{\n                    display:'block',\n                    height:'170px',\n                    width:'170px',\n                    borderTopLeftRadius:10,\n                    borderTopRightRadius:10,\n                    zIndex:1,\n                    pointerEvents:'none',\n                    filter:hoverOne==index&&hoverTwo==innerIndex ? 'brightness(90%)':'brightness(100%)'\n                    // filter:hoverTwo==index ? 'brightness(90%)':'brightness(100%)'\n                    // transform:[{\n                    //     translateX:'0px',\n                    //     translateY:'0px'\n                    // }]\n                    }}\n                    source={{\n                        uri:\n                            moodboardData.material_set[index][innerIndex].mt_feature_img_url\n                    }}\n\n                  >\n                  </Image>\n                 \n                  <View\n                    style ={{\n                      height:'70px',\n                      width:'170px',\n                      fontSize: '12pt',\n                      fontWeight:'500',\n                      textDecorationLine:'none',\n                      color:'white',\n                      textAlign:'center',\n                      flexDirection:'column',\n                    //   pointerEvents:'none',\n                      backgroundColor:'white',\n                    //   pointerEvents:'none',\n                      borderBottomLeftRadius:10,\n                      borderBottomRightRadius:10,\n                      padding:'10px'\n                    }}\n                  >\n                                                                    <TouchableOpacity\n                                                    style={{\n                                                        zIndex:100,\n                                                        backgroundColor:'transparent',\n                                                        position:'absolute',\n                                                        top:'7px',\n                                                        right:'7px',\n                                                        height:'30px',\n                                                        width:'30px',\n                                                        display:moodboardData.material_set[index][innerIndex].mt_isdelivery==\"Y\"?\"block\":\"none\"\n                                                    }}\n                                                    onPress={()=>{\n                                                        console.log(moodboardData.material_set[index][innerIndex].mt_isdelivery)\n                                                    }}\n                                                >\n                                                    <View\n                                                    style={{\n                                                        backgroundColor:'transparent',\n                                                        display:'flex',\n                                                        height:'30px',\n                                                        width:'30px',\n                                                        // position:'absolute',\n                                                        // top:'7px',\n                                                        // right:'15px'\n                                                    }}\n                                                    >\n                                    \n                                                        <img\n                                                            src={boxIcon}\n                                                            style={{\n                                                                //display: categoryOpened? 'none': 'block',\n                                                                width:'30px',\n                                                                height:'30px',\n                                                                right:'15px'\n                                                            }}\n                                                        >\n                                                        </img>\n                                                    \n                                                    </View>\n                                                </TouchableOpacity>\n                    <Text\n                      style ={{\n                          // height:'65pt',\n                          // width:'250px',\n                          fontSize: '8pt',\n                          fontWeight:'700',\n                          textDecorationLine:'none',\n                          color:'black',\n                          textAlign:'left',\n                          //alignItems:'center',\n                          //justifyContent:'center',\n                          //flexDirection:'row',\n                          //marginTop:'45pt',\n                          pointerEvents:'none',\n                          backgroundColor:'transparent',\n                          pointerEvents:'none',\n                          \n                      }}\n                  >\n                      {moodboardData.material_set[index][innerIndex].vd_name}\n                  </Text>\n                    <Text\n                          style ={{\n                              height:'100px',\n                              width:'120px',\n                              fontSize: '8pt',\n                              fontWeight:'500',\n                              textDecorationLine:'none',\n                              color:'black',\n                              textAlign:'left',\n                              alignItems:'center',\n                              justifyContent:'center',\n                              flexDirection:'row',\n                              // marginLeft:'1px',\n                              // marginTop:'1px',\n                              pointerEvents:'none',\n                              backgroundColor:'transparent',\n                              pointerEvents:'none',\n                              \n                              \n                          }}\n                      >\n                      {moodboardData.material_set[index][innerIndex].mt_subname}\n                      \n                    </Text>\n                    <Text\n                      style ={{\n                          height:'100px',\n                          width:'120px',\n                          fontSize: '8pt',\n                          fontWeight:'500',\n                          textDecorationLine:'none',\n                          color:'rgb(85,85,85)',\n                          textAlign:'left',\n                          alignItems:'center',\n                          justifyContent:'center',\n                          flexDirection:'row',\n                          // marginLeft:'1px',\n                          // marginTop:'1px',\n                          pointerEvents:'none',\n                          backgroundColor:'transparent',\n                          pointerEvents:'none',\n                          whiteSpace:'nowrap',\n                          textOverflow: 'ellipsis',\n                          overflow:'hidden'\n                      }}\n                  >\n                  {moodboardData.material_set[index][innerIndex].mt_name}\n                  \n              </Text>\n                    \n          </View>\n          </TouchableOpacity>\n        </View>\n      \n                                        </div>\n                                       \n                                        </div>\n                                    )\n                                }\n                                else{\n                                    return(\n                                        <div\n                                            style={{\n                                                backgroundColor:'transparent',\n                                                height:\"270px\",\n                                                width:'125px',\n                                                marginBottom:'15px'\n                                            }}\n                                        >\n                                        \n                                        {/* <Text\n                                        style={{\n                                                    \n                                            fontWeight:700,\n                                            fontSize:'24px',\n                                            marginBottom:'12px',\n                                            marginTop:'12px',\n                                            color:'black'\n                                            \n                                        }}\n                                        >\n                                            {material.mt_first_large_category}\n                                        </Text> */}\n                                        <div\n                                        style={{\n                                            height:'30px',\n                                            width:'30px',\n                                            position:'absolute',\n                                            top:\"30px\",\n                                            backgroundColor: 'transparent'\n                                        }}\n                                        >\n\n                                        </div>\n                                        {/* <div\n                                        style={{\n                                            height:'30px',\n                                            position:'absolute',\n                                            bottom:0,\n                                            backgroundColor: 'yellow'\n                                        }}\n                                    > */}\n                                        {/* <Image\n                                        style={{\n                                        position:'absolute',\n                                        bottom:\"70px\",\n                                        display:'block',\n                                        height:'125px',\n                                        width:'125px',\n                                        // borderTopLeftRadius:10,\n                                        // borderTopRightRadius:10,\n                                        borderRadius:'10px',\n                                        pointerEvents:'none',\n                                        // marginLeft:'auto',\n                                        // marginRight:'auto',\n                                        // position:'relative',\n                                        // left:'0px'\n                                        }}\n                        \n                                        source={{\n                                            uri:\n                                                material.mt_feature_img_url\n                                        }}\n            \n                                        >\n                                        </Image> */}\n                                        <div\n                                            style={{\n                                                position:'absolute',\n                                                bottom:'15px'\n                                            }}\n                                        >\n                                        <View\n                  style={{\n                    backgroundColor:'transparent',\n                    height:'240px',\n                    width:'170px',\n                    // marginLeft:'auto',\n                    // marginRight:'auto',\n                    marginTop:'20px',\n                    borderRadius:10,\n                    boxShadow:'0px 0px 3px black'\n                  }}\n                  onMouseEnter={()=>{\n                    console.log('entered ' + index+innerIndex)\n                    // var mem_no=JSON.parse(localStorage.login).message.split('_')\n                    // console.log(mem_no)\n                    setHoverOne(index)\n                    setHoverTwo(innerIndex)\n                    // console.log(materialData.samecategory_list[index])\n                  }\n                  }\n                  onMouseLeave={()=>{\n                      setHoverTwo(null)\n                      console.log('exited '+index+innerIndex)\n                  }} \n                >\n                <div\n                      style={{\n                          backgroundColor:'white',\n                          width:'55px',\n                          height:'12px',\n                          position:'absolute',\n                          zIndex:100,\n                          top:'6px',\n                          left:'6px',\n                          borderRadius:'6px',\n                          display:hoverOne==index&&hoverTwo==innerIndex ? 'block':'none'\n                      }}\n                      onPress={()=>{  \n                          console.log('pressed clip ')\n                      }}\n                  >\n                      <Text\n                          style={{\n                              transform:'translate(2px,-2px)',\n                              position:'absolute',\n                              top:'1px',\n                              left:'2px',\n                              fontWeight:50,\n                              fontSize:'12px',\n                              color:moodboardData.material_set[index][innerIndex].mt_budget<1 ? 'rgb(219,219,219)':'black' \n                          }}\n                      >₩</Text>\n                     <Text\n                          style={{\n                              transform:'translate(2px,-2px)',\n                              position:'absolute',\n                              top:'1px',\n                              left:'12px',\n                              fontWeight:50,\n                              fontSize:'12px',\n                              color:moodboardData.material_set[index][innerIndex].mt_budget<2 ? 'rgb(219,219,219)':'black'\n                          }}\n                      >₩</Text>\n                      <Text\n                          style={{\n                              transform:'translate(2px,-2px)',\n                              position:'absolute',\n                              top:'1px',\n                              left:'22px',\n                              fontWeight:50,\n                              fontSize:'12px',\n                              color:moodboardData.material_set[index][innerIndex].mt_budget<3 ? 'rgb(219,219,219)':'black'\n                          }}\n                      >₩</Text>\n                      <Text\n                          style={{\n                              transform:'translate(2px,-2px)',\n                              position:'absolute',\n                              top:'1px',\n                              left:'32px',\n                              fontWeight:50,\n                              fontSize:'12px',\n                              color:moodboardData.material_set[index][innerIndex].mt_budget<4 ? 'rgb(219,219,219)':'black'\n                          }}\n                      >₩</Text>\n                      <Text\n                          style={{\n                              transform:'translate(2px,-2px)',\n                              position:'absolute',\n                              top:'1px',\n                              left:'42px',\n                              fontWeight:50,\n                              fontSize:'12px',\n                              color:moodboardData.material_set[index][innerIndex].mt_budget<5 ? 'rgb(219,219,219)':'black'\n                          }}\n                      >₩</Text>\n                  </div>\n                  <TouchableOpacity\n                      style={{\n                          backgroundColor:'transparent',\n                          width:'20px',\n                          height:'20px',\n                          position:'absolute',\n                          zIndex:100,\n                          top:'6px',\n                          right:'6px',\n                          display:hoverOne==index&&hoverTwo==innerIndex ? 'block':'none'\n                      }}\n                      onPress={()=>{  \n                        setMaterialNumber(moodboardData.material_set[index][innerIndex].mt_no)\n                        toggleClipBoard()\n                      //   console.log('pressed clip ' + brandData.bestproducts_brand[index].mt_no)\n                    }}\n                  >   \n                      <Image\n                                style={{\n                                display:'block',\n                                height:'20px',\n                                width:'20px',\n                                borderTopLeftRadius:10,\n                                borderTopRightRadius:10,\n                                zIndex:1,\n                                pointerEvents:'none',\n                                // display:materialData.samecategory_list[index].is_clipped==false ? 'block':'none'\n                                // transform:[{\n                                //     translateX:'0px',\n                                //     translateY:'0px'\n                                // }]\n                                }}\n                                source={clipOff}\n\n                                >\n                                \n                            </Image>\n                            {/* <Image\n                                style={{\n                                display:'block',\n                                height:'20px',\n                                width:'20px',\n                                borderTopLeftRadius:10,\n                                borderTopRightRadius:10,\n                                zIndex:1,\n                                pointerEvents:'none',\n                                display:materialData.samecategory_list[index].is_clipped==true ? 'block':'none'\n                                // transform:[{\n                                //     translateX:'0px',\n                                //     translateY:'0px'\n                                // }]\n                                }}\n                                source={clipOn}\n\n                                >\n                                \n                            </Image> */}\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    onPress={()=>{\n                        // console.log(materialData.samecategory_list[index].mt_no)\n                        Linking.openURL('/partDetail?mt_no='+moodboardData.material_set[index][innerIndex].mt_no)\n                    }}\n                  >\n                  <Image\n                    style={{\n                    display:'block',\n                    height:'170px',\n                    width:'170px',\n                    borderTopLeftRadius:10,\n                    borderTopRightRadius:10,\n                    zIndex:1,\n                    pointerEvents:'none',\n                    filter:hoverOne==index&&hoverTwo==innerIndex ? 'brightness(90%)':'brightness(100%)'\n                    // transform:[{\n                    //     translateX:'0px',\n                    //     translateY:'0px'\n                    // }]\n                    }}\n                    source={{\n                        uri:\n                            moodboardData.material_set[index][innerIndex].mt_feature_img_url\n                    }}\n\n                  >\n                  </Image>\n                 \n                  <View\n                    style ={{\n                      height:'70px',\n                      width:'170px',\n                      fontSize: '12pt',\n                      fontWeight:'500',\n                      textDecorationLine:'none',\n                      color:'white',\n                      textAlign:'center',\n                      flexDirection:'column',\n                    //   pointerEvents:'none',\n                      backgroundColor:'white',\n                    //   pointerEvents:'none',\n                      borderBottomLeftRadius:10,\n                      borderBottomRightRadius:10,\n                      padding:'10px'\n                    }}\n                  >\n                                                                      <TouchableOpacity\n                                                    style={{\n                                                        zIndex:100,\n                                                        backgroundColor:'transparent',\n                                                        position:'absolute',\n                                                        top:'7px',\n                                                        right:'7px',\n                                                        height:'30px',\n                                                        width:'30px',\n                                                        display:moodboardData.material_set[index][innerIndex].mt_isdelivery==\"Y\"?\"block\":\"none\"\n                                                    }}\n                                                    onPress={()=>{\n                                                        console.log(moodboardData.material_set[index][innerIndex].mt_isdelivery)\n                                                    }}\n                                                >\n                                                    <View\n                                                    style={{\n                                                        backgroundColor:'transparent',\n                                                        display:'flex',\n                                                        height:'30px',\n                                                        width:'30px',\n                                                        // position:'absolute',\n                                                        // top:'7px',\n                                                        // right:'15px'\n                                                    }}\n                                                    >\n                                    \n                                                        <img\n                                                            src={boxIcon}\n                                                            style={{\n                                                                //display: categoryOpened? 'none': 'block',\n                                                                width:'30px',\n                                                                height:'30px',\n                                                                right:'15px'\n                                                            }}\n                                                        >\n                                                        </img>\n                                                    \n                                                    </View>\n                                                </TouchableOpacity>\n                    <Text\n                      style ={{\n                          // height:'65pt',\n                          // width:'250px',\n                          fontSize: '8pt',\n                          fontWeight:'700',\n                          textDecorationLine:'none',\n                          color:'black',\n                          textAlign:'left',\n                          //alignItems:'center',\n                          //justifyContent:'center',\n                          //flexDirection:'row',\n                          //marginTop:'45pt',\n                          pointerEvents:'none',\n                          backgroundColor:'transparent',\n                          pointerEvents:'none',\n                          \n                      }}\n                  >\n                      {moodboardData.material_set[index][innerIndex].vd_name}\n                  </Text>\n                    <Text\n                          style ={{\n                              height:'100px',\n                              width:'120px',\n                              fontSize: '8pt',\n                              fontWeight:'500',\n                              textDecorationLine:'none',\n                              color:'black',\n                              textAlign:'left',\n                              alignItems:'center',\n                              justifyContent:'center',\n                              flexDirection:'row',\n                              // marginLeft:'1px',\n                              // marginTop:'1px',\n                              pointerEvents:'none',\n                              backgroundColor:'transparent',\n                              pointerEvents:'none',\n                              \n                              \n                          }}\n                      >\n                      {moodboardData.material_set[index][innerIndex].mt_subname}\n                      \n                    </Text>\n                    <Text\n                      style ={{\n                          height:'100px',\n                          width:'120px',\n                          fontSize: '8pt',\n                          fontWeight:'500',\n                          textDecorationLine:'none',\n                          color:'rgb(85,85,85)',\n                          textAlign:'left',\n                          alignItems:'center',\n                          justifyContent:'center',\n                          flexDirection:'row',\n                          // marginLeft:'1px',\n                          // marginTop:'1px',\n                          pointerEvents:'none',\n                          backgroundColor:'transparent',\n                          pointerEvents:'none',\n                          whiteSpace:'nowrap',\n                          textOverflow: 'ellipsis',\n                          overflow:'hidden'\n                      }}\n                  >\n                  {moodboardData.material_set[index][innerIndex].mt_name}\n                  \n              </Text>\n                    \n          </View>\n          </TouchableOpacity>\n        </View>\n      \n                                        </div>\n                                        {/* </div> */}\n                                        </div>\n                                    )\n                                }\n\n                                console.log(innerIndex)\n                                \n                            })}\n                            </View>\n                        )  \n                    })}\n                </View> \n            </div>\n        )\n      }\n      else{\n          return(\n            <div>\n                <Navbar />\n                <NavBarFiller/>\n            </div>\n          )\n      }\n      \n}\nexport default PartDetail","/Users/bernardahn/Documents/GitHub/clip/src/components/MoodClipBoard.js",["658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685"],"import React,{useEffect} from 'react';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport NavBarFiller from './NavBarFiller';\nimport Pagination from './Pagination';\nimport {TouchableOpacity,Text,View,Modal,Image,TouchableHighlight,Linking,Dimensions,textInput} from 'react-native';\nimport xIcon from '../assets/x.png';\nconst queryString = require('query-string');\n\nfunction MoodClipBoard(props){\n    const [height,setHeight]=React.useState(Dimensions.get('window').height)\n    const [width,setWidth]=React.useState(Dimensions.get('window').width)\n    const [clipBoardData,setClipBoardData]=React.useState([])\n    const [checkButtonChecked,setCheckButtonChecked]=React.useState([])\n    // const[clipBoardDataDetail,setClipBoardDataDetail]=React.useState([])\n    const [boardBuilding,setBoardBuilding]=React.useState(false)\n    const [refresh,setRefresh]=React.useState(0)\n    const [newBoard,setNewBoard]=React.useState(false)\n    const [inputValue,setInputValue]=React.useState(\"\")\n    const [makeButtonEnable,setMakeButtonEnable]=React.useState(false)\n    const onChange=()=>{\n        setHeight(Dimensions.get('window').height)\n        setWidth(Dimensions.get('window').width)\n        // console.log(height+\" : \"+width)\n      }\n    const clipBoardInfo=(qStr)=>{\n    // console.log(qStr)\n    fetch('/clipboardInfo?'+qStr\n    )\n    .then(res=>res.json())\n    .then((incomingData)=>{\n        console.log(incomingData)\n        setClipBoardData(incomingData.sort(function(a,b){\n            var textA = a.cb_name.toUpperCase()\n            var textB = b.cb_name.toUpperCase()\n            return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n        }))\n        })\n    .catch(err=>{\n        console.log(err)\n    })\n    }\n    // const clipBoardDetailInfo=(qStr)=>{\n    //     // console.log(qStr)\n    //     fetch('/clipboardDetailInfo?'+qStr\n    //     )\n    //     .then(res=>res.json())\n    //     .then((incomingData)=>{\n    //         console.log(incomingData)\n    //         setClipBoardDataDetail([...clipBoardDataDetail,...incomingData])\n    //         })\n    //     .catch(err=>{\n    //         console.log(err)\n    //     })\n    //     }\n    const checkboxClicked=(index,e,cb_no,details)=>{\n        console.log('clicked')\n        console.log(details.cb_no)\n        console.log(props.moodboard_num)\n        var mem_no=undefined\n        if(localStorage.login!=undefined){\n            mem_no=JSON.parse(localStorage.login).message.split('_')[0]\n            //parsed.mem_no=mem_no \n            console.log(mem_no)\n        }\n        else{\n            mem_no=\"\"\n        }\n        fetch('/ScrapClipboard?'+\n            queryString.stringify({\n                    mem_no:mem_no,\n                    cb_no:details.cb_no,\n                    ce_type:\"MOODBOARD\",\n                    ce_detail:props.moodboard_num\n                })\n        )\n        .then(res=>res.json())\n        .then((incomingData)=>{\n            console.log(incomingData)\n            setRefresh(refresh+1)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n        \n\n\n        \n        \n      }\n      const updateInputValue=(e)=>{\n          setInputValue(e.target.value)\n          if(e.target.value!=\"\"){\n              setMakeButtonEnable(true)\n          }\n          else{\n              setMakeButtonEnable(false)\n          }\n      }\n      const addClipboard=(cb_name)=>{\n        var mem_no=undefined\n        if(localStorage.login!=undefined){\n            mem_no=JSON.parse(localStorage.login).message.split('_')[0]\n        }\n        else{\n            mem_no=\"\"\n        }\n        console.log({mem_no:mem_no,cb_name:cb_name})\n        fetch('/AddClipboard?'+\n            queryString.stringify({\n                    mem_no:mem_no,\n                    cb_name:cb_name\n                })\n        )\n        .then(res=>res.json())\n        .then((incomingData)=>{\n            console.log(incomingData)\n            //setNewBoard(!newBoard)\n            //setRefresh(refresh+1)\n            window.location.reload()\n        })\n        .catch(err=>{\n            console.log(err)\n        })       \n      }\n    const materialNumberMatch=(materialNumber,object)=>{\n        var value=false\n        for(var i=0; i<object.detail.list_material.length; i++){\n            // console.log(object.detail.list_material[i].mt_no)\n            // console.log(materialNumber)\n            // console.log(object.detail.list_material[i].mt_no==materialNumber)\n            if(object.detail.list_material[i].mt_no==materialNumber){\n                value=true\n            }\n        }\n        console.log('number match = '+value)\n        return value\n    }\n    useEffect(() => {\n        Dimensions.addEventListener('change',onChange)\n        // const parsed = queryString.parse(props.location.search);\n        var parsed = {}\n        //console.log(localStorage.login==undefined)\n        if(localStorage.login!=undefined){\n            var mem_no=undefined\n            mem_no=JSON.parse(localStorage.login).message.split('_')[0]\n            parsed.mem_no=mem_no \n        }\n        else{\n            parsed.mem_no=\"\"\n        }\n        parsed.cb_type='INDIV'\n        console.log(parsed)\n        clipBoardInfo(queryString.stringify(parsed)) \n        console.log('q = '+JSON.stringify(parsed))\n\n        \n      },[])\n      useEffect(() => {\n        var parsed = {}\n        // console.log(localStorage.login==undefined)\n        if(localStorage.login!=undefined){\n            var mem_no=undefined\n            mem_no=JSON.parse(localStorage.login).message.split('_')[0]\n            parsed.mem_no=mem_no \n        }\n        else{\n            parsed.mem_no=\"\"\n        }\n        parsed.cb_type='INDIV'\n        console.log(parsed)\n        clipBoardInfo(queryString.stringify(parsed)) \n  \n      },[props.refresh,refresh])\n    useEffect(()=>{\n        // console.log(\"clipboard length \")\n        // console.log(clipBoardData.length == 0)\n        // if(clipBoardData.length!=0){\n        //     for(var i=0;i<clipBoardData.length;i++){\n        //         console.log(clipBoardData[i].cb_no)\n        //         clipBoardDetailInfo(queryString.stringify({cb_no:clipBoardData[i].cb_no}))\n        //     }\n        // }\n        // console.log(clipBoardData)\n        console.log(clipBoardData)\n        if(clipBoardData.length!=0){\n            var temp=checkButtonChecked.slice()\n            // console.log(clipBoardData)\n            for(var i=0;i<clipBoardData.length;i++){\n                //console.log(clipBoardData[i].detail.list_material)\n                var checked=false\n\n                for(var j=0; j<clipBoardData[i].detail.list_moodboard.length;j++){\n                    if(props.moodboard_num==clipBoardData[i].detail.list_moodboard[j].mb_no){\n                        checked=true\n                    }\n                }\n                temp[i]=checked\n            }\n            console.log(temp)\n            setCheckButtonChecked(temp)\n            //setRefresh(refresh+1)\n        }\n        \n        \n    },[clipBoardData])\n    // useEffect(()=>{\n    //     console.log(clipBoardDataDetail)\n    // })\n    if(newBoard){\n        return (\n            <div\n            style={{\n            position:'fixed',\n            height:'100vh',\n            width:'100vw',\n            top:0,\n            left:0,\n            backgroundColor:'rgba(0,0,0,0.5)',\n            display:'block',\n        //   padding:'160px',\n            zIndex:101\n            }}\n        >\n        <div\n        style={{\n            paddingTop:'100px',\n            paddingLeft:'65px',\n            paddingRight:'65px'\n        }}\n        >\n            <div\n            style={{\n                textAlign:'left',\n                // margin:'25pt'\n                paddingLeft:'0px',\n                paddingRight:'0px',\n                backgroundColor:'transparent'\n            }}\n            >\n            \n            \n            \n            \n            </div>\n\n\n            <div\n            style={{\n            borderRadius:'10px',\n            backgroundColor:'white',\n            width:'100%',\n            height:'300px',\n            paddingTop:'15px',\n            // columnCount:3,\n            // flexwrap:'wrap',\n            // flexDirection:'column',\n            // display: 'grid',\n            // gridTemplateColumns: 'auto auto',\n            // // padding:'100px',\n            overflowY: 'scroll',\n            }}\n            >\n                <div\n                style={{\n                height:'25px',\n                width:'25px',\n                backgroundColor:'transparent',\n                position: 'absolute',\n                top:'110px',\n                left:'75px',\n                zIndex:102,\n                }}\n            >\n                <TouchableOpacity\n                onPress={()=>{\n                    // console.log(detailedCategoryData)\n                    props.toggleClipBoard()\n                    setNewBoard(false)\n                }}\n                >\n                <img\n                src={xIcon}\n                style={{\n                    height:'25px',\n                    width:'25px',\n                }}\n                >\n                </img>\n                </TouchableOpacity>\n            </div>\n            \n                <View\n                style={{\n                    backgroundColor:'white',\n                    height:'298px',\n                    width:'100%',\n                    borderBottomLeftRadius:'10px',\n                    borderBottomRightRadius:'10px'\n\n                }}\n                >\n                    <View\n                        style={{\n                            position:'relative',\n                            top:0,\n                            height:'30px',\n                            width:'100%',\n                            backgroundColor:'white',\n                            borderTopLeftRadius:'10px',\n                            borderTopRightRadius:'10px',\n                            borderBottom:'1px solid rgb(221,221,221)'\n                        }}\n                    >\n                    <Text\n                        style={{\n                            fontWeight:700,\n                        }}\n                    >새로운 클립보드 생성</Text>\n                    </View>\n\n                <div\n                    style={{\n                    display: 'block',\n                    textAlign:'left',\n                    padding:'15px',\n                    overflowY:'scroll',\n                    backgroundColor:'white',\n                    height:'100%'\n                }} \n                >\n                    <Text\n                        style={{\n                            fontWeight:700\n                        }}\n                    >보드명</Text>\n                    <div>\n                        <input \n                            style={{\n                                overflow:'hidden', \n                                width:'100%',\n                                height:'40px',\n                                padding:'12px 20px',\n                                margin:\"8px 0\",\n                                border:\"1px solid #ccc\",\n                                borderRadius:'4px',\n                                boxSizing:'border-box'\n                            }}\n                            value={inputValue} \n                            onChange={updateInputValue}\n                            placeholder={'입력'}\n                        />\n                    </div>\n                </div>\n                <div>\n                <TouchableOpacity\n                    style={{\n                        position:'absolute',\n                        bottom:0,\n                        height:'50px',\n                        width:'100%',\n                        backgroundColor:'transparent',\n                        borderBottomLeftRadius:'10px',\n                        borderBottomRightRadius:'10px',\n                        zIndex:100\n                    }}\n                    onPress={()=>{\n                        console.log('make a new board')\n                        //setNewBoard(!newBoard)\n                        \n                        addClipboard(inputValue)\n                        // setRefresh(refresh+1)\n                        // setInputValue('')\n                        \n                    }}\n                    disabled={\n                        !makeButtonEnable\n                    }\n                >\n                    <View\n                        style={{\n                            backgroundColor:makeButtonEnable==true ? 'white':'silver',\n                            borderTop:'1px solid rgb(221,221,221)',\n                            zIndex:200\n                        }}\n                    >\n                    <Text\n                        style={{\n                            lineHeight:'50px',\n                            fontWeight:700,\n                            color:makeButtonEnable==false ? 'grey':'black'\n                        }}\n                    >\n                        새로 만들기\n                    </Text>\n                    </View>\n                </TouchableOpacity>\n                </div>\n                </View>\n                {/* <Text>{props.material_num}</Text> */}\n            </div>\n        </div>\n    </div>\n        );\n    }\n    else{\n        return (\n            <div\n            style={{\n            position:'fixed',\n            height:'100vh',\n            width:'100vw',\n            top:0,\n            left:0,\n            backgroundColor:'rgba(0,0,0,0.5)',\n            display:'block',\n        //   padding:'160px',\n            zIndex:101\n            }}\n        >\n        <div\n        style={{\n            paddingTop:'100px',\n            paddingLeft:'65px',\n            paddingRight:'65px'\n        }}\n        >\n            <div\n            style={{\n                textAlign:'left',\n                // margin:'25pt'\n                paddingLeft:'0px',\n                paddingRight:'0px',\n                backgroundColor:'transparent'\n            }}\n            >\n            \n            \n            \n            \n            </div>\n    \n    \n            <div\n            style={{\n            borderRadius:'10px',\n            backgroundColor:'white',\n            width:'100%',\n            height:'300px',\n            paddingTop:'15px',\n            // columnCount:3,\n            // flexwrap:'wrap',\n            // flexDirection:'column',\n            // display: 'grid',\n            // gridTemplateColumns: 'auto auto',\n            // // padding:'100px',\n            overflowY: 'scroll',\n            }}\n            >\n                <div\n                style={{\n                height:'25px',\n                width:'25px',\n                backgroundColor:'transparent',\n                position: 'absolute',\n                top:'110px',\n                left:'75px',\n                zIndex:102,\n                }}\n            >\n                <TouchableOpacity\n                onPress={()=>{\n                    // console.log(detailedCategoryData)\n                    props.toggleClipBoard()\n                    setRefresh(refresh+1)\n                }}\n                >\n                <img\n                src={xIcon}\n                style={{\n                    height:'25px',\n                    width:'25px',\n                }}\n                >\n                </img>\n                </TouchableOpacity>\n            </div>\n            \n                <View\n                style={{\n                    backgroundColor:'white',\n                    height:'298px',\n                    width:'100%',\n                    borderBottomLeftRadius:'10px',\n                    borderBottomRightRadius:'10px'\n    \n                }}\n                >\n                    <View\n                        style={{\n                            position:'relative',\n                            top:0,\n                            height:'30px',\n                            width:'100%',\n                            backgroundColor:'white',\n                            borderTopLeftRadius:'10px',\n                            borderTopRightRadius:'10px',\n                            borderBottom:'1px solid rgb(221,221,221)'\n                        }}\n                    >\n                    <Text\n                        style={{\n                            fontWeight:700,\n                        }}\n                    >클립하기</Text>\n                    </View>\n                <View\n                    style={{\n                        display: clipBoardData.length==0 ? 'block':'none',\n                        textAlign:'left',\n                        padding:'15px'\n                    }}\n                >\n                    <Text\n                    style={{\n                        fontWeight:700,\n                    }}\n                    >\n                        생성된 보드가 아직 없습니다.\n                    </Text>\n                    <br></br>\n                    <Text>\n                        진행하고 있는 프로젝트에 필요한 자재를 클립할 보드를 만들어보세요.\n                    </Text>\n                </View>\n                <div\n                    style={{\n                    display: clipBoardData.length==0 ? 'none':'block',\n                    textAlign:'left',\n                    padding:'15px',\n                    overflowY:'scroll',\n                    backgroundColor:'transparent'\n                }} \n                >\n                {clipBoardData.map((clipboard,index)=>\n                            \n                    <div\n                        style={{\n                            display:'flex',\n                            flexDirection:'row',\n                            backgroundColor:'transparent',\n                            paddingLeft:'15px',\n                            paddingRight:'15px',\n                            justifyContent:'space-between'\n                        }}\n                    >\n                        <div\n                            style={{\n                                display:'flex',\n                                flexDirection:'row',\n                                backgroundColor:'transparent',\n                                padding:'15px',\n                            }}\n                        >\n                        <div\n                            style={{\n                                borderRadius:'10px',\n                                backgroundColor:'grey',\n                                height:'50px',\n                                width:'50px',\n                                display:'flex',\n                                flexDirection:'column',\n                            }}\n                        >\n                            <div\n                                style={{\n                                    display:'flex',\n                                    flexDirection:'row',\n                                    height:'25px',\n                                    width:'50px'\n                                }}\n                            >\n                                <div\n                                    style={{\n                                        height:'25px',\n                                        width:'25px',\n                                        backgroundColor:'grey',\n                                        borderTopLeftRadius:'10px'\n                                    }}\n                                >\n                                    <Image\n                                        style={{\n                                        display:'block',\n                                        height:'25px',\n                                        width:'25px',\n                                        // borderTopLeftRadius:10,\n                                        // borderTopRightRadius:10,\n                                        borderTopLeftRadius:'10px',\n                                        pointerEvents:'none',\n                                        marginLeft:'0px',\n                                        marginRight:'0px',\n                                        position:'relative',\n                                        left:'0px'\n                                        // transform:[{\n                                        //     translateX:'0px',\n                                        //     translateY:'0px'\n                                        // }]\n                                        }}\n                        \n                                        source={{\n                                            uri:\n                                                clipboard.cb_images[0]\n                                        }}\n    \n                                        >\n                                        </Image>\n                                </div>\n                                <div\n                                    style={{\n                                        height:'25px',\n                                        width:'25px',\n                                        backgroundColor:'grey',\n                                        borderTopRightRadius:'10px'\n                                    }}\n                                >\n                                    <Image\n                                        style={{\n                                        display:'block',\n                                        height:'25px',\n                                        width:'25px',\n                                        // borderTopLeftRadius:10,\n                                        // borderTopRightRadius:10,\n                                        borderTopRightRadius:'10px',\n                                        pointerEvents:'none',\n                                        marginLeft:'0px',\n                                        marginRight:'0px',\n                                        position:'relative',\n                                        left:'0px'\n                                        // transform:[{\n                                        //     translateX:'0px',\n                                        //     translateY:'0px'\n                                        // }]\n                                        }}\n                        \n                                        source={{\n                                            uri:\n                                                clipboard.cb_images[1]\n                                        }}\n    \n                                        >\n                                        </Image>\n                                </div>\n                            </div>\n                            <div\n                                style={{\n                                    display:'flex',\n                                    flexDirection:'row',\n                                    height:'25px',\n                                    width:'50px'\n                                }}\n                            >\n                                <div\n                                    style={{\n                                        height:'25px',\n                                        width:'25px',\n                                        backgroundColor:'grey',\n                                        borderBottomLeftRadius:'10px'\n                                    }}\n                                >\n                                    <Image\n                                        style={{\n                                        display:'block',\n                                        height:'25px',\n                                        width:'25px',\n                                        // borderTopLeftRadius:10,\n                                        // borderTopRightRadius:10,\n                                        borderBottomLeftRadius:'10px',\n                                        pointerEvents:'none',\n                                        marginLeft:'0px',\n                                        marginRight:'0px',\n                                        position:'relative',\n                                        left:'0px'\n                                        // transform:[{\n                                        //     translateX:'0px',\n                                        //     translateY:'0px'\n                                        // }]\n                                        }}\n                        \n                                        source={{\n                                            uri:\n                                                clipboard.cb_images[2]\n                                        }}\n    \n                                        >\n                                        </Image>\n                                </div>\n                                <div\n                                    style={{\n                                        height:'25px',\n                                        width:'25px',\n                                        backgroundColor:'grey',\n                                        borderBottomRightRadius:'10px'\n                                    }}\n                                >\n                                    <Image\n                                        style={{\n                                        display:'block',\n                                        height:'25px',\n                                        width:'25px',\n                                        // borderTopLeftRadius:10,\n                                        // borderTopRightRadius:10,\n                                        borderBottomRightRadius:'10px',\n                                        pointerEvents:'none',\n                                        marginLeft:'0px',\n                                        marginRight:'0px',\n                                        position:'relative',\n                                        left:'0px'\n                                        // transform:[{\n                                        //     translateX:'0px',\n                                        //     translateY:'0px'\n                                        // }]\n                                        }}\n                        \n                                        source={{\n                                            uri:\n                                                clipboard.cb_images[3]\n                                        }}\n    \n                                        >\n                                        </Image>\n                                </div>\n                            </div>\n    \n                        </div>\n                        <div\n                            style={{\n                                display:'flex',\n                                flexDirection:'column',\n                                backgroundColor:'transparent',\n                                padding:'0px' \n                            }}\n                        >\n                        <div\n                            style={{\n                                backgroundColor:'transparent',\n                                height:'25px',\n                                width:'165px',\n                                // display:'inline-block',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                textAlign:'left',\n                                // paddingTop:'11px',\n                                paddingLeft:'5px',\n                                lineHeight:'20px'\n                            }}\n                        >\n                            <Text\n                            style={{\n                                display:'inline-block',\n                                lineHeight:'25px',\n                                fontWeight:700\n                            }}\n                        >{clipboard.cb_name}</Text>\n                        </div>\n                        <div\n                            style={{\n                                backgroundColor:'transparent',\n                                height:'25px',\n                                width:'165px',\n                                // display:'inline-block',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                textAlign:'left',\n                                paddingTop:'0px',\n                                paddingLeft:'5px',\n                                lineHeight:'15px'\n                            }}\n                        >\n                            <Text\n                            style={{\n                                display:'inline-block',\n                                color:'grey',\n                                fontSize:'10px',\n                                lineHeight:'25px'\n                            }}\n                        >클립된 항목 {clipboard.cb_num_element}개\n                        </Text>\n                        </div>\n                        </div>\n                        </div>\n    \n                        <div\n                            className='checkContainer'\n                            style={{\n                                // position:'absolute',\n                                right:'0px',\n                                //top:'5px',\n                                marginTop:'10px',\n                                backgroundColor:'transparent',\n                                height:'50px',\n                                width:'50px',\n                                // display:'inline-block',\n                                paddingTop:\"5px\",\n                                // marginTop:\"5px\",\n                                // transform:[{\n                                //         translateX:'0px',\n                                //         translateY:'15px'\n                                //     }]\n                                alignItems:'center',\n                                justifyContent:'center',\n                                zIndex:98\n    \n                            }}\n                        >   \n                            <div\n                                style={{\n                                    display:'flex',\n                                    alignItems:'center',\n                                    justifyContent:'center',\n                                    marginTop:'15px'\n                                }}\n                            >\n                            <input \n                                className='checkbox'\n                                type=\"checkbox\" \n                                id={clipboard.cb_no}\n                                style={{\n                                    height:'20px',\n                                    width:'20px',\n                                    margin:'auto',\n                                    zIndex:99,\n                                    // flex:1,\n                                    //left:0,\n                                    // backgroundColor: 'orange'\n                                    \n                                }}\n                                // checked={true}\n                                //defaultChecked={materialNumberMatch(props.material_num,clipboard)}\n                                //defaultChecked={checkButtonChecked[index]}\n                                checked={checkButtonChecked[index]}\n                                onClick={(e)=>\n                                    // checkboxClicked(index,e,category.code_name,category.code_text)\n                                    checkboxClicked(index,e,clipboard.cb_no,clipboard.detail)\n                                    \n                                    // console.log(e)\n                                }\n    \n                        \n                        ></input>\n                        </div>\n                        </div>\n                    </div>\n                )}\n                    <div\n                        style={{\n                            height:'50px',\n                            width:'100%',\n                        }}\n                    >\n                    </div>\n                </div>\n                <div>\n                <TouchableOpacity\n                    style={{\n                        position:'absolute',\n                        bottom:0,\n                        height:'50px',\n                        width:'100%',\n                        backgroundColor:'white',\n                        borderBottomLeftRadius:'10px',\n                        borderBottomRightRadius:'10px',\n                        zIndex:100\n                    }}\n                    onPress={()=>{\n                        console.log('make a new board')\n                        setNewBoard(!newBoard)\n                        setRefresh(refresh+1)\n                    }}\n                >\n                    <View\n                        style={{\n                            backgroundColor:'white',\n                            borderTop:'1px solid rgb(221,221,221)',\n                            zIndex:200\n                        }}\n                    >\n                    <Text\n                        style={{\n                            lineHeight:'50px',\n                            fontWeight:700,\n                        }}\n                    >\n                        새로운 보드 생성\n                    </Text>\n                    </View>\n                </TouchableOpacity>\n                </div>\n                </View>\n                {/* <Text>{props.material_num}</Text> */}\n            </div>\n        </div>\n    </div>\n        );\n    }\n}\nexport default MoodClipBoard",["686","687"],"/Users/bernardahn/Documents/GitHub/clip/src/components/AddToShoppingCart.js",["688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717"],"import React,{useEffect} from 'react';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport NavBarFiller from './NavBarFiller';\nimport Pagination from './Pagination';\nimport {TouchableOpacity,Text,View,Modal,Image,TouchableHighlight,Linking,Dimensions,textInput} from 'react-native';\nimport xIcon from '../assets/x.png';\nimport { RadioButton } from 'react-native-paper';\n// import DatePicker from 'react-native-date-picker'\n//import DateTimePicker from '@react-native-community/datetimepicker'\n//import DatePicker from \"react-datepicker\"\nimport DatePicker from 'react-date-picker';\n\nconst queryString = require('query-string');\n\nfunction AddToShoppingCart(props){\n    const [height,setHeight]=React.useState(Dimensions.get('window').height)\n    const [width,setWidth]=React.useState(Dimensions.get('window').width)\n    const[clipBoardData,setClipBoardData]=React.useState([])\n    const [checkButtonChecked,setCheckButtonChecked]=React.useState([])\n    // const[clipBoardDataDetail,setClipBoardDataDetail]=React.useState([])\n    const [boardBuilding,setBoardBuilding]=React.useState(false)\n    const [refresh,setRefresh]=React.useState(0)\n    const [newBoard,setNewBoard]=React.useState(false)\n    const [inputValue,setInputValue]=React.useState(\"\")\n    const [makeButtonEnable,setMakeButtonEnable]=React.useState(false)\n    const [projectInfo,setProjectInfo]=React.useState([])\n    const [projectListShow,setProjectListShow]=React.useState(false)\n    const [selectedProject,setSelectedProject]=React.useState(null)\n    const [projectName,setProjectName]=React.useState('프로젝트를 선택하세요')\n    const [addProjectShow,setAddProjectShow]=React.useState(false)\n    const [date,setDate]=React.useState(new Date())\n    const [newProjectName,setNewProjectName]=React.useState('')\n    const [newProjectSize,setNewProjectSize]=React.useState('')\n    const [newProjectDescription,setNewProjectDescription]=React.useState('')\n    const [projectCategoryList,setProjectCategoryList]=React.useState([])\n    const [selectedCategory,setSelectedCategory]=React.useState('')\n    const onChange=()=>{\n        setHeight(Dimensions.get('window').height)\n        setWidth(Dimensions.get('window').width)\n        // console.log(height+\" : \"+width)\n      }\n    const getProjectInfo=(qStr)=>{\n        console.log(qStr)\n        fetch('/projectInfo?'+qStr\n        )\n        .then(res=>res.json())\n        .then((incomingData)=>{\n            console.log(incomingData)\n            // setProjectInfo(incomingData)\n            setProjectInfo(incomingData.sort(function(a,b){\n                var textA = a.prj_name.toUpperCase()\n                var textB = b.prj_name.toUpperCase()\n                return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n            }))\n            })\n        .catch(err=>{\n            console.log(err)\n        })  \n    }\n    const AddToCart=(qStr)=>{\n        console.log(qStr)\n        fetch('/AddToCart?'+qStr\n        )\n        .then(res=>res.json())\n        .then((incomingData)=>{\n            console.log(incomingData)\n            })\n        .catch(err=>{\n            console.log(err)\n        })  \n    }\n    const dateChange = (event, selectedDate)=>{\n        const currentDate=selectedDate||date;\n        setDate(currentDate)\n    }\n    const updateNewProjectName=(e)=>{\n        setNewProjectName(e.target.value)\n    //     if(e.target.value!=\"\"){\n    //       // setMakeButtonEnable(true)\n    //       setSearchTermEnable(true)\n    //   }\n    //   else{\n    //       // setMakeButtonEnable(false)\n    //       setSearchTermEnable(false)\n    //   }\n    }\n    const updateNewProjectSize=(e)=>{\n        setNewProjectSize(e.target.value)\n    //     if(e.target.value!=\"\"){\n    //       // setMakeButtonEnable(true)\n    //       setSearchTermEnable(true)\n    //   }\n    //   else{\n    //       // setMakeButtonEnable(false)\n    //       setSearchTermEnable(false)\n    //   }\n    }\n    // const AddToCart=(jsonObj)=>{\n    //     fetch('http://clip.partners/api/mobile/AddToCart',{\n    //     method: 'post',\n    //     headers: {'Content-Type':'application/json'},\n    //     body:JSON.stringify(jsonObj)\n    //     })\n    //     .then(res=>res.json())\n    //     .then(data=>{\n    //         console.log(data)\n    //     })\n    //     .catch(err=>{\n    //         console.log(err)\n    //     })\n    // }\n    const updateNewProjectDescription=(e)=>{\n        setNewProjectDescription(e.target.value)\n    //     if(e.target.value!=\"\"){\n    //       // setMakeButtonEnable(true)\n    //       setSearchTermEnable(true)\n    //   }\n    //   else{\n    //       // setMakeButtonEnable(false)\n    //       setSearchTermEnable(false)\n    //   }\n    }\n    const getProjectCategoryList=()=>{\n        fetch('/getProjectCategoryList'\n        )\n        .then(res=>res.json())\n        .then((incomingData)=>{\n            console.log(incomingData)\n            setProjectCategoryList(incomingData)\n            })\n        .catch(err=>{\n            console.log(err)\n        }) \n    }\n    const AddProject=(jsonObj)=>{\n        fetch('/AddProject?'+queryString.stringify(jsonObj)\n        )\n        .then(res=>res.json())\n        .then((incomingData)=>{\n            console.log(incomingData)\n            })\n        .catch(err=>{\n            console.log(err)\n        }) \n    }\n    \n    useEffect(()=>{\n        console.log('hello world')\n        console.log(props.material_data)\n        // const parsed = queryString.parse(props.location.search);\n        const parsed = {};\n        var mem_no=undefined\n        if(localStorage.login!=undefined){\n            if(JSON.parse(localStorage.login).result!=\"FAILURE\"){\n                mem_no=JSON.parse(localStorage.login).message.split('_')[0]\n                parsed.mem_no=mem_no \n            \n            }\n            else{\n                parsed.mem_no=\"\"\n            }\n        }\n        else{\n            parsed.mem_no=\"\"\n        }\n        parsed.type=\"LIST\"\n        console.log(parsed)\n        getProjectInfo(queryString.stringify(parsed))\n        getProjectCategoryList()\n    },[])\n    useEffect(()=>{\n        console.log(projectInfo)\n    },[projectInfo])\n        if(projectListShow==false)\n            {\n                return (\n                    <div\n                    style={{\n                    position:'fixed',\n                    height:'100vh',\n                    width:'100vw',\n                    top:0,\n                    left:0,\n                    backgroundColor:'rgba(0,0,0,0.5)',\n                    display:'block',\n                //   padding:'160px',\n                    zIndex:101\n                    }}\n                >\n                <div\n                style={{\n                    paddingTop:'100px',\n                    paddingLeft:'65px',\n                    paddingRight:'65px'\n                }}\n                >\n                    <div\n                    style={{\n                        textAlign:'left',\n                        // margin:'25pt'\n                        paddingLeft:'0px',\n                        paddingRight:'0px',\n                        backgroundColor:'transparent',\n                        \n                    }}\n                    >\n                    \n                    \n                    \n                    \n                    </div>\n            \n            \n                    <div\n                    style={{\n                    borderRadius:'10px',\n                    backgroundColor:'white',\n                    width:'100%',\n                    height:'300px',\n                    paddingTop:'15px',\n                    // columnCount:3,\n                    // flexwrap:'wrap',\n                    // flexDirection:'column',\n                    // display: 'grid',\n                    // gridTemplateColumns: 'auto auto',\n                    // // padding:'100px',\n                    overflowX:'hidden',\n                    overflowY: 'scroll',\n                    }}\n                    >\n                        <div\n                        style={{\n                        height:'25px',\n                        width:'25px',\n                        backgroundColor:'transparent',\n                        position: 'absolute',\n                        top:'110px',\n                        left:'75px',\n                        zIndex:102,\n                        }}\n                    >\n                        <TouchableOpacity\n                        onPress={()=>{\n                            // console.log(detailedCategoryData)\n                            props.toggleShoppingCart()\n                            setRefresh(refresh+1)\n                        }}\n                        >\n                        <img\n                        src={xIcon}\n                        style={{\n                            height:'25px',\n                            width:'25px',\n                        }}\n                        >\n                        </img>\n                        </TouchableOpacity>\n                    </div>\n                    \n                        <View\n                        style={{\n                            backgroundColor:'white',\n                            height:'298px',\n                            width:'100%',\n                            borderBottomLeftRadius:'10px',\n                            borderBottomRightRadius:'10px'\n                            \n                        }}\n                        >\n                            <View\n                                style={{\n                                    position:'relative',\n                                    top:0,\n                                    height:'30px',\n                                    width:'100%',\n                                    backgroundColor:'white',\n                                    borderTopLeftRadius:'10px',\n                                    borderTopRightRadius:'10px',\n                                    borderBottom:'1px solid rgb(221,221,221)'\n                                }}\n                            >\n                            <Text\n                                style={{\n                                    fontWeight:700,\n                                }}\n                            >샘플을 장바구니에 추가하기</Text>\n                            </View>\n                        <View\n                            style={{\n                                // display: clipBoardData.length==0 ? 'block':'none',\n                                textAlign:'left',\n                                padding:'15px',\n                            }}\n                        >\n                            <Image\n                            style={{\n                                display:'block',\n                                height:'70px',\n                                width:'70px',\n                                // borderTopLeftRadius:10,\n                                // borderTopRightRadius:10,\n                                borderRadius:'10px',\n                                pointerEvents:'none',\n                                marginLeft:'auto',\n                                marginRight:'auto',\n                                position:'absolute',\n                                top:'15px',\n                                left:'15px',\n                                // transform:[{\n                                //     translateX:'0px',\n                                //     translateY:'0px'\n                                // }]\n                            }}\n            \n                            source={{\n                                uri:\n                                    props.material_data.mt_feature_img_url\n                            }}\n\n                            >\n                            </Image>\n\n                        </View>\n                        <div\n                            style={{\n                                transform:'translate(100px,-2px)',\n                                display:'flex',\n                                flexDirection:'column',\n                                textAlign:'left',\n\n                            }}\n                        >\n                            <Text\n                                style={{\n                                    fontWeight:700,\n                                    fontSize:'12px',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                }}\n                            >\n                                \n                                {props.material_data.brd_name_eng}\n                            </Text>\n                            <Text \n                                style={{\n                                    fontWeight:700,\n                                    fontSize:'12px',\n                                    whiteSpace:'nowrap',\n                                }}\n                            >\n                                \n                                {props.material_data.brd_name_kor}\n                            </Text>\n                            <Text \n                                style={{\n                                    fontWeight:500,\n                                    fontSize:'12px',\n                                    whiteSpace:'nowrap',\n                                    color:'rgb(109,114,120)'\n                                }}\n                            >\n                            \n                                {props.material_data.mt_subname}\n                            </Text>\n                        </div>\n                        <div\n                            style={{\n                            // display: clipBoardData.length==0 ? 'none':'block',\n                            marginTop:'10px',\n                            textAlign:'left',\n                            paddingLeft:'15px',\n                            paddingRight:'15px',\n                            overflowY:'scroll',\n                            backgroundColor:'transparent'\n                        }} \n                        >\n\n                            <div\n                                style={{\n                                    backgroundColor:'transparent',\n                                    height:'25px',\n                                    width:'100%',\n                                    marginTop:'15px',\n                                }}\n                            >\n                                <Text\n                                    style={{\n                                        fontWeight:600,\n                                    }}\n                                >\n                                    프로젝트 선택\n                                </Text>\n                            </div>\n                            <div\n                            style={{\n                                backgroundColor:'transparent',\n                                height:'47px',\n                                width:'100%',\n                                paddingTop:'7px'\n                            }}\n                            >\n                                <TouchableOpacity\n                                    onPress={()=>{\n                                        console.log('open project list')\n                                        setProjectListShow(true)\n                                    }}\n                                >\n                                    <View\n                                        style={{\n                                            backgroundColor:'transparent',\n                                            height:'40px',\n                                            width:'100%',\n                                            borderRadius:'10px',\n                                            border:'2px solid black',\n                                            textAlign:'left',\n                                            justifyContent:'center',\n                                            lineHeight:'40px',\n                                            padding:'15px'\n                                            // alignItems:'center'\n                                        }}\n                                    >\n                                    <Text\n                                    \n                                    >\n                                        {projectName}\n                                    </Text>\n                                    <Text\n                                        style={{\n                                            position:'fixed',\n                                            right:'100px'\n                                        }}\n                                    >\n                                        &gt;\n                                    </Text>\n                                    </View>\n                                </TouchableOpacity>\n                            </div>\n                        </div>\n                        <div>\n                        <TouchableOpacity\n                            style={{\n                                position:'absolute',\n                                bottom:0,\n                                height:'50px',\n                                width:'100%',\n                                backgroundColor:'transparent',\n                                borderBottomLeftRadius:'10px',\n                                borderBottomRightRadius:'10px',\n                                zIndex:100\n                            }}\n                            onPress={()=>{\n                                console.log('make a new board')\n                                setNewBoard(!newBoard)\n                                setRefresh(refresh+1)\n                                const parsed = {};\n                                var mem_no=undefined\n                                if(localStorage.login!=undefined){\n                                    if(JSON.parse(localStorage.login).result!=\"FAILURE\"){\n                                        mem_no=JSON.parse(localStorage.login).message.split('_')[0]\n                                        parsed.mem_no=mem_no \n                                    \n                                    }\n                                    else{\n                                        parsed.mem_no=\"\"\n                                    }\n                                }\n                                else{\n                                    parsed.mem_no=\"\"\n                                }\n                                // parsed.list_material=[\n                                //     {\n                                //         vd_no:props.material_data.vd_no,\n                                //         brd_no:props.material_data.brd_no,\n                                //         mt_no:props.material_data.mt_no,\n                                //         prj_no:selectedProject,\n                                //         mt_shipfrom:props.material_data.mt_shipfrom\n                                //     }\n                                // ]\n                                parsed.list_material=[\n                                    \n                                        [props.material_data.vd_no],\n                                        [props.material_data.brd_no],\n                                        [props.material_data.mt_no],\n                                        [selectedProject],\n                                        [props.material_data.mt_shipfrom]\n                                ]\n                                console.log(parsed)\n                                AddToCart(queryString.stringify(parsed))\n                                // AddToCart(parsed)\n                                }}\n                        >\n                            <View\n                                style={{\n                                    backgroundColor:'white',\n                                    borderTop:'1px solid rgb(221,221,221)',\n                                    zIndex:200\n                                }}\n                            >\n                            <Text\n                                style={{\n                                    lineHeight:'50px',\n                                    fontWeight:700,\n                                }}\n                            >\n                                장바구니에 샘플 담기\n                            </Text>\n                            </View>\n                        </TouchableOpacity>\n                        </div>\n                        </View>\n                        {/* <Text>{props.material_num}</Text> */}\n                    </div>\n                </div>\n            </div>\n                );\n            }\n        else{\n            if(addProjectShow==false)\n            {\n                return (\n                    <div\n                    style={{\n                    position:'fixed',\n                    height:'100vh',\n                    width:'100vw',\n                    top:0,\n                    left:0,\n                    backgroundColor:'rgba(0,0,0,0.5)',\n                    display:'block',\n                //   padding:'160px',\n                    zIndex:101\n                    }}\n                >\n                <div\n                style={{\n                    paddingTop:'100px',\n                    paddingLeft:'65px',\n                    paddingRight:'65px'\n                }}\n                >\n                    <div\n                    style={{\n                        textAlign:'left',\n                        // margin:'25pt'\n                        paddingLeft:'0px',\n                        paddingRight:'0px',\n                        backgroundColor:'transparent',\n                        \n                    }}\n                    >\n                    \n                    \n                    \n                    \n                    </div>\n            \n            \n                    <div\n                    style={{\n                    borderRadius:'10px',\n                    backgroundColor:'white',\n                    width:'100%',\n                    height:'400px',\n                    paddingTop:'15px',\n                    // columnCount:3,\n                    // flexwrap:'wrap',\n                    // flexDirection:'column',\n                    // display: 'grid',\n                    // gridTemplateColumns: 'auto auto',\n                    // // padding:'100px',\n                    overflowX:'hidden',\n                    overflowY: 'scroll',\n                    }}\n                    >\n                        <div\n                        style={{\n                        height:'25px',\n                        width:'25px',\n                        backgroundColor:'transparent',\n                        position: 'absolute',\n                        top:'110px',\n                        left:'75px',\n                        zIndex:102,\n                        }}\n                    >\n                        <TouchableOpacity\n                                    onPress={()=>{\n                                        console.log('close project list')\n                                        setProjectListShow(false)\n                                    }}\n                                >\n                                    <View\n                                        style={{\n                                            backgroundColor:'transparent',\n                                            height:'25px',\n                                            width:'100%',\n                                            borderRadius:'10px',\n                                            // border:'2px solid black',\n                                            textAlign:'left',\n                                            justifyContent:'center',\n                                            lineHeight:'25px',\n                                            padding:'15px',\n                                            alignItems:'center',\n                                            transform:'translate(0px,-5px)'\n                                        }}\n                                    >\n                                    \n                                    <Text\n                                        style={{\n                                            // position:'fixed',\n                                            // right:'100px'\n                                        }}\n                                    >\n                                        &lt;\n                                    </Text>\n                                    </View>\n                                </TouchableOpacity>\n                    </div>\n                    \n                        <View\n                        style={{\n                            backgroundColor:'transparent',\n                            height:'395px',\n                            width:'100%',\n                            borderBottomLeftRadius:'10px',\n                            borderBottomRightRadius:'10px'\n                            \n                        }}\n                        >\n                            <View\n                                style={{\n                                    position:'relative',\n                                    top:0,\n                                    height:'30px',\n                                    width:'100%',\n                                    backgroundColor:'white',\n                                    borderTopLeftRadius:'10px',\n                                    borderTopRightRadius:'10px',\n                                    borderBottom:'1px solid rgb(221,221,221)'\n                                }}\n                            >\n                            <Text\n                                style={{\n                                    fontWeight:700,\n                                }}\n                            >프로젝트 선택</Text>\n                            <TouchableOpacity\n                                    onPress={()=>{\n                                        console.log('make new project ')\n                                        // setProjectListShow(true)\n                                        setAddProjectShow(true)\n                                    }}\n                                >\n                                    <View\n                                        style={{\n                                            position:'fixed',\n                                            right:'70px',\n                                            backgroundColor:'transparent',\n                                            height:'25px',\n                                            width:'120px',\n                                            borderRadius:'10px',\n                                            // border:'2px solid black',\n                                            textAlign:'left',\n                                            justifyContent:'center',\n                                            lineHeight:'25px',\n                                            padding:'15px',\n                                            alignItems:'center',\n                                            transform:'translate(0px,-25px)'\n                                        }}\n                                    >\n                                    \n                                    <Text\n                                        style={{\n                                            // position:'fixed',\n                                            // right:'100px'\n                                            color:'rgb(109,114,120)'\n                                        }}\n                                    >\n                                        프로젝트 추가\n                                    </Text>\n                                    </View>\n                                </TouchableOpacity>\n                            </View>\n                        <View\n                            style={{\n                                // display: clipBoardData.length==0 ? 'block':'none',\n                                textAlign:'left',\n                                // padding:'15px',\n                            }}\n                        >\n                            \n                        \n                        </View>\n                        <div\n                            style={{\n                            // display: clipBoardData.length==0 ? 'none':'block',\n                            marginTop:'10px',\n                            textAlign:'left',\n                            paddingLeft:'15px',\n                            paddingRight:'15px',\n                            overflowY:'scroll',\n                            overflowX:'scroll',\n                            backgroundColor:'transparent'\n                        }} \n                        >\n                        {projectInfo.map((oneProject,index)=>{\n                            // console.log(oneProject)\n                        return( \n                            <div\n                                style={{\n                                    display:'flex',\n                                    flexDirection:'row'\n                                }}\n                            > \n                            <div\n                                style={{\n                                    backgroundColor:'transparent',\n                                    height:'50px',\n                                    width:'50px',\n                                    borderRadius:10,\n                                    transform:'translate(0px,3px)',\n                                    // border:'2px solid black',\n                                }}\n                            >\n                            {/* <Image\n                                style={{\n                                    display:'block',\n                                    height:'50px',\n                                    width:'50px',\n                                    // borderTopLeftRadius:10,\n                                    // borderTopRightRadius:10,\n                                    borderRadius:'10px',\n                                    pointerEvents:'none',\n                                    // marginLeft:'auto',\n                                    // marginRight:'auto',\n                                    // position:'absolute',\n                                    // top:'15px',\n                                    // left:'15px',\n                                    // transform:[{\n                                    //     translateX:'0px',\n                                    //     translateY:'0px'\n                                    // }]\n                                }}\n                \n                                source={{\n                                    uri:\n                                        oneProject.detail.pictures_project[0].pic_url\n                                }}\n\n                                >\n                                </Image> */}\n                                {/* <div\n                                style={{\n                                    borderRadius:'10px',\n                                    backgroundColor:'grey',\n                                    height:'50px',\n                                    width:'50px',\n                                    display:'flex',\n                                    flexDirection:'column',\n                                }}\n                            >\n                                <div\n                                    style={{\n                                        display:'flex',\n                                        flexDirection:'row',\n                                        height:'25px',\n                                        width:'50px'\n                                    }}\n                                >\n                                    <div\n                                        style={{\n                                            height:'25px',\n                                            width:'25px',\n                                            backgroundColor:'grey',\n                                            borderTopLeftRadius:'10px'\n                                        }}\n                                    >\n                                        <Image\n                                            style={{\n                                            display:'block',\n                                            height:'25px',\n                                            width:'25px',\n                                            // borderTopLeftRadius:10,\n                                            // borderTopRightRadius:10,\n                                            borderTopLeftRadius:'10px',\n                                            pointerEvents:'none',\n                                            marginLeft:'0px',\n                                            marginRight:'0px',\n                                            position:'relative',\n                                            left:'0px'\n                                            // transform:[{\n                                            //     translateX:'0px',\n                                            //     translateY:'0px'\n                                            // }]\n                                            }}\n                            \n                                            source={{\n                                                uri:\n                                                oneProject.detail.pictures_project[0].pic_url\n                                            }}\n        \n                                            >\n                                            </Image>\n                                    </div>\n                                    <div\n                                        style={{\n                                            height:'25px',\n                                            width:'25px',\n                                            backgroundColor:'grey',\n                                            borderTopRightRadius:'10px'\n                                        }}\n                                    >\n                                        \n                                        <Image\n                                            style={{\n                                            display:oneProject.detail.pictures_project[1]==undefined?'none':'block',\n                                            height:'25px',\n                                            width:'25px',\n                                            // borderTopLeftRadius:10,\n                                            // borderTopRightRadius:10,\n                                            borderTopRightRadius:'10px',\n                                            pointerEvents:'none',\n                                            marginLeft:'0px',\n                                            marginRight:'0px',\n                                            position:'relative',\n                                            left:'0px'\n                                            // transform:[{\n                                            //     translateX:'0px',\n                                            //     translateY:'0px'\n                                            // }]\n                                            }}\n                            \n                                            source={{\n                                                uri:\n                                                oneProject.detail.pictures_project[1].pic_url\n                                            }}\n        \n                                            >\n                                            </Image>\n                                    </div>\n                                </div>\n                                <div\n                                    style={{\n                                        display:'flex',\n                                        flexDirection:'row',\n                                        height:'25px',\n                                        width:'50px'\n                                    }}\n                                >\n                                    <div\n                                        style={{\n                                            height:'25px',\n                                            width:'25px',\n                                            backgroundColor:'grey',\n                                            borderBottomLeftRadius:'10px'\n                                        }}\n                                    >\n                                        <Image\n                                            style={{\n                                            display:'block',\n                                            height:'25px',\n                                            width:'25px',\n                                            // borderTopLeftRadius:10,\n                                            // borderTopRightRadius:10,\n                                            borderBottomLeftRadius:'10px',\n                                            pointerEvents:'none',\n                                            marginLeft:'0px',\n                                            marginRight:'0px',\n                                            position:'relative',\n                                            left:'0px'\n                                            // transform:[{\n                                            //     translateX:'0px',\n                                            //     translateY:'0px'\n                                            // }]\n                                            }}\n                            \n                                            source={{\n                                                uri:\n                                                    oneProject.detail.pictures_project[2].pic_url\n                                            }}\n        \n                                            >\n                                            </Image>\n                                    </div>\n                                    <div\n                                        style={{\n                                            height:'25px',\n                                            width:'25px',\n                                            backgroundColor:'grey',\n                                            borderBottomRightRadius:'10px'\n                                        }}\n                                    >\n                                        <Image\n                                            style={{\n                                            display:'block',\n                                            height:'25px',\n                                            width:'25px',\n                                            // borderTopLeftRadius:10,\n                                            // borderTopRightRadius:10,\n                                            borderBottomRightRadius:'10px',\n                                            pointerEvents:'none',\n                                            marginLeft:'0px',\n                                            marginRight:'0px',\n                                            position:'relative',\n                                            left:'0px'\n                                            // transform:[{\n                                            //     translateX:'0px',\n                                            //     translateY:'0px'\n                                            // }]\n                                            }}\n                            \n                                            source={{\n                                                uri:\n                                                    oneProject.detail.pictures_project[3].pic_url\n                                            }}\n        \n                                            >\n                                            </Image>\n                                    </div>\n                                </div>\n        \n                            </div>\n                            */}\n                            </div>\n                            <div\n                                style={{\n                                    display:'flex',\n                                    flexDirection:'row',\n                                    textAlign:'left',\n                                    justifyContent:'space-between',\n                                    backgroundColor:'transparent',\n                                    width:'100%'\n                                }}\n                            >\n                            <div\n                            style={{\n                                transform:'translate(15px,3px)',\n                                display:'flex',\n                                flexDirection:'column',\n                                textAlign:'left',\n                                backgroundColor:'transparent',\n                                width:'300px'\n                            }}\n                        >\n                            <Text\n                                style={{\n                                    fontWeight:700,\n                                    fontSize:'12px',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                }}\n                            >\n                                \n                                {/* {props.material_data.brd_name_eng} */}\n                                {oneProject.prj_name}\n                            </Text>\n                            <Text \n                                style={{\n                                    fontWeight:700,\n                                    fontSize:'12px',\n                                    whiteSpace:'nowrap',\n                                    color:'rgb(109,114,120)'\n                                }}\n                            >\n                                \n                            프로젝트 부문: {oneProject.prj_category_text}\n                            </Text>\n                            <Text \n                                style={{\n                                    fontWeight:500,\n                                    fontSize:'12px',\n                                    whiteSpace:'nowrap',\n                                    color:'rgb(109,114,120)',\n                                    marginBottom:'15px'\n                                }}\n                            >\n                            \n                            프로젝트 규모: {oneProject.prj_size}\n                            </Text>\n                        </div>\n                        <div\n                            style={{\n                                width:'100%',\n                                backgroundColor:'transparent',\n                                alignItems:'center',\n                                // justifyContent:'center',\n                                flexDirection:'row',\n                                display:'flex'\n                            }}\n                        >\n                            <div\n                                    style={{\n                                        height:'25px',\n                                        // marginRight:'15px',\n                                        width:'100%',\n                                        backgroundColor:'transparent'\n\n                                    }}\n                                >\n                            </div>\n                            <div\n                                style={{\n                                    position:'relative',\n                                    // right:width-400+\"px\",\n                                    height:'25px',\n                                    width:'28px',\n                                    alignItems:'center',\n                                    justifyContent:'center',\n                                    backgroundColor:'transparent',\n                                    // paddingRight:'5px',\n                                    // paddingBottom:'5px',\n                                    display:'flex',\n                                    verticalAlign:'top',\n                                    marginRight:'15px'\n                                    \n                                }}\n                            >\n                                \n                                <RadioButton\n                                    \n                                    value={oneProject.prj_no}\n                                    // status={ checked === 'first' ? 'checked' : 'unchecked' }\n                                    // onPress={() => setChecked('first')}\n                                    status={ selectedProject === oneProject.prj_no ? 'checked' : 'unchecked' }\n                                    onPress={() => {\n                                        setSelectedProject(oneProject.prj_no)\n                                        setProjectName(oneProject.prj_name)\n                                    }}\n                                    color=\"rgb(255,123,88)\"\n                                />\n                                \n                            </div>\n                            </div>\n                            </div>\n                        </div>\n                        )\n                        })}\n                        <div\n                        style={{\n                            height:'50px',\n                            width:'100%',\n                            backgroundColor:'transparent',\n                            zIndex:99\n                        }}\n                        >\n                            \n                        </div>\n                        </div>\n                        <div>\n                        <TouchableOpacity\n                            style={{\n                                position:'absolute',\n                                bottom:0,\n                                height:'50px',\n                                width:'100%',\n                                backgroundColor:'transparent',\n                                borderBottomLeftRadius:'10px',\n                                borderBottomRightRadius:'10px',\n                                zIndex:100\n                            }}\n                            onPress={()=>{\n                                console.log('confirm')\n                                setNewBoard(!newBoard)\n                                setRefresh(refresh+1)\n                                \n                                setProjectListShow(false)\n                            }}\n                        >\n                            <View\n                                style={{\n                                    backgroundColor:'white',\n                                    borderTop:'1px solid rgb(221,221,221)',\n                                    zIndex:200\n                                }}\n                            >\n                            <Text\n                                style={{\n                                    lineHeight:'50px',\n                                    fontWeight:700,\n                                }}\n                            >\n                                확인\n                            </Text>\n                            </View>\n                        </TouchableOpacity>\n                        </div>\n                        </View>\n                        {/* <Text>{props.material_num}</Text> */}\n                    </div>\n                </div>\n            </div>\n                );\n            }\n            else{\n                return(\n                    <div\n                    style={{\n                    position:'fixed',\n                    height:'100vh',\n                    width:'100vw',\n                    top:0,\n                    left:0,\n                    backgroundColor:'rgba(0,0,0,0.5)',\n                    display:'block',\n                //   padding:'160px',\n                    zIndex:101\n                    }}\n                >\n                <div\n                style={{\n                    paddingTop:'100px',\n                    paddingLeft:'65px',\n                    paddingRight:'65px'\n                }}\n                >\n                    <div\n                    style={{\n                        textAlign:'left',\n                        // margin:'25pt'\n                        paddingLeft:'0px',\n                        paddingRight:'0px',\n                        backgroundColor:'transparent',\n                        \n                    }}\n                    >\n                    \n                    \n                    \n                    \n                    </div>\n            \n            \n                    <div\n                    style={{\n                    borderRadius:'10px',\n                    backgroundColor:'white',\n                    width:'100%',\n                    height:'400px',\n                    paddingTop:'15px',\n                    // columnCount:3,\n                    // flexwrap:'wrap',\n                    // flexDirection:'column',\n                    // display: 'grid',\n                    // gridTemplateColumns: 'auto auto',\n                    // // padding:'100px',\n                    overflowX:'hidden',\n                    overflowY: 'scroll',\n                    }}\n                    >\n                        \n                    \n                        <View\n                        style={{\n                            backgroundColor:'transparent',\n                            height:'395px',\n                            width:'100%',\n                            borderBottomLeftRadius:'10px',\n                            borderBottomRightRadius:'10px'\n                            \n                        }}\n                        >\n                            \n                            <View\n                                style={{\n                                    position:'relative',\n                                    top:0,\n                                    height:'30px',\n                                    width:'100%',\n                                    backgroundColor:'white',\n                                    borderTopLeftRadius:'10px',\n                                    borderTopRightRadius:'10px',\n                                    borderBottom:'1px solid rgb(221,221,221)'\n                                }}\n                            >\n                                <div\n                        style={{\n                        height:'25px',\n                        width:'25px',\n                        backgroundColor:'transparent',\n                        // position: 'absolute',\n                        top:'110px',\n                        left:'75px',\n                        zIndex:102,\n                        }}\n                    >\n                        <TouchableOpacity\n                                    onPress={()=>{\n                                        console.log('close project list')\n                                        // setProjectListShow(false)\n                                        setAddProjectShow(false)\n                                    }}\n                                >\n                                    <View\n                                        style={{\n                                            backgroundColor:'transparent',\n                                            height:'25px',\n                                            width:'100%',\n                                            borderRadius:'10px',\n                                            // border:'2px solid black',\n                                            textAlign:'left',\n                                            justifyContent:'center',\n                                            lineHeight:'25px',\n                                            padding:'15px',\n                                            alignItems:'center',\n                                            transform:'translate(10px,-10px)'\n                                        }}\n                                    >\n                                    \n                                    <Text\n                                        style={{\n                                            // position:'fixed',\n                                            // right:'100px'\n                                        }}\n                                    >\n                                        &lt;\n                                    </Text>\n                                    </View>\n                                </TouchableOpacity>\n                    </div>\n                    <View\n                        style={{\n                            transform:'translate(0px,-25px)'\n                        }}\n                    >\n                            <Text\n                                style={{\n                                    fontWeight:700,\n                                }}\n                            >프로젝트 추가</Text>\n                    </View>    \n                            </View>\n                        <View\n                            style={{\n                                // display: clipBoardData.length==0 ? 'block':'none',\n                                textAlign:'left',\n                                padding:'15px',\n                                \n                            }}\n                        >\n                            <Text\n                                style={{\n                                    fontWeight:700,\n                                }}\n                            >\n                                프로젝트명\n                            </Text>\n                            <input \n                                style={{\n                                    overflow:'hidden', \n                                    width:'100%',\n                                    height:'30px',\n                                    padding:'12px 12px',\n                                    margin:\"8px 0\",\n                                    border:\"1px solid black\",\n                                    borderRadius:'0px',\n                                    boxSizing:'border-box',\n                                    // position:'fixed',\n                                    // top:20,\n                                    // right:280\n                                }}\n                                value={newProjectName} \n                                onChange={updateNewProjectName}\n                                placeholder={'프로젝트명 입력'}\n                            />\n                            <Text\n                                style={{\n                                    fontWeight:700,\n                                    marginBottom:'10px'\n                                }}\n                            >\n                                프로젝트 부문\n                            </Text>\n                            <select value={selectedCategory}\n                                onChange={(e)=>{\n                                    console.log(e.target.value)\n                                    setSelectedCategory(e.target.value)\n                                }}\n                                style={{\n                                    width:'100%',\n                                    padding:'5px 12px',\n                                    border: '1px solid black',\n                                    appearance:'none'\n                                }}\n                            >\n                                <option key='선택' value='선택' selected hidden\n                                    style={{\n                                        color: 'grey'\n                                    }}\n                                >\n                                    선택\n                                </option>\n                                {projectCategoryList.map((option)=>{\n                                    // console.log(option)\n                                    return(\n                                        <option key={option.code_text} value={option.code_name}>\n                                            {option.code_text}\n                                        </option>\n                                        )\n                                })}\n\n                            </select>\n                            <Text\n                                style={{\n                                    marginTop:'10px',\n                                    fontWeight:700,\n                                }}\n                            >\n                                프로젝트 규모\n                            </Text>\n                            <input \n                                style={{\n                                    overflow:'hidden', \n                                    width:'100%',\n                                    height:'30px',\n                                    padding:'12px 12px',\n                                    margin:\"8px 0\",\n                                    border:\"1px solid black\",\n                                    borderRadius:'0px',\n                                    boxSizing:'border-box',\n                                    // position:'fixed',\n                                    // top:20,\n                                    // right:280\n                                }}\n                                value={newProjectSize} \n                                onChange={updateNewProjectSize}\n                                placeholder={'프로젝트 규모 입력'}\n                            />\n                            {/* <DatePicker\n                            date={date}\n                            onDateChange={setDate}\n                            /> */}\n                            {/* <DateTimePicker\n                            testID=\"dateTimePicker\"\n                            value={date}\n                            mode='date'\n                            is24Hour={true}\n                            display=\"default\"\n                            onChange={onChange}\n                            /> */}\n                            {/* <DatePicker selected={date} onChange={date => setDate(date)} /> */}\n                            <Text\n                                style={{\n                                    fontWeight:700,\n                                    marginTop:'0px',\n                                    marginBottom:'10px'\n                                }}\n                            >\n                                자재 필요시기\n                            </Text>\n                            <DatePicker\n                                onChange={(data)=>{\n                                    console.log(data.getFullYear())\n                                    console.log(data.getMonth()+1)\n                                    console.log(data.getDate())\n                                    setDate(data)\n                                }}\n                                value={date}\n                                style={{\n                                    padding:'5px 12px'\n                                }}\n                            />\n                            <Text\n                                style={{\n                                    marginTop:'10px',\n                                    fontWeight:700,\n                                }}\n                            >\n                                프로젝트 내용\n                            </Text>\n                            <Text\n                                style={{\n                                    // marginTop:'10px',\n                                    fontWeight:500,\n                                }}\n                            >\n                                주문하시는 자재샘플이 첨부된 도면 또는 렌더링 이미지에 어떤방식으로 적용될지 설명해주세요\n                            </Text>\n                            <div\n                            style={{\n                                backgroundColor:'transparent',\n                                marginRight:'26px'\n                            }}>\n                            <textarea \n                                style={{\n                                    // overflow:'hidden', \n                                    width:'100%',\n                                    height:'100px',\n                                    padding:'12px 12px',\n                                    // margin:\"8px 0\",\n                                    border:\"1px solid black\",\n                                    borderRadius:'0px',\n                                    // boxSizing:'border-box',\n                                    // // position:'fixed',\n                                    // // top:20,\n                                    // // right:280\n                                    marginRight:'7px'\n                                }}\n                                value={newProjectDescription} \n                                onChange={updateNewProjectDescription}\n                                placeholder={'메시지를 남겨주세요'}\n                            />\n                            </div>\n                        </View>\n                        <div\n                            style={{\n                            // display: clipBoardData.length==0 ? 'none':'block',\n                            marginTop:'10px',\n                            textAlign:'left',\n                            paddingLeft:'15px',\n                            paddingRight:'15px',\n                            overflowY:'scroll',\n                            overflowX:'scroll',\n                            backgroundColor:'transparent'\n                        }} \n                        >\n                        \n                        \n                        </div>\n                        <div>\n                        <TouchableOpacity\n                            style={{\n                                // position:'absolute',\n                                // bottom:0,\n                                height:'50px',\n                                width:'100%',\n                                backgroundColor:'transparent',\n                                borderBottomLeftRadius:'10px',\n                                borderBottomRightRadius:'10px',\n                                zIndex:100\n                            }}\n                            onPress={()=>{\n                                console.log('confirm')\n                                // setNewBoard(!newBoard)\n                                // setRefresh(refresh+1)\n                                setAddProjectShow(false)\n                                setProjectListShow(false)\n\n                                var obj={}\n                                obj.mem_no=JSON.parse(localStorage.login).message.split('_')[0]\n                                obj.prj_name=newProjectName\n                                obj.prj_category=selectedCategory\n                                obj.prj_size=newProjectSize\n                                obj.prj_date= date.getFullYear()+'년 '+(Number(date.getMonth())+1)+'월'\n                                obj.prj_description=newProjectDescription\n                                console.log(obj)\n                                AddProject(obj)\n                                window.location.reload()\n                            }}\n                        >\n                            <View\n                                style={{\n                                    backgroundColor:'white',\n                                    borderTop:'1px solid rgb(221,221,221)',\n                                    zIndex:200\n                                }}\n                            >\n                            <Text\n                                style={{\n                                    lineHeight:'50px',\n                                    fontWeight:700,\n                                }}\n                            >\n                                추가하기\n                            </Text>\n                            </View>\n                        </TouchableOpacity>\n                        </div>\n                        </View>\n                        {/* <Text>{props.material_num}</Text> */}\n                    </div>\n                </div>\n            </div>\n                )\n            }\n        }\n    \n}\nexport default AddToShoppingCart","/Users/bernardahn/Documents/GitHub/clip/src/components/LogOut.js",["718","719","720","721","722","723","724","725","726","727","728","729","730"],"/Users/bernardahn/Documents/GitHub/clip/src/components/LogIn.js",["731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754"],"/Users/bernardahn/Documents/GitHub/clip/src/components/WrongLogIn.js",["755","756","757","758","759","760","761","762","763","764","765","766"],"/Users/bernardahn/Documents/GitHub/clip/src/components/KakaoAuth.js",["767","768","769","770","771","772","773","774","775"],"/Users/bernardahn/Documents/GitHub/clip/src/components/NoExistMember.js",["776","777","778","779","780","781","782","783","784","785","786","787"],"/Users/bernardahn/Documents/GitHub/clip/src/components/SentMessage.js",["788","789","790","791","792","793","794","795","796","797","798","799"],{"ruleId":"800","severity":1,"message":"801","line":11,"column":8,"nodeType":"802","messageId":"803","endLine":11,"endColumn":14},{"ruleId":"800","severity":1,"message":"804","line":15,"column":8,"nodeType":"802","messageId":"803","endLine":15,"endColumn":18},{"ruleId":"800","severity":1,"message":"805","line":29,"column":8,"nodeType":"802","messageId":"803","endLine":29,"endColumn":18},{"ruleId":"806","severity":1,"message":"807","line":37,"column":6,"nodeType":"808","endLine":37,"endColumn":45},{"ruleId":"806","severity":1,"message":"807","line":42,"column":4,"nodeType":"808","endLine":42,"endColumn":43},{"ruleId":"806","severity":1,"message":"807","line":45,"column":4,"nodeType":"808","endLine":45,"endColumn":43},{"ruleId":"809","replacedBy":"810"},{"ruleId":"811","replacedBy":"812"},{"ruleId":"800","severity":1,"message":"813","line":4,"column":72,"nodeType":"802","messageId":"803","endLine":4,"endColumn":81},{"ruleId":"800","severity":1,"message":"814","line":4,"column":82,"nodeType":"802","messageId":"803","endLine":4,"endColumn":88},{"ruleId":"800","severity":1,"message":"815","line":4,"column":97,"nodeType":"802","messageId":"803","endLine":4,"endColumn":107},{"ruleId":"800","severity":1,"message":"816","line":4,"column":108,"nodeType":"802","messageId":"803","endLine":4,"endColumn":116},{"ruleId":"800","severity":1,"message":"817","line":6,"column":10,"nodeType":"802","messageId":"803","endLine":6,"endColumn":25},{"ruleId":"800","severity":1,"message":"818","line":11,"column":8,"nodeType":"802","messageId":"803","endLine":11,"endColumn":13},{"ruleId":"800","severity":1,"message":"819","line":12,"column":26,"nodeType":"802","messageId":"803","endLine":12,"endColumn":32},{"ruleId":"800","severity":1,"message":"820","line":12,"column":46,"nodeType":"802","messageId":"803","endLine":12,"endColumn":50},{"ruleId":"800","severity":1,"message":"821","line":28,"column":10,"nodeType":"802","messageId":"803","endLine":28,"endColumn":16},{"ruleId":"800","severity":1,"message":"822","line":41,"column":10,"nodeType":"802","messageId":"803","endLine":41,"endColumn":31},{"ruleId":"800","severity":1,"message":"823","line":41,"column":32,"nodeType":"802","messageId":"803","endLine":41,"endColumn":56},{"ruleId":"800","severity":1,"message":"824","line":61,"column":9,"nodeType":"802","messageId":"803","endLine":61,"endColumn":24},{"ruleId":"825","severity":1,"message":"826","line":70,"column":48,"nodeType":"827","messageId":"828","endLine":70,"endColumn":50},{"ruleId":"825","severity":1,"message":"829","line":71,"column":56,"nodeType":"827","messageId":"828","endLine":71,"endColumn":58},{"ruleId":"800","severity":1,"message":"830","line":94,"column":9,"nodeType":"802","messageId":"803","endLine":94,"endColumn":14},{"ruleId":"825","severity":1,"message":"829","line":109,"column":29,"nodeType":"827","messageId":"828","endLine":109,"endColumn":31},{"ruleId":"825","severity":1,"message":"829","line":159,"column":29,"nodeType":"827","messageId":"828","endLine":159,"endColumn":31},{"ruleId":"825","severity":1,"message":"826","line":215,"column":22,"nodeType":"827","messageId":"828","endLine":215,"endColumn":24},{"ruleId":"800","severity":1,"message":"831","line":224,"column":9,"nodeType":"802","messageId":"803","endLine":224,"endColumn":15},{"ruleId":"800","severity":1,"message":"832","line":261,"column":9,"nodeType":"802","messageId":"803","endLine":261,"endColumn":23},{"ruleId":"833","severity":1,"message":"834","line":290,"column":11,"nodeType":"835","messageId":"828","endLine":290,"endColumn":24},{"ruleId":"825","severity":1,"message":"826","line":306,"column":46,"nodeType":"827","messageId":"828","endLine":306,"endColumn":48},{"ruleId":"825","severity":1,"message":"829","line":308,"column":65,"nodeType":"827","messageId":"828","endLine":308,"endColumn":67},{"ruleId":"825","severity":1,"message":"829","line":338,"column":14,"nodeType":"827","messageId":"828","endLine":338,"endColumn":16},{"ruleId":"836","severity":1,"message":"837","line":450,"column":25,"nodeType":"808","endLine":471,"endColumn":28},{"ruleId":"836","severity":1,"message":"837","line":516,"column":23,"nodeType":"808","endLine":522,"endColumn":24},{"ruleId":"836","severity":1,"message":"837","line":567,"column":23,"nodeType":"808","endLine":573,"endColumn":24},{"ruleId":"825","severity":1,"message":"829","line":632,"column":48,"nodeType":"827","messageId":"828","endLine":632,"endColumn":50},{"ruleId":"806","severity":1,"message":"807","line":649,"column":25,"nodeType":"808","endLine":655,"endColumn":26},{"ruleId":"806","severity":1,"message":"807","line":673,"column":21,"nodeType":"808","endLine":675,"endColumn":22},{"ruleId":"806","severity":1,"message":"807","line":694,"column":21,"nodeType":"808","endLine":700,"endColumn":22},{"ruleId":"825","severity":1,"message":"829","line":827,"column":48,"nodeType":"827","messageId":"828","endLine":827,"endColumn":50},{"ruleId":"806","severity":1,"message":"807","line":844,"column":25,"nodeType":"808","endLine":850,"endColumn":26},{"ruleId":"806","severity":1,"message":"807","line":868,"column":17,"nodeType":"808","endLine":870,"endColumn":18},{"ruleId":"806","severity":1,"message":"807","line":889,"column":17,"nodeType":"808","endLine":895,"endColumn":18},{"ruleId":"806","severity":1,"message":"807","line":1001,"column":19,"nodeType":"808","endLine":1007,"endColumn":20},{"ruleId":"806","severity":1,"message":"807","line":1024,"column":19,"nodeType":"808","endLine":1026,"endColumn":20},{"ruleId":"806","severity":1,"message":"807","line":1045,"column":19,"nodeType":"808","endLine":1051,"endColumn":20},{"ruleId":"825","severity":1,"message":"829","line":1078,"column":20,"nodeType":"827","messageId":"828","endLine":1078,"endColumn":22},{"ruleId":"836","severity":1,"message":"837","line":1196,"column":25,"nodeType":"808","endLine":1217,"endColumn":28},{"ruleId":"836","severity":1,"message":"837","line":1262,"column":23,"nodeType":"808","endLine":1268,"endColumn":24},{"ruleId":"836","severity":1,"message":"837","line":1313,"column":23,"nodeType":"808","endLine":1319,"endColumn":24},{"ruleId":"825","severity":1,"message":"829","line":1378,"column":48,"nodeType":"827","messageId":"828","endLine":1378,"endColumn":50},{"ruleId":"806","severity":1,"message":"807","line":1395,"column":25,"nodeType":"808","endLine":1401,"endColumn":26},{"ruleId":"806","severity":1,"message":"807","line":1419,"column":21,"nodeType":"808","endLine":1421,"endColumn":22},{"ruleId":"806","severity":1,"message":"807","line":1440,"column":21,"nodeType":"808","endLine":1446,"endColumn":22},{"ruleId":"825","severity":1,"message":"829","line":1571,"column":48,"nodeType":"827","messageId":"828","endLine":1571,"endColumn":50},{"ruleId":"806","severity":1,"message":"807","line":1588,"column":25,"nodeType":"808","endLine":1594,"endColumn":26},{"ruleId":"806","severity":1,"message":"807","line":1612,"column":17,"nodeType":"808","endLine":1614,"endColumn":18},{"ruleId":"806","severity":1,"message":"807","line":1633,"column":17,"nodeType":"808","endLine":1639,"endColumn":18},{"ruleId":"806","severity":1,"message":"807","line":1727,"column":21,"nodeType":"808","endLine":1729,"endColumn":22},{"ruleId":"806","severity":1,"message":"807","line":1746,"column":21,"nodeType":"808","endLine":1748,"endColumn":22},{"ruleId":"806","severity":1,"message":"807","line":1767,"column":21,"nodeType":"808","endLine":1773,"endColumn":22},{"ruleId":"836","severity":1,"message":"837","line":1924,"column":25,"nodeType":"808","endLine":1945,"endColumn":28},{"ruleId":"836","severity":1,"message":"837","line":1990,"column":23,"nodeType":"808","endLine":1996,"endColumn":24},{"ruleId":"836","severity":1,"message":"837","line":2041,"column":23,"nodeType":"808","endLine":2047,"endColumn":24},{"ruleId":"825","severity":1,"message":"829","line":2106,"column":48,"nodeType":"827","messageId":"828","endLine":2106,"endColumn":50},{"ruleId":"806","severity":1,"message":"807","line":2123,"column":25,"nodeType":"808","endLine":2129,"endColumn":26},{"ruleId":"806","severity":1,"message":"807","line":2147,"column":21,"nodeType":"808","endLine":2149,"endColumn":22},{"ruleId":"806","severity":1,"message":"807","line":2169,"column":21,"nodeType":"808","endLine":2175,"endColumn":22},{"ruleId":"825","severity":1,"message":"829","line":2281,"column":48,"nodeType":"827","messageId":"828","endLine":2281,"endColumn":50},{"ruleId":"806","severity":1,"message":"807","line":2298,"column":25,"nodeType":"808","endLine":2304,"endColumn":26},{"ruleId":"806","severity":1,"message":"807","line":2322,"column":17,"nodeType":"808","endLine":2324,"endColumn":18},{"ruleId":"806","severity":1,"message":"807","line":2343,"column":17,"nodeType":"808","endLine":2349,"endColumn":18},{"ruleId":"806","severity":1,"message":"807","line":2437,"column":21,"nodeType":"808","endLine":2443,"endColumn":22},{"ruleId":"806","severity":1,"message":"807","line":2460,"column":21,"nodeType":"808","endLine":2462,"endColumn":22},{"ruleId":"806","severity":1,"message":"807","line":2481,"column":21,"nodeType":"808","endLine":2487,"endColumn":22},{"ruleId":"800","severity":1,"message":"838","line":2,"column":8,"nodeType":"802","messageId":"803","endLine":2,"endColumn":12},{"ruleId":"800","severity":1,"message":"839","line":5,"column":8,"nodeType":"802","messageId":"803","endLine":5,"endColumn":14},{"ruleId":"800","severity":1,"message":"840","line":6,"column":8,"nodeType":"802","messageId":"803","endLine":6,"endColumn":15},{"ruleId":"841","severity":1,"message":"842","line":16,"column":9,"nodeType":"843","messageId":"844","endLine":16,"endColumn":39,"fix":"845"},{"ruleId":"800","severity":1,"message":"819","line":16,"column":40,"nodeType":"802","messageId":"803","endLine":16,"endColumn":46},{"ruleId":"800","severity":1,"message":"820","line":16,"column":60,"nodeType":"802","messageId":"803","endLine":16,"endColumn":64},{"ruleId":"809","replacedBy":"846"},{"ruleId":"811","replacedBy":"847"},{"ruleId":"800","severity":1,"message":"840","line":2,"column":8,"nodeType":"802","messageId":"803","endLine":2,"endColumn":15},{"ruleId":"809","replacedBy":"848"},{"ruleId":"811","replacedBy":"849"},{"ruleId":"800","severity":1,"message":"850","line":5,"column":9,"nodeType":"802","messageId":"803","endLine":5,"endColumn":25},{"ruleId":"800","severity":1,"message":"851","line":5,"column":31,"nodeType":"802","messageId":"803","endLine":5,"endColumn":35},{"ruleId":"800","severity":1,"message":"852","line":5,"column":36,"nodeType":"802","messageId":"803","endLine":5,"endColumn":41},{"ruleId":"800","severity":1,"message":"853","line":5,"column":42,"nodeType":"802","messageId":"803","endLine":5,"endColumn":60},{"ruleId":"854","severity":1,"message":"855","line":23,"column":7,"nodeType":"856","endLine":23,"endColumn":9,"suggestions":"857"},{"ruleId":"800","severity":1,"message":"858","line":2,"column":8,"nodeType":"802","messageId":"803","endLine":2,"endColumn":16},{"ruleId":"800","severity":1,"message":"859","line":9,"column":8,"nodeType":"802","messageId":"803","endLine":9,"endColumn":14},{"ruleId":"800","severity":1,"message":"860","line":9,"column":15,"nodeType":"802","messageId":"803","endLine":9,"endColumn":24},{"ruleId":"800","severity":1,"message":"861","line":10,"column":8,"nodeType":"802","messageId":"803","endLine":10,"endColumn":18},{"ruleId":"800","severity":1,"message":"862","line":10,"column":19,"nodeType":"802","messageId":"803","endLine":10,"endColumn":32},{"ruleId":"800","severity":1,"message":"821","line":11,"column":9,"nodeType":"802","messageId":"803","endLine":11,"endColumn":15},{"ruleId":"825","severity":1,"message":"826","line":39,"column":24,"nodeType":"827","messageId":"828","endLine":39,"endColumn":26},{"ruleId":"825","severity":1,"message":"826","line":112,"column":9,"nodeType":"827","messageId":"828","endLine":112,"endColumn":11},{"ruleId":"809","replacedBy":"863"},{"ruleId":"811","replacedBy":"864"},{"ruleId":"800","severity":1,"message":"850","line":4,"column":9,"nodeType":"802","messageId":"803","endLine":4,"endColumn":25},{"ruleId":"800","severity":1,"message":"851","line":4,"column":31,"nodeType":"802","messageId":"803","endLine":4,"endColumn":35},{"ruleId":"800","severity":1,"message":"852","line":4,"column":36,"nodeType":"802","messageId":"803","endLine":4,"endColumn":41},{"ruleId":"800","severity":1,"message":"853","line":4,"column":42,"nodeType":"802","messageId":"803","endLine":4,"endColumn":60},{"ruleId":"800","severity":1,"message":"840","line":3,"column":8,"nodeType":"802","messageId":"803","endLine":3,"endColumn":15},{"ruleId":"800","severity":1,"message":"852","line":5,"column":36,"nodeType":"802","messageId":"803","endLine":5,"endColumn":41},{"ruleId":"800","severity":1,"message":"853","line":5,"column":48,"nodeType":"802","messageId":"803","endLine":5,"endColumn":66},{"ruleId":"800","severity":1,"message":"865","line":23,"column":9,"nodeType":"802","messageId":"803","endLine":23,"endColumn":19},{"ruleId":"800","severity":1,"message":"821","line":28,"column":10,"nodeType":"802","messageId":"803","endLine":28,"endColumn":16},{"ruleId":"825","severity":1,"message":"826","line":76,"column":26,"nodeType":"827","messageId":"828","endLine":76,"endColumn":28},{"ruleId":"825","severity":1,"message":"829","line":84,"column":29,"nodeType":"827","messageId":"828","endLine":84,"endColumn":31},{"ruleId":"825","severity":1,"message":"829","line":85,"column":20,"nodeType":"827","messageId":"828","endLine":85,"endColumn":22},{"ruleId":"854","severity":1,"message":"866","line":95,"column":5,"nodeType":"856","endLine":95,"endColumn":7,"suggestions":"867"},{"ruleId":"825","severity":1,"message":"826","line":209,"column":19,"nodeType":"827","messageId":"828","endLine":209,"endColumn":21},{"ruleId":"806","severity":1,"message":"807","line":528,"column":25,"nodeType":"808","endLine":534,"endColumn":27},{"ruleId":"833","severity":1,"message":"834","line":561,"column":19,"nodeType":"835","messageId":"828","endLine":561,"endColumn":32},{"ruleId":"825","severity":1,"message":"829","line":626,"column":40,"nodeType":"827","messageId":"828","endLine":626,"endColumn":42},{"ruleId":"825","severity":1,"message":"829","line":697,"column":40,"nodeType":"827","messageId":"828","endLine":697,"endColumn":42},{"ruleId":"825","severity":1,"message":"829","line":741,"column":33,"nodeType":"827","messageId":"828","endLine":741,"endColumn":35},{"ruleId":"825","severity":1,"message":"829","line":782,"column":67,"nodeType":"827","messageId":"828","endLine":782,"endColumn":69},{"ruleId":"806","severity":1,"message":"807","line":800,"column":33,"nodeType":"808","endLine":808,"endColumn":38},{"ruleId":"833","severity":1,"message":"834","line":828,"column":27,"nodeType":"835","messageId":"828","endLine":828,"endColumn":40},{"ruleId":"833","severity":1,"message":"834","line":850,"column":31,"nodeType":"835","messageId":"828","endLine":850,"endColumn":44},{"ruleId":"833","severity":1,"message":"834","line":874,"column":27,"nodeType":"835","messageId":"828","endLine":874,"endColumn":40},{"ruleId":"833","severity":1,"message":"834","line":915,"column":19,"nodeType":"835","messageId":"828","endLine":915,"endColumn":32},{"ruleId":"833","severity":1,"message":"834","line":1022,"column":23,"nodeType":"835","messageId":"828","endLine":1022,"endColumn":36},{"ruleId":"806","severity":1,"message":"807","line":1312,"column":27,"nodeType":"808","endLine":1318,"endColumn":29},{"ruleId":"833","severity":1,"message":"834","line":1345,"column":21,"nodeType":"835","messageId":"828","endLine":1345,"endColumn":34},{"ruleId":"825","severity":1,"message":"829","line":1410,"column":46,"nodeType":"827","messageId":"828","endLine":1410,"endColumn":48},{"ruleId":"825","severity":1,"message":"829","line":1481,"column":46,"nodeType":"827","messageId":"828","endLine":1481,"endColumn":48},{"ruleId":"825","severity":1,"message":"829","line":1525,"column":39,"nodeType":"827","messageId":"828","endLine":1525,"endColumn":41},{"ruleId":"833","severity":1,"message":"834","line":1550,"column":29,"nodeType":"835","messageId":"828","endLine":1550,"endColumn":42},{"ruleId":"825","severity":1,"message":"829","line":1565,"column":57,"nodeType":"827","messageId":"828","endLine":1565,"endColumn":59},{"ruleId":"806","severity":1,"message":"807","line":1583,"column":23,"nodeType":"808","endLine":1591,"endColumn":32},{"ruleId":"833","severity":1,"message":"834","line":1611,"column":33,"nodeType":"835","messageId":"828","endLine":1611,"endColumn":46},{"ruleId":"833","severity":1,"message":"834","line":1633,"column":37,"nodeType":"835","messageId":"828","endLine":1633,"endColumn":50},{"ruleId":"833","severity":1,"message":"834","line":1657,"column":33,"nodeType":"835","messageId":"828","endLine":1657,"endColumn":46},{"ruleId":"833","severity":1,"message":"834","line":1867,"column":31,"nodeType":"835","messageId":"828","endLine":1867,"endColumn":44},{"ruleId":"800","severity":1,"message":"852","line":5,"column":42,"nodeType":"802","messageId":"803","endLine":5,"endColumn":47},{"ruleId":"800","severity":1,"message":"853","line":5,"column":48,"nodeType":"802","messageId":"803","endLine":5,"endColumn":66},{"ruleId":"800","severity":1,"message":"821","line":10,"column":12,"nodeType":"802","messageId":"803","endLine":10,"endColumn":18},{"ruleId":"854","severity":1,"message":"868","line":32,"column":9,"nodeType":"856","endLine":32,"endColumn":11,"suggestions":"869"},{"ruleId":"825","severity":1,"message":"826","line":36,"column":16,"nodeType":"827","messageId":"828","endLine":36,"endColumn":18},{"ruleId":"836","severity":1,"message":"837","line":149,"column":21,"nodeType":"808","endLine":155,"endColumn":22},{"ruleId":"833","severity":1,"message":"834","line":179,"column":33,"nodeType":"835","messageId":"828","endLine":179,"endColumn":46},{"ruleId":"833","severity":1,"message":"834","line":204,"column":37,"nodeType":"835","messageId":"828","endLine":204,"endColumn":50},{"ruleId":"833","severity":1,"message":"870","line":205,"column":37,"nodeType":"835","messageId":"828","endLine":205,"endColumn":52},{"ruleId":"833","severity":1,"message":"834","line":237,"column":41,"nodeType":"835","messageId":"828","endLine":237,"endColumn":54},{"ruleId":"825","severity":1,"message":"826","line":288,"column":16,"nodeType":"827","messageId":"828","endLine":288,"endColumn":18},{"ruleId":"836","severity":1,"message":"837","line":390,"column":21,"nodeType":"808","endLine":396,"endColumn":22},{"ruleId":"833","severity":1,"message":"834","line":420,"column":33,"nodeType":"835","messageId":"828","endLine":420,"endColumn":46},{"ruleId":"833","severity":1,"message":"834","line":445,"column":37,"nodeType":"835","messageId":"828","endLine":445,"endColumn":50},{"ruleId":"833","severity":1,"message":"834","line":470,"column":41,"nodeType":"835","messageId":"828","endLine":470,"endColumn":54},{"ruleId":"825","severity":1,"message":"826","line":520,"column":16,"nodeType":"827","messageId":"828","endLine":520,"endColumn":18},{"ruleId":"836","severity":1,"message":"837","line":621,"column":21,"nodeType":"808","endLine":627,"endColumn":22},{"ruleId":"833","severity":1,"message":"834","line":651,"column":33,"nodeType":"835","messageId":"828","endLine":651,"endColumn":46},{"ruleId":"833","severity":1,"message":"834","line":676,"column":37,"nodeType":"835","messageId":"828","endLine":676,"endColumn":50},{"ruleId":"833","severity":1,"message":"834","line":701,"column":41,"nodeType":"835","messageId":"828","endLine":701,"endColumn":54},{"ruleId":"800","severity":1,"message":"852","line":4,"column":42,"nodeType":"802","messageId":"803","endLine":4,"endColumn":47},{"ruleId":"800","severity":1,"message":"853","line":4,"column":48,"nodeType":"802","messageId":"803","endLine":4,"endColumn":66},{"ruleId":"800","severity":1,"message":"821","line":9,"column":12,"nodeType":"802","messageId":"803","endLine":9,"endColumn":18},{"ruleId":"854","severity":1,"message":"871","line":30,"column":9,"nodeType":"856","endLine":30,"endColumn":11,"suggestions":"872"},{"ruleId":"825","severity":1,"message":"826","line":34,"column":16,"nodeType":"827","messageId":"828","endLine":34,"endColumn":18},{"ruleId":"833","severity":1,"message":"873","line":185,"column":33,"nodeType":"835","messageId":"828","endLine":185,"endColumn":46},{"ruleId":"833","severity":1,"message":"834","line":248,"column":33,"nodeType":"835","messageId":"828","endLine":248,"endColumn":46},{"ruleId":"833","severity":1,"message":"834","line":278,"column":37,"nodeType":"835","messageId":"828","endLine":278,"endColumn":50},{"ruleId":"833","severity":1,"message":"834","line":303,"column":41,"nodeType":"835","messageId":"828","endLine":303,"endColumn":54},{"ruleId":"825","severity":1,"message":"826","line":343,"column":16,"nodeType":"827","messageId":"828","endLine":343,"endColumn":18},{"ruleId":"833","severity":1,"message":"873","line":492,"column":29,"nodeType":"835","messageId":"828","endLine":492,"endColumn":42},{"ruleId":"833","severity":1,"message":"834","line":555,"column":33,"nodeType":"835","messageId":"828","endLine":555,"endColumn":46},{"ruleId":"833","severity":1,"message":"834","line":585,"column":37,"nodeType":"835","messageId":"828","endLine":585,"endColumn":50},{"ruleId":"833","severity":1,"message":"834","line":610,"column":41,"nodeType":"835","messageId":"828","endLine":610,"endColumn":54},{"ruleId":"825","severity":1,"message":"826","line":649,"column":16,"nodeType":"827","messageId":"828","endLine":649,"endColumn":18},{"ruleId":"833","severity":1,"message":"873","line":770,"column":33,"nodeType":"835","messageId":"828","endLine":770,"endColumn":46},{"ruleId":"833","severity":1,"message":"834","line":833,"column":33,"nodeType":"835","messageId":"828","endLine":833,"endColumn":46},{"ruleId":"833","severity":1,"message":"834","line":863,"column":37,"nodeType":"835","messageId":"828","endLine":863,"endColumn":50},{"ruleId":"833","severity":1,"message":"834","line":888,"column":41,"nodeType":"835","messageId":"828","endLine":888,"endColumn":54},{"ruleId":"825","severity":1,"message":"826","line":927,"column":16,"nodeType":"827","messageId":"828","endLine":927,"endColumn":18},{"ruleId":"833","severity":1,"message":"873","line":1051,"column":33,"nodeType":"835","messageId":"828","endLine":1051,"endColumn":46},{"ruleId":"833","severity":1,"message":"834","line":1114,"column":33,"nodeType":"835","messageId":"828","endLine":1114,"endColumn":46},{"ruleId":"833","severity":1,"message":"834","line":1144,"column":37,"nodeType":"835","messageId":"828","endLine":1144,"endColumn":50},{"ruleId":"833","severity":1,"message":"834","line":1169,"column":41,"nodeType":"835","messageId":"828","endLine":1169,"endColumn":54},{"ruleId":"800","severity":1,"message":"874","line":1,"column":15,"nodeType":"802","messageId":"803","endLine":1,"endColumn":24},{"ruleId":"800","severity":1,"message":"850","line":2,"column":9,"nodeType":"802","messageId":"803","endLine":2,"endColumn":25},{"ruleId":"833","severity":1,"message":"875","line":44,"column":21,"nodeType":"835","messageId":"828","endLine":44,"endColumn":27},{"ruleId":"833","severity":1,"message":"875","line":56,"column":25,"nodeType":"835","messageId":"828","endLine":56,"endColumn":31},{"ruleId":"833","severity":1,"message":"875","line":78,"column":17,"nodeType":"835","messageId":"828","endLine":78,"endColumn":23},{"ruleId":"833","severity":1,"message":"875","line":89,"column":25,"nodeType":"835","messageId":"828","endLine":89,"endColumn":31},{"ruleId":"833","severity":1,"message":"875","line":107,"column":17,"nodeType":"835","messageId":"828","endLine":107,"endColumn":23},{"ruleId":"833","severity":1,"message":"875","line":118,"column":25,"nodeType":"835","messageId":"828","endLine":118,"endColumn":31},{"ruleId":"833","severity":1,"message":"875","line":136,"column":17,"nodeType":"835","messageId":"828","endLine":136,"endColumn":23},{"ruleId":"833","severity":1,"message":"875","line":147,"column":25,"nodeType":"835","messageId":"828","endLine":147,"endColumn":31},{"ruleId":"833","severity":1,"message":"875","line":163,"column":13,"nodeType":"835","messageId":"828","endLine":163,"endColumn":19},{"ruleId":"833","severity":1,"message":"875","line":294,"column":15,"nodeType":"835","messageId":"828","endLine":294,"endColumn":21},{"ruleId":"800","severity":1,"message":"850","line":4,"column":9,"nodeType":"802","messageId":"803","endLine":4,"endColumn":25},{"ruleId":"800","severity":1,"message":"851","line":4,"column":31,"nodeType":"802","messageId":"803","endLine":4,"endColumn":35},{"ruleId":"800","severity":1,"message":"852","line":4,"column":36,"nodeType":"802","messageId":"803","endLine":4,"endColumn":41},{"ruleId":"800","severity":1,"message":"853","line":4,"column":42,"nodeType":"802","messageId":"803","endLine":4,"endColumn":60},{"ruleId":"800","severity":1,"message":"817","line":8,"column":10,"nodeType":"802","messageId":"803","endLine":8,"endColumn":25},{"ruleId":"800","severity":1,"message":"876","line":9,"column":8,"nodeType":"802","messageId":"803","endLine":9,"endColumn":18},{"ruleId":"800","severity":1,"message":"877","line":10,"column":8,"nodeType":"802","messageId":"803","endLine":10,"endColumn":16},{"ruleId":"800","severity":1,"message":"878","line":11,"column":8,"nodeType":"802","messageId":"803","endLine":11,"endColumn":15},{"ruleId":"800","severity":1,"message":"819","line":12,"column":26,"nodeType":"802","messageId":"803","endLine":12,"endColumn":32},{"ruleId":"800","severity":1,"message":"879","line":12,"column":33,"nodeType":"802","messageId":"803","endLine":12,"endColumn":39},{"ruleId":"800","severity":1,"message":"880","line":12,"column":40,"nodeType":"802","messageId":"803","endLine":12,"endColumn":45},{"ruleId":"800","severity":1,"message":"820","line":12,"column":46,"nodeType":"802","messageId":"803","endLine":12,"endColumn":50},{"ruleId":"800","severity":1,"message":"821","line":18,"column":10,"nodeType":"802","messageId":"803","endLine":18,"endColumn":16},{"ruleId":"800","severity":1,"message":"881","line":19,"column":10,"nodeType":"802","messageId":"803","endLine":19,"endColumn":15},{"ruleId":"800","severity":1,"message":"824","line":30,"column":9,"nodeType":"802","messageId":"803","endLine":30,"endColumn":24},{"ruleId":"800","severity":1,"message":"882","line":33,"column":9,"nodeType":"802","messageId":"803","endLine":33,"endColumn":24},{"ruleId":"800","severity":1,"message":"850","line":4,"column":9,"nodeType":"802","messageId":"803","endLine":4,"endColumn":25},{"ruleId":"800","severity":1,"message":"851","line":4,"column":31,"nodeType":"802","messageId":"803","endLine":4,"endColumn":35},{"ruleId":"800","severity":1,"message":"852","line":4,"column":36,"nodeType":"802","messageId":"803","endLine":4,"endColumn":41},{"ruleId":"800","severity":1,"message":"853","line":4,"column":42,"nodeType":"802","messageId":"803","endLine":4,"endColumn":60},{"ruleId":"800","severity":1,"message":"817","line":8,"column":10,"nodeType":"802","messageId":"803","endLine":8,"endColumn":25},{"ruleId":"800","severity":1,"message":"876","line":9,"column":8,"nodeType":"802","messageId":"803","endLine":9,"endColumn":18},{"ruleId":"800","severity":1,"message":"877","line":10,"column":8,"nodeType":"802","messageId":"803","endLine":10,"endColumn":16},{"ruleId":"800","severity":1,"message":"878","line":11,"column":8,"nodeType":"802","messageId":"803","endLine":11,"endColumn":15},{"ruleId":"800","severity":1,"message":"819","line":12,"column":26,"nodeType":"802","messageId":"803","endLine":12,"endColumn":32},{"ruleId":"800","severity":1,"message":"879","line":12,"column":33,"nodeType":"802","messageId":"803","endLine":12,"endColumn":39},{"ruleId":"800","severity":1,"message":"880","line":12,"column":40,"nodeType":"802","messageId":"803","endLine":12,"endColumn":45},{"ruleId":"800","severity":1,"message":"820","line":12,"column":46,"nodeType":"802","messageId":"803","endLine":12,"endColumn":50},{"ruleId":"800","severity":1,"message":"821","line":18,"column":10,"nodeType":"802","messageId":"803","endLine":18,"endColumn":16},{"ruleId":"800","severity":1,"message":"881","line":19,"column":10,"nodeType":"802","messageId":"803","endLine":19,"endColumn":15},{"ruleId":"800","severity":1,"message":"824","line":30,"column":9,"nodeType":"802","messageId":"803","endLine":30,"endColumn":24},{"ruleId":"800","severity":1,"message":"882","line":33,"column":9,"nodeType":"802","messageId":"803","endLine":33,"endColumn":24},{"ruleId":"800","severity":1,"message":"851","line":2,"column":31,"nodeType":"802","messageId":"803","endLine":2,"endColumn":35},{"ruleId":"800","severity":1,"message":"852","line":2,"column":36,"nodeType":"802","messageId":"803","endLine":2,"endColumn":41},{"ruleId":"800","severity":1,"message":"883","line":2,"column":42,"nodeType":"802","messageId":"803","endLine":2,"endColumn":47},{"ruleId":"800","severity":1,"message":"853","line":2,"column":48,"nodeType":"802","messageId":"803","endLine":2,"endColumn":66},{"ruleId":"800","severity":1,"message":"884","line":5,"column":7,"nodeType":"802","messageId":"803","endLine":5,"endColumn":18},{"ruleId":"800","severity":1,"message":"885","line":10,"column":19,"nodeType":"802","messageId":"803","endLine":10,"endColumn":31},{"ruleId":"800","severity":1,"message":"865","line":11,"column":9,"nodeType":"802","messageId":"803","endLine":11,"endColumn":19},{"ruleId":"800","severity":1,"message":"886","line":11,"column":20,"nodeType":"802","messageId":"803","endLine":11,"endColumn":33},{"ruleId":"800","severity":1,"message":"887","line":12,"column":9,"nodeType":"802","messageId":"803","endLine":12,"endColumn":16},{"ruleId":"800","severity":1,"message":"888","line":12,"column":17,"nodeType":"802","messageId":"803","endLine":12,"endColumn":27},{"ruleId":"800","severity":1,"message":"821","line":13,"column":10,"nodeType":"802","messageId":"803","endLine":13,"endColumn":16},{"ruleId":"800","severity":1,"message":"881","line":14,"column":10,"nodeType":"802","messageId":"803","endLine":14,"endColumn":15},{"ruleId":"806","severity":1,"message":"807","line":124,"column":17,"nodeType":"808","endLine":130,"endColumn":18},{"ruleId":"833","severity":1,"message":"834","line":219,"column":19,"nodeType":"835","messageId":"828","endLine":219,"endColumn":32},{"ruleId":"800","severity":1,"message":"851","line":3,"column":31,"nodeType":"802","messageId":"803","endLine":3,"endColumn":35},{"ruleId":"800","severity":1,"message":"852","line":3,"column":36,"nodeType":"802","messageId":"803","endLine":3,"endColumn":41},{"ruleId":"800","severity":1,"message":"883","line":3,"column":42,"nodeType":"802","messageId":"803","endLine":3,"endColumn":47},{"ruleId":"800","severity":1,"message":"853","line":3,"column":48,"nodeType":"802","messageId":"803","endLine":3,"endColumn":66},{"ruleId":"800","severity":1,"message":"889","line":10,"column":7,"nodeType":"802","messageId":"803","endLine":10,"endColumn":18},{"ruleId":"800","severity":1,"message":"890","line":12,"column":9,"nodeType":"802","messageId":"803","endLine":12,"endColumn":29},{"ruleId":"800","severity":1,"message":"821","line":13,"column":10,"nodeType":"802","messageId":"803","endLine":13,"endColumn":16},{"ruleId":"800","severity":1,"message":"881","line":14,"column":10,"nodeType":"802","messageId":"803","endLine":14,"endColumn":15},{"ruleId":"800","severity":1,"message":"891","line":17,"column":9,"nodeType":"802","messageId":"803","endLine":17,"endColumn":22},{"ruleId":"800","severity":1,"message":"892","line":45,"column":9,"nodeType":"802","messageId":"803","endLine":45,"endColumn":35},{"ruleId":"893","severity":1,"message":"894","line":49,"column":43,"nodeType":"895","messageId":"896","endLine":49,"endColumn":45},{"ruleId":"806","severity":1,"message":"807","line":178,"column":11,"nodeType":"808","endLine":184,"endColumn":12},{"ruleId":"833","severity":1,"message":"834","line":270,"column":13,"nodeType":"835","messageId":"828","endLine":270,"endColumn":26},{"ruleId":"833","severity":1,"message":"834","line":307,"column":15,"nodeType":"835","messageId":"828","endLine":307,"endColumn":28},{"ruleId":"800","severity":1,"message":"840","line":3,"column":8,"nodeType":"802","messageId":"803","endLine":3,"endColumn":15},{"ruleId":"800","severity":1,"message":"852","line":8,"column":36,"nodeType":"802","messageId":"803","endLine":8,"endColumn":41},{"ruleId":"800","severity":1,"message":"853","line":8,"column":48,"nodeType":"802","messageId":"803","endLine":8,"endColumn":66},{"ruleId":"800","severity":1,"message":"897","line":16,"column":8,"nodeType":"802","messageId":"803","endLine":16,"endColumn":14},{"ruleId":"800","severity":1,"message":"898","line":29,"column":9,"nodeType":"802","messageId":"803","endLine":29,"endColumn":22},{"ruleId":"800","severity":1,"message":"899","line":29,"column":23,"nodeType":"802","messageId":"803","endLine":29,"endColumn":39},{"ruleId":"800","severity":1,"message":"865","line":32,"column":9,"nodeType":"802","messageId":"803","endLine":32,"endColumn":19},{"ruleId":"800","severity":1,"message":"886","line":32,"column":20,"nodeType":"802","messageId":"803","endLine":32,"endColumn":33},{"ruleId":"800","severity":1,"message":"887","line":33,"column":9,"nodeType":"802","messageId":"803","endLine":33,"endColumn":16},{"ruleId":"800","severity":1,"message":"888","line":33,"column":17,"nodeType":"802","messageId":"803","endLine":33,"endColumn":27},{"ruleId":"800","severity":1,"message":"821","line":34,"column":10,"nodeType":"802","messageId":"803","endLine":34,"endColumn":16},{"ruleId":"800","severity":1,"message":"881","line":35,"column":10,"nodeType":"802","messageId":"803","endLine":35,"endColumn":15},{"ruleId":"800","severity":1,"message":"900","line":36,"column":10,"nodeType":"802","messageId":"803","endLine":36,"endColumn":17},{"ruleId":"800","severity":1,"message":"901","line":36,"column":19,"nodeType":"802","messageId":"803","endLine":36,"endColumn":29},{"ruleId":"800","severity":1,"message":"902","line":52,"column":18,"nodeType":"802","messageId":"803","endLine":52,"endColumn":28},{"ruleId":"800","severity":1,"message":"903","line":127,"column":9,"nodeType":"802","messageId":"803","endLine":127,"endColumn":17},{"ruleId":"825","severity":1,"message":"826","line":133,"column":24,"nodeType":"827","messageId":"828","endLine":133,"endColumn":26},{"ruleId":"800","severity":1,"message":"904","line":145,"column":9,"nodeType":"802","messageId":"803","endLine":145,"endColumn":24},{"ruleId":"800","severity":1,"message":"905","line":150,"column":9,"nodeType":"802","messageId":"803","endLine":150,"endColumn":27},{"ruleId":"825","severity":1,"message":"829","line":159,"column":24,"nodeType":"827","messageId":"828","endLine":159,"endColumn":26},{"ruleId":"825","severity":1,"message":"829","line":169,"column":29,"nodeType":"827","messageId":"828","endLine":169,"endColumn":31},{"ruleId":"906","severity":1,"message":"907","line":170,"column":13,"nodeType":"802","messageId":"908","endLine":170,"endColumn":20},{"ruleId":"906","severity":1,"message":"909","line":175,"column":13,"nodeType":"802","messageId":"908","endLine":175,"endColumn":20},{"ruleId":"825","severity":1,"message":"829","line":186,"column":24,"nodeType":"827","messageId":"828","endLine":186,"endColumn":26},{"ruleId":"825","severity":1,"message":"829","line":196,"column":29,"nodeType":"827","messageId":"828","endLine":196,"endColumn":31},{"ruleId":"906","severity":1,"message":"907","line":197,"column":13,"nodeType":"802","messageId":"908","endLine":197,"endColumn":20},{"ruleId":"906","severity":1,"message":"909","line":202,"column":13,"nodeType":"802","messageId":"908","endLine":202,"endColumn":20},{"ruleId":"825","severity":1,"message":"829","line":213,"column":24,"nodeType":"827","messageId":"828","endLine":213,"endColumn":26},{"ruleId":"825","severity":1,"message":"829","line":223,"column":29,"nodeType":"827","messageId":"828","endLine":223,"endColumn":31},{"ruleId":"906","severity":1,"message":"907","line":224,"column":13,"nodeType":"802","messageId":"908","endLine":224,"endColumn":20},{"ruleId":"906","severity":1,"message":"909","line":229,"column":13,"nodeType":"802","messageId":"908","endLine":229,"endColumn":20},{"ruleId":"825","severity":1,"message":"829","line":240,"column":24,"nodeType":"827","messageId":"828","endLine":240,"endColumn":26},{"ruleId":"825","severity":1,"message":"829","line":250,"column":29,"nodeType":"827","messageId":"828","endLine":250,"endColumn":31},{"ruleId":"906","severity":1,"message":"910","line":251,"column":13,"nodeType":"802","messageId":"908","endLine":251,"endColumn":25},{"ruleId":"906","severity":1,"message":"909","line":256,"column":13,"nodeType":"802","messageId":"908","endLine":256,"endColumn":20},{"ruleId":"825","severity":1,"message":"829","line":267,"column":24,"nodeType":"827","messageId":"828","endLine":267,"endColumn":26},{"ruleId":"825","severity":1,"message":"829","line":277,"column":29,"nodeType":"827","messageId":"828","endLine":277,"endColumn":31},{"ruleId":"906","severity":1,"message":"911","line":278,"column":13,"nodeType":"802","messageId":"908","endLine":278,"endColumn":27},{"ruleId":"906","severity":1,"message":"909","line":283,"column":13,"nodeType":"802","messageId":"908","endLine":283,"endColumn":20},{"ruleId":"825","severity":1,"message":"826","line":349,"column":19,"nodeType":"827","messageId":"828","endLine":349,"endColumn":21},{"ruleId":"825","severity":1,"message":"826","line":354,"column":26,"nodeType":"827","messageId":"828","endLine":354,"endColumn":28},{"ruleId":"825","severity":1,"message":"829","line":355,"column":48,"nodeType":"827","messageId":"828","endLine":355,"endColumn":50},{"ruleId":"825","severity":1,"message":"829","line":366,"column":29,"nodeType":"827","messageId":"828","endLine":366,"endColumn":31},{"ruleId":"854","severity":1,"message":"866","line":374,"column":5,"nodeType":"856","endLine":374,"endColumn":7,"suggestions":"912"},{"ruleId":"854","severity":1,"message":"913","line":380,"column":5,"nodeType":"856","endLine":380,"endColumn":17,"suggestions":"914"},{"ruleId":"854","severity":1,"message":"915","line":386,"column":5,"nodeType":"856","endLine":386,"endColumn":26,"suggestions":"916"},{"ruleId":"854","severity":1,"message":"913","line":392,"column":5,"nodeType":"856","endLine":392,"endColumn":20,"suggestions":"917"},{"ruleId":"854","severity":1,"message":"913","line":398,"column":5,"nodeType":"856","endLine":398,"endColumn":17,"suggestions":"918"},{"ruleId":"825","severity":1,"message":"826","line":413,"column":26,"nodeType":"827","messageId":"828","endLine":413,"endColumn":28},{"ruleId":"825","severity":1,"message":"829","line":414,"column":49,"nodeType":"827","messageId":"828","endLine":414,"endColumn":51},{"ruleId":"854","severity":1,"message":"866","line":430,"column":3,"nodeType":"856","endLine":430,"endColumn":11,"suggestions":"919"},{"ruleId":"825","severity":1,"message":"826","line":443,"column":30,"nodeType":"827","messageId":"828","endLine":443,"endColumn":32},{"ruleId":"825","severity":1,"message":"829","line":444,"column":53,"nodeType":"827","messageId":"828","endLine":444,"endColumn":55},{"ruleId":"825","severity":1,"message":"826","line":462,"column":22,"nodeType":"827","messageId":"828","endLine":462,"endColumn":24},{"ruleId":"825","severity":1,"message":"826","line":462,"column":55,"nodeType":"827","messageId":"828","endLine":462,"endColumn":57},{"ruleId":"825","severity":1,"message":"829","line":463,"column":12,"nodeType":"827","messageId":"828","endLine":463,"endColumn":14},{"ruleId":"825","severity":1,"message":"829","line":495,"column":49,"nodeType":"827","messageId":"828","endLine":495,"endColumn":51},{"ruleId":"825","severity":1,"message":"829","line":499,"column":40,"nodeType":"827","messageId":"828","endLine":499,"endColumn":42},{"ruleId":"825","severity":1,"message":"829","line":505,"column":43,"nodeType":"827","messageId":"828","endLine":505,"endColumn":45},{"ruleId":"825","severity":1,"message":"829","line":518,"column":49,"nodeType":"827","messageId":"828","endLine":518,"endColumn":51},{"ruleId":"825","severity":1,"message":"829","line":523,"column":40,"nodeType":"827","messageId":"828","endLine":523,"endColumn":42},{"ruleId":"825","severity":1,"message":"829","line":529,"column":43,"nodeType":"827","messageId":"828","endLine":529,"endColumn":45},{"ruleId":"806","severity":1,"message":"807","line":715,"column":37,"nodeType":"808","endLine":724,"endColumn":38},{"ruleId":"806","severity":1,"message":"807","line":726,"column":37,"nodeType":"808","endLine":735,"endColumn":38},{"ruleId":"806","severity":1,"message":"807","line":859,"column":33,"nodeType":"808","endLine":868,"endColumn":34},{"ruleId":"806","severity":1,"message":"807","line":870,"column":33,"nodeType":"808","endLine":879,"endColumn":34},{"ruleId":"806","severity":1,"message":"807","line":998,"column":45,"nodeType":"808","endLine":1007,"endColumn":46},{"ruleId":"806","severity":1,"message":"807","line":1009,"column":45,"nodeType":"808","endLine":1018,"endColumn":46},{"ruleId":"806","severity":1,"message":"807","line":1135,"column":33,"nodeType":"808","endLine":1144,"endColumn":34},{"ruleId":"806","severity":1,"message":"807","line":1146,"column":33,"nodeType":"808","endLine":1155,"endColumn":34},{"ruleId":"806","severity":1,"message":"807","line":1272,"column":37,"nodeType":"808","endLine":1281,"endColumn":38},{"ruleId":"806","severity":1,"message":"807","line":1283,"column":37,"nodeType":"808","endLine":1292,"endColumn":38},{"ruleId":"833","severity":1,"message":"870","line":1443,"column":29,"nodeType":"835","messageId":"828","endLine":1443,"endColumn":44},{"ruleId":"825","severity":1,"message":"829","line":1443,"column":51,"nodeType":"827","messageId":"828","endLine":1443,"endColumn":53},{"ruleId":"825","severity":1,"message":"826","line":1451,"column":54,"nodeType":"827","messageId":"828","endLine":1451,"endColumn":56},{"ruleId":"825","severity":1,"message":"829","line":1476,"column":50,"nodeType":"827","messageId":"828","endLine":1476,"endColumn":52},{"ruleId":"825","severity":1,"message":"829","line":1548,"column":50,"nodeType":"827","messageId":"828","endLine":1548,"endColumn":52},{"ruleId":"825","severity":1,"message":"829","line":1604,"column":37,"nodeType":"827","messageId":"828","endLine":1604,"endColumn":39},{"ruleId":"825","severity":1,"message":"829","line":1646,"column":65,"nodeType":"827","messageId":"828","endLine":1646,"endColumn":67},{"ruleId":"806","severity":1,"message":"807","line":1664,"column":33,"nodeType":"808","endLine":1672,"endColumn":38},{"ruleId":"825","severity":1,"message":"829","line":1680,"column":55,"nodeType":"827","messageId":"828","endLine":1680,"endColumn":57},{"ruleId":"833","severity":1,"message":"834","line":1700,"column":33,"nodeType":"835","messageId":"828","endLine":1700,"endColumn":46},{"ruleId":"825","severity":1,"message":"829","line":1714,"column":59,"nodeType":"827","messageId":"828","endLine":1714,"endColumn":61},{"ruleId":"833","severity":1,"message":"834","line":1768,"column":37,"nodeType":"835","messageId":"828","endLine":1768,"endColumn":50},{"ruleId":"825","severity":1,"message":"829","line":1821,"column":17,"nodeType":"827","messageId":"828","endLine":1821,"endColumn":19},{"ruleId":"825","severity":1,"message":"826","line":1822,"column":25,"nodeType":"827","messageId":"828","endLine":1822,"endColumn":27},{"ruleId":"825","severity":1,"message":"829","line":1853,"column":53,"nodeType":"827","messageId":"828","endLine":1853,"endColumn":55},{"ruleId":"825","severity":1,"message":"829","line":1857,"column":44,"nodeType":"827","messageId":"828","endLine":1857,"endColumn":46},{"ruleId":"825","severity":1,"message":"829","line":1863,"column":47,"nodeType":"827","messageId":"828","endLine":1863,"endColumn":49},{"ruleId":"825","severity":1,"message":"829","line":1876,"column":53,"nodeType":"827","messageId":"828","endLine":1876,"endColumn":55},{"ruleId":"825","severity":1,"message":"829","line":1881,"column":44,"nodeType":"827","messageId":"828","endLine":1881,"endColumn":46},{"ruleId":"825","severity":1,"message":"829","line":1887,"column":47,"nodeType":"827","messageId":"828","endLine":1887,"endColumn":49},{"ruleId":"833","severity":1,"message":"873","line":1936,"column":33,"nodeType":"835","messageId":"828","endLine":1936,"endColumn":46},{"ruleId":"825","severity":1,"message":"826","line":1950,"column":54,"nodeType":"827","messageId":"828","endLine":1950,"endColumn":56},{"ruleId":"800","severity":1,"message":"920","line":1951,"column":41,"nodeType":"802","messageId":"803","endLine":1951,"endColumn":47},{"ruleId":"825","severity":1,"message":"829","line":1978,"column":50,"nodeType":"827","messageId":"828","endLine":1978,"endColumn":52},{"ruleId":"825","severity":1,"message":"829","line":1998,"column":59,"nodeType":"827","messageId":"828","endLine":1998,"endColumn":61},{"ruleId":"833","severity":1,"message":"834","line":2058,"column":37,"nodeType":"835","messageId":"828","endLine":2058,"endColumn":50},{"ruleId":"800","severity":1,"message":"851","line":3,"column":31,"nodeType":"802","messageId":"803","endLine":3,"endColumn":35},{"ruleId":"800","severity":1,"message":"852","line":3,"column":36,"nodeType":"802","messageId":"803","endLine":3,"endColumn":41},{"ruleId":"800","severity":1,"message":"883","line":3,"column":42,"nodeType":"802","messageId":"803","endLine":3,"endColumn":47},{"ruleId":"800","severity":1,"message":"853","line":3,"column":48,"nodeType":"802","messageId":"803","endLine":3,"endColumn":66},{"ruleId":"800","severity":1,"message":"921","line":10,"column":7,"nodeType":"802","messageId":"803","endLine":10,"endColumn":13},{"ruleId":"800","severity":1,"message":"922","line":12,"column":9,"nodeType":"802","messageId":"803","endLine":12,"endColumn":24},{"ruleId":"800","severity":1,"message":"821","line":13,"column":10,"nodeType":"802","messageId":"803","endLine":13,"endColumn":16},{"ruleId":"800","severity":1,"message":"881","line":14,"column":10,"nodeType":"802","messageId":"803","endLine":14,"endColumn":15},{"ruleId":"800","severity":1,"message":"923","line":17,"column":9,"nodeType":"802","messageId":"803","endLine":17,"endColumn":17},{"ruleId":"800","severity":1,"message":"924","line":45,"column":9,"nodeType":"802","messageId":"803","endLine":45,"endColumn":30},{"ruleId":"893","severity":1,"message":"894","line":49,"column":35,"nodeType":"895","messageId":"896","endLine":49,"endColumn":37},{"ruleId":"806","severity":1,"message":"807","line":178,"column":11,"nodeType":"808","endLine":184,"endColumn":12},{"ruleId":"833","severity":1,"message":"834","line":270,"column":13,"nodeType":"835","messageId":"828","endLine":270,"endColumn":26},{"ruleId":"833","severity":1,"message":"834","line":307,"column":15,"nodeType":"835","messageId":"828","endLine":307,"endColumn":28},{"ruleId":"800","severity":1,"message":"925","line":1,"column":8,"nodeType":"802","messageId":"803","endLine":1,"endColumn":13},{"ruleId":"800","severity":1,"message":"851","line":3,"column":31,"nodeType":"802","messageId":"803","endLine":3,"endColumn":35},{"ruleId":"800","severity":1,"message":"852","line":3,"column":36,"nodeType":"802","messageId":"803","endLine":3,"endColumn":41},{"ruleId":"800","severity":1,"message":"883","line":3,"column":42,"nodeType":"802","messageId":"803","endLine":3,"endColumn":47},{"ruleId":"800","severity":1,"message":"853","line":3,"column":48,"nodeType":"802","messageId":"803","endLine":3,"endColumn":66},{"ruleId":"800","severity":1,"message":"926","line":3,"column":67,"nodeType":"802","messageId":"803","endLine":3,"endColumn":74},{"ruleId":"800","severity":1,"message":"927","line":3,"column":75,"nodeType":"802","messageId":"803","endLine":3,"endColumn":85},{"ruleId":"800","severity":1,"message":"818","line":4,"column":8,"nodeType":"802","messageId":"803","endLine":4,"endColumn":13},{"ruleId":"800","severity":1,"message":"884","line":5,"column":7,"nodeType":"802","messageId":"803","endLine":5,"endColumn":18},{"ruleId":"800","severity":1,"message":"928","line":10,"column":26,"nodeType":"802","messageId":"803","endLine":10,"endColumn":43},{"ruleId":"825","severity":1,"message":"826","line":21,"column":28,"nodeType":"827","messageId":"828","endLine":21,"endColumn":30},{"ruleId":"906","severity":1,"message":"929","line":22,"column":21,"nodeType":"802","messageId":"908","endLine":22,"endColumn":22},{"ruleId":"825","severity":1,"message":"826","line":27,"column":40,"nodeType":"827","messageId":"828","endLine":27,"endColumn":42},{"ruleId":"906","severity":1,"message":"929","line":28,"column":21,"nodeType":"802","messageId":"908","endLine":28,"endColumn":22},{"ruleId":"800","severity":1,"message":"930","line":42,"column":11,"nodeType":"802","messageId":"803","endLine":42,"endColumn":25},{"ruleId":"800","severity":1,"message":"931","line":45,"column":11,"nodeType":"802","messageId":"803","endLine":45,"endColumn":26},{"ruleId":"825","severity":1,"message":"826","line":48,"column":15,"nodeType":"827","messageId":"828","endLine":48,"endColumn":17},{"ruleId":"825","severity":1,"message":"829","line":64,"column":38,"nodeType":"827","messageId":"828","endLine":64,"endColumn":40},{"ruleId":"825","severity":1,"message":"829","line":106,"column":51,"nodeType":"827","messageId":"828","endLine":106,"endColumn":53},{"ruleId":"825","severity":1,"message":"829","line":143,"column":48,"nodeType":"827","messageId":"828","endLine":143,"endColumn":50},{"ruleId":"825","severity":1,"message":"829","line":171,"column":38,"nodeType":"827","messageId":"828","endLine":171,"endColumn":40},{"ruleId":"809","replacedBy":"932"},{"ruleId":"811","replacedBy":"933"},{"ruleId":"800","severity":1,"message":"852","line":2,"column":36,"nodeType":"802","messageId":"803","endLine":2,"endColumn":41},{"ruleId":"800","severity":1,"message":"853","line":2,"column":48,"nodeType":"802","messageId":"803","endLine":2,"endColumn":66},{"ruleId":"800","severity":1,"message":"897","line":12,"column":8,"nodeType":"802","messageId":"803","endLine":12,"endColumn":14},{"ruleId":"800","severity":1,"message":"821","line":15,"column":12,"nodeType":"802","messageId":"803","endLine":15,"endColumn":18},{"ruleId":"800","severity":1,"message":"934","line":17,"column":12,"nodeType":"802","messageId":"803","endLine":17,"endColumn":13},{"ruleId":"800","severity":1,"message":"935","line":17,"column":14,"nodeType":"802","messageId":"803","endLine":17,"endColumn":18},{"ruleId":"800","severity":1,"message":"936","line":23,"column":12,"nodeType":"802","messageId":"803","endLine":23,"endColumn":28},{"ruleId":"800","severity":1,"message":"937","line":23,"column":29,"nodeType":"802","messageId":"803","endLine":23,"endColumn":48},{"ruleId":"825","severity":1,"message":"829","line":59,"column":39,"nodeType":"827","messageId":"828","endLine":59,"endColumn":41},{"ruleId":"825","severity":1,"message":"826","line":60,"column":30,"nodeType":"827","messageId":"828","endLine":60,"endColumn":32},{"ruleId":"854","severity":1,"message":"866","line":83,"column":9,"nodeType":"856","endLine":83,"endColumn":11,"suggestions":"938"},{"ruleId":"825","severity":1,"message":"826","line":84,"column":22,"nodeType":"827","messageId":"828","endLine":84,"endColumn":24},{"ruleId":"806","severity":1,"message":"807","line":632,"column":37,"nodeType":"808","endLine":638,"endColumn":39},{"ruleId":"825","severity":1,"message":"829","line":698,"column":43,"nodeType":"827","messageId":"828","endLine":698,"endColumn":45},{"ruleId":"825","severity":1,"message":"829","line":769,"column":43,"nodeType":"827","messageId":"828","endLine":769,"endColumn":45},{"ruleId":"825","severity":1,"message":"829","line":833,"column":36,"nodeType":"827","messageId":"828","endLine":833,"endColumn":38},{"ruleId":"833","severity":1,"message":"834","line":858,"column":23,"nodeType":"835","messageId":"828","endLine":858,"endColumn":36},{"ruleId":"825","severity":1,"message":"829","line":873,"column":85,"nodeType":"827","messageId":"828","endLine":873,"endColumn":87},{"ruleId":"806","severity":1,"message":"807","line":891,"column":29,"nodeType":"808","endLine":899,"endColumn":30},{"ruleId":"833","severity":1,"message":"834","line":919,"column":27,"nodeType":"835","messageId":"828","endLine":919,"endColumn":40},{"ruleId":"833","severity":1,"message":"834","line":941,"column":31,"nodeType":"835","messageId":"828","endLine":941,"endColumn":44},{"ruleId":"833","severity":1,"message":"834","line":965,"column":27,"nodeType":"835","messageId":"828","endLine":965,"endColumn":40},{"ruleId":"825","severity":1,"message":"829","line":1037,"column":43,"nodeType":"827","messageId":"828","endLine":1037,"endColumn":45},{"ruleId":"825","severity":1,"message":"829","line":1108,"column":43,"nodeType":"827","messageId":"828","endLine":1108,"endColumn":45},{"ruleId":"825","severity":1,"message":"829","line":1172,"column":36,"nodeType":"827","messageId":"828","endLine":1172,"endColumn":38},{"ruleId":"833","severity":1,"message":"834","line":1198,"column":23,"nodeType":"835","messageId":"828","endLine":1198,"endColumn":36},{"ruleId":"825","severity":1,"message":"829","line":1213,"column":88,"nodeType":"827","messageId":"828","endLine":1213,"endColumn":90},{"ruleId":"806","severity":1,"message":"807","line":1231,"column":29,"nodeType":"808","endLine":1239,"endColumn":30},{"ruleId":"833","severity":1,"message":"834","line":1259,"column":27,"nodeType":"835","messageId":"828","endLine":1259,"endColumn":40},{"ruleId":"833","severity":1,"message":"834","line":1281,"column":31,"nodeType":"835","messageId":"828","endLine":1281,"endColumn":44},{"ruleId":"833","severity":1,"message":"834","line":1305,"column":27,"nodeType":"835","messageId":"828","endLine":1305,"endColumn":40},{"ruleId":"800","severity":1,"message":"839","line":2,"column":8,"nodeType":"802","messageId":"803","endLine":2,"endColumn":14},{"ruleId":"800","severity":1,"message":"840","line":3,"column":8,"nodeType":"802","messageId":"803","endLine":3,"endColumn":15},{"ruleId":"800","severity":1,"message":"939","line":4,"column":8,"nodeType":"802","messageId":"803","endLine":4,"endColumn":20},{"ruleId":"800","severity":1,"message":"940","line":5,"column":8,"nodeType":"802","messageId":"803","endLine":5,"endColumn":18},{"ruleId":"800","severity":1,"message":"852","line":6,"column":36,"nodeType":"802","messageId":"803","endLine":6,"endColumn":41},{"ruleId":"800","severity":1,"message":"853","line":6,"column":48,"nodeType":"802","messageId":"803","endLine":6,"endColumn":66},{"ruleId":"800","severity":1,"message":"926","line":6,"column":67,"nodeType":"802","messageId":"803","endLine":6,"endColumn":74},{"ruleId":"800","severity":1,"message":"941","line":6,"column":86,"nodeType":"802","messageId":"803","endLine":6,"endColumn":95},{"ruleId":"800","severity":1,"message":"821","line":11,"column":12,"nodeType":"802","messageId":"803","endLine":11,"endColumn":18},{"ruleId":"800","severity":1,"message":"881","line":12,"column":12,"nodeType":"802","messageId":"803","endLine":12,"endColumn":17},{"ruleId":"800","severity":1,"message":"942","line":16,"column":12,"nodeType":"802","messageId":"803","endLine":16,"endColumn":25},{"ruleId":"800","severity":1,"message":"943","line":16,"column":26,"nodeType":"802","messageId":"803","endLine":16,"endColumn":42},{"ruleId":"825","severity":1,"message":"826","line":60,"column":30,"nodeType":"827","messageId":"828","endLine":60,"endColumn":32},{"ruleId":"825","severity":1,"message":"826","line":113,"column":28,"nodeType":"827","messageId":"828","endLine":113,"endColumn":30},{"ruleId":"825","severity":1,"message":"826","line":122,"column":30,"nodeType":"827","messageId":"828","endLine":122,"endColumn":32},{"ruleId":"800","severity":1,"message":"944","line":146,"column":11,"nodeType":"802","messageId":"803","endLine":146,"endColumn":30},{"ruleId":"825","severity":1,"message":"829","line":152,"column":52,"nodeType":"827","messageId":"828","endLine":152,"endColumn":54},{"ruleId":"825","severity":1,"message":"826","line":164,"column":30,"nodeType":"827","messageId":"828","endLine":164,"endColumn":32},{"ruleId":"825","severity":1,"message":"826","line":182,"column":30,"nodeType":"827","messageId":"828","endLine":182,"endColumn":32},{"ruleId":"825","severity":1,"message":"826","line":205,"column":32,"nodeType":"827","messageId":"828","endLine":205,"endColumn":34},{"ruleId":"825","severity":1,"message":"829","line":211,"column":42,"nodeType":"827","messageId":"828","endLine":211,"endColumn":44},{"ruleId":"854","severity":1,"message":"945","line":223,"column":7,"nodeType":"856","endLine":223,"endColumn":22,"suggestions":"946"},{"ruleId":"806","severity":1,"message":"807","line":299,"column":17,"nodeType":"808","endLine":305,"endColumn":18},{"ruleId":"825","severity":1,"message":"829","line":399,"column":61,"nodeType":"827","messageId":"828","endLine":399,"endColumn":63},{"ruleId":"825","severity":1,"message":"829","line":408,"column":51,"nodeType":"827","messageId":"828","endLine":408,"endColumn":53},{"ruleId":"806","severity":1,"message":"807","line":495,"column":17,"nodeType":"808","endLine":501,"endColumn":18},{"ruleId":"825","severity":1,"message":"829","line":536,"column":54,"nodeType":"827","messageId":"828","endLine":536,"endColumn":56},{"ruleId":"825","severity":1,"message":"829","line":555,"column":50,"nodeType":"827","messageId":"828","endLine":555,"endColumn":52},{"ruleId":"800","severity":1,"message":"852","line":2,"column":36,"nodeType":"802","messageId":"803","endLine":2,"endColumn":41},{"ruleId":"800","severity":1,"message":"853","line":2,"column":48,"nodeType":"802","messageId":"803","endLine":2,"endColumn":66},{"ruleId":"800","severity":1,"message":"947","line":7,"column":8,"nodeType":"802","messageId":"803","endLine":7,"endColumn":13},{"ruleId":"800","severity":1,"message":"948","line":8,"column":10,"nodeType":"802","messageId":"803","endLine":8,"endColumn":18},{"ruleId":"800","severity":1,"message":"949","line":9,"column":8,"nodeType":"802","messageId":"803","endLine":9,"endColumn":16},{"ruleId":"800","severity":1,"message":"897","line":12,"column":8,"nodeType":"802","messageId":"803","endLine":12,"endColumn":14},{"ruleId":"800","severity":1,"message":"821","line":15,"column":12,"nodeType":"802","messageId":"803","endLine":15,"endColumn":18},{"ruleId":"800","severity":1,"message":"934","line":17,"column":12,"nodeType":"802","messageId":"803","endLine":17,"endColumn":13},{"ruleId":"800","severity":1,"message":"935","line":17,"column":14,"nodeType":"802","messageId":"803","endLine":17,"endColumn":18},{"ruleId":"800","severity":1,"message":"950","line":23,"column":12,"nodeType":"802","messageId":"803","endLine":23,"endColumn":30},{"ruleId":"800","severity":1,"message":"951","line":23,"column":31,"nodeType":"802","messageId":"803","endLine":23,"endColumn":52},{"ruleId":"800","severity":1,"message":"936","line":25,"column":12,"nodeType":"802","messageId":"803","endLine":25,"endColumn":28},{"ruleId":"800","severity":1,"message":"937","line":25,"column":29,"nodeType":"802","messageId":"803","endLine":25,"endColumn":48},{"ruleId":"825","severity":1,"message":"829","line":62,"column":39,"nodeType":"827","messageId":"828","endLine":62,"endColumn":41},{"ruleId":"825","severity":1,"message":"826","line":63,"column":30,"nodeType":"827","messageId":"828","endLine":63,"endColumn":32},{"ruleId":"854","severity":1,"message":"866","line":77,"column":9,"nodeType":"856","endLine":77,"endColumn":11,"suggestions":"952"},{"ruleId":"825","severity":1,"message":"826","line":78,"column":23,"nodeType":"827","messageId":"828","endLine":78,"endColumn":25},{"ruleId":"825","severity":1,"message":"829","line":315,"column":46,"nodeType":"827","messageId":"828","endLine":315,"endColumn":48},{"ruleId":"825","severity":1,"message":"829","line":433,"column":69,"nodeType":"827","messageId":"828","endLine":433,"endColumn":71},{"ruleId":"825","severity":1,"message":"829","line":433,"column":86,"nodeType":"827","messageId":"828","endLine":433,"endColumn":88},{"ruleId":"825","severity":1,"message":"829","line":504,"column":69,"nodeType":"827","messageId":"828","endLine":504,"endColumn":71},{"ruleId":"825","severity":1,"message":"829","line":504,"column":86,"nodeType":"827","messageId":"828","endLine":504,"endColumn":88},{"ruleId":"825","severity":1,"message":"829","line":573,"column":64,"nodeType":"827","messageId":"828","endLine":573,"endColumn":66},{"ruleId":"825","severity":1,"message":"829","line":573,"column":81,"nodeType":"827","messageId":"828","endLine":573,"endColumn":83},{"ruleId":"825","severity":1,"message":"829","line":610,"column":124,"nodeType":"827","messageId":"828","endLine":610,"endColumn":126},{"ruleId":"806","severity":1,"message":"807","line":628,"column":57,"nodeType":"808","endLine":636,"endColumn":58},{"ruleId":"833","severity":1,"message":"834","line":656,"column":57,"nodeType":"835","messageId":"828","endLine":656,"endColumn":70},{"ruleId":"833","severity":1,"message":"834","line":677,"column":57,"nodeType":"835","messageId":"828","endLine":677,"endColumn":70},{"ruleId":"833","severity":1,"message":"834","line":699,"column":57,"nodeType":"835","messageId":"828","endLine":699,"endColumn":70},{"ruleId":"825","severity":1,"message":"829","line":716,"column":51,"nodeType":"827","messageId":"828","endLine":716,"endColumn":53},{"ruleId":"825","severity":1,"message":"829","line":832,"column":43,"nodeType":"827","messageId":"828","endLine":832,"endColumn":45},{"ruleId":"825","severity":1,"message":"829","line":832,"column":60,"nodeType":"827","messageId":"828","endLine":832,"endColumn":62},{"ruleId":"825","severity":1,"message":"829","line":903,"column":43,"nodeType":"827","messageId":"828","endLine":903,"endColumn":45},{"ruleId":"825","severity":1,"message":"829","line":903,"column":60,"nodeType":"827","messageId":"828","endLine":903,"endColumn":62},{"ruleId":"825","severity":1,"message":"829","line":968,"column":36,"nodeType":"827","messageId":"828","endLine":968,"endColumn":38},{"ruleId":"825","severity":1,"message":"829","line":968,"column":53,"nodeType":"827","messageId":"828","endLine":968,"endColumn":55},{"ruleId":"825","severity":1,"message":"829","line":1010,"column":124,"nodeType":"827","messageId":"828","endLine":1010,"endColumn":126},{"ruleId":"806","severity":1,"message":"807","line":1028,"column":57,"nodeType":"808","endLine":1036,"endColumn":58},{"ruleId":"833","severity":1,"message":"834","line":1056,"column":27,"nodeType":"835","messageId":"828","endLine":1056,"endColumn":40},{"ruleId":"833","severity":1,"message":"834","line":1078,"column":31,"nodeType":"835","messageId":"828","endLine":1078,"endColumn":44},{"ruleId":"833","severity":1,"message":"834","line":1102,"column":27,"nodeType":"835","messageId":"828","endLine":1102,"endColumn":40},{"ruleId":"825","severity":1,"message":"829","line":1229,"column":43,"nodeType":"827","messageId":"828","endLine":1229,"endColumn":45},{"ruleId":"825","severity":1,"message":"829","line":1229,"column":60,"nodeType":"827","messageId":"828","endLine":1229,"endColumn":62},{"ruleId":"825","severity":1,"message":"829","line":1300,"column":43,"nodeType":"827","messageId":"828","endLine":1300,"endColumn":45},{"ruleId":"825","severity":1,"message":"829","line":1300,"column":60,"nodeType":"827","messageId":"828","endLine":1300,"endColumn":62},{"ruleId":"825","severity":1,"message":"829","line":1364,"column":36,"nodeType":"827","messageId":"828","endLine":1364,"endColumn":38},{"ruleId":"825","severity":1,"message":"829","line":1364,"column":53,"nodeType":"827","messageId":"828","endLine":1364,"endColumn":55},{"ruleId":"825","severity":1,"message":"829","line":1405,"column":124,"nodeType":"827","messageId":"828","endLine":1405,"endColumn":126},{"ruleId":"806","severity":1,"message":"807","line":1423,"column":57,"nodeType":"808","endLine":1431,"endColumn":58},{"ruleId":"833","severity":1,"message":"834","line":1451,"column":27,"nodeType":"835","messageId":"828","endLine":1451,"endColumn":40},{"ruleId":"833","severity":1,"message":"834","line":1473,"column":31,"nodeType":"835","messageId":"828","endLine":1473,"endColumn":44},{"ruleId":"833","severity":1,"message":"834","line":1497,"column":27,"nodeType":"835","messageId":"828","endLine":1497,"endColumn":40},{"ruleId":"953","severity":1,"message":"954","line":1517,"column":33,"nodeType":"955","messageId":"956","endLine":1517,"endColumn":56},{"ruleId":"800","severity":1,"message":"839","line":2,"column":8,"nodeType":"802","messageId":"803","endLine":2,"endColumn":14},{"ruleId":"800","severity":1,"message":"840","line":3,"column":8,"nodeType":"802","messageId":"803","endLine":3,"endColumn":15},{"ruleId":"800","severity":1,"message":"939","line":4,"column":8,"nodeType":"802","messageId":"803","endLine":4,"endColumn":20},{"ruleId":"800","severity":1,"message":"940","line":5,"column":8,"nodeType":"802","messageId":"803","endLine":5,"endColumn":18},{"ruleId":"800","severity":1,"message":"852","line":6,"column":36,"nodeType":"802","messageId":"803","endLine":6,"endColumn":41},{"ruleId":"800","severity":1,"message":"853","line":6,"column":48,"nodeType":"802","messageId":"803","endLine":6,"endColumn":66},{"ruleId":"800","severity":1,"message":"926","line":6,"column":67,"nodeType":"802","messageId":"803","endLine":6,"endColumn":74},{"ruleId":"800","severity":1,"message":"941","line":6,"column":86,"nodeType":"802","messageId":"803","endLine":6,"endColumn":95},{"ruleId":"800","severity":1,"message":"821","line":11,"column":12,"nodeType":"802","messageId":"803","endLine":11,"endColumn":18},{"ruleId":"800","severity":1,"message":"881","line":12,"column":12,"nodeType":"802","messageId":"803","endLine":12,"endColumn":17},{"ruleId":"800","severity":1,"message":"942","line":16,"column":12,"nodeType":"802","messageId":"803","endLine":16,"endColumn":25},{"ruleId":"800","severity":1,"message":"943","line":16,"column":26,"nodeType":"802","messageId":"803","endLine":16,"endColumn":42},{"ruleId":"825","severity":1,"message":"826","line":61,"column":30,"nodeType":"827","messageId":"828","endLine":61,"endColumn":32},{"ruleId":"825","severity":1,"message":"826","line":93,"column":28,"nodeType":"827","messageId":"828","endLine":93,"endColumn":30},{"ruleId":"825","severity":1,"message":"826","line":102,"column":30,"nodeType":"827","messageId":"828","endLine":102,"endColumn":32},{"ruleId":"800","severity":1,"message":"944","line":126,"column":11,"nodeType":"802","messageId":"803","endLine":126,"endColumn":30},{"ruleId":"825","severity":1,"message":"829","line":132,"column":52,"nodeType":"827","messageId":"828","endLine":132,"endColumn":54},{"ruleId":"825","severity":1,"message":"826","line":144,"column":30,"nodeType":"827","messageId":"828","endLine":144,"endColumn":32},{"ruleId":"825","severity":1,"message":"826","line":162,"column":30,"nodeType":"827","messageId":"828","endLine":162,"endColumn":32},{"ruleId":"825","severity":1,"message":"826","line":186,"column":32,"nodeType":"827","messageId":"828","endLine":186,"endColumn":34},{"ruleId":"825","severity":1,"message":"829","line":194,"column":43,"nodeType":"827","messageId":"828","endLine":194,"endColumn":45},{"ruleId":"854","severity":1,"message":"957","line":206,"column":7,"nodeType":"856","endLine":206,"endColumn":22,"suggestions":"958"},{"ruleId":"806","severity":1,"message":"807","line":282,"column":17,"nodeType":"808","endLine":288,"endColumn":18},{"ruleId":"825","severity":1,"message":"829","line":382,"column":61,"nodeType":"827","messageId":"828","endLine":382,"endColumn":63},{"ruleId":"825","severity":1,"message":"829","line":391,"column":51,"nodeType":"827","messageId":"828","endLine":391,"endColumn":53},{"ruleId":"806","severity":1,"message":"807","line":478,"column":17,"nodeType":"808","endLine":484,"endColumn":18},{"ruleId":"825","severity":1,"message":"829","line":519,"column":54,"nodeType":"827","messageId":"828","endLine":519,"endColumn":56},{"ruleId":"825","severity":1,"message":"829","line":538,"column":50,"nodeType":"827","messageId":"828","endLine":538,"endColumn":52},{"ruleId":"809","replacedBy":"959"},{"ruleId":"811","replacedBy":"960"},{"ruleId":"800","severity":1,"message":"839","line":2,"column":8,"nodeType":"802","messageId":"803","endLine":2,"endColumn":14},{"ruleId":"800","severity":1,"message":"840","line":3,"column":8,"nodeType":"802","messageId":"803","endLine":3,"endColumn":15},{"ruleId":"800","severity":1,"message":"939","line":4,"column":8,"nodeType":"802","messageId":"803","endLine":4,"endColumn":20},{"ruleId":"800","severity":1,"message":"940","line":5,"column":8,"nodeType":"802","messageId":"803","endLine":5,"endColumn":18},{"ruleId":"800","severity":1,"message":"852","line":6,"column":36,"nodeType":"802","messageId":"803","endLine":6,"endColumn":41},{"ruleId":"800","severity":1,"message":"853","line":6,"column":48,"nodeType":"802","messageId":"803","endLine":6,"endColumn":66},{"ruleId":"800","severity":1,"message":"926","line":6,"column":67,"nodeType":"802","messageId":"803","endLine":6,"endColumn":74},{"ruleId":"800","severity":1,"message":"941","line":6,"column":86,"nodeType":"802","messageId":"803","endLine":6,"endColumn":95},{"ruleId":"800","severity":1,"message":"821","line":17,"column":12,"nodeType":"802","messageId":"803","endLine":17,"endColumn":18},{"ruleId":"800","severity":1,"message":"881","line":18,"column":12,"nodeType":"802","messageId":"803","endLine":18,"endColumn":17},{"ruleId":"800","severity":1,"message":"961","line":19,"column":11,"nodeType":"802","messageId":"803","endLine":19,"endColumn":24},{"ruleId":"800","severity":1,"message":"962","line":19,"column":25,"nodeType":"802","messageId":"803","endLine":19,"endColumn":41},{"ruleId":"800","severity":1,"message":"963","line":20,"column":12,"nodeType":"802","messageId":"803","endLine":20,"endColumn":30},{"ruleId":"800","severity":1,"message":"964","line":20,"column":31,"nodeType":"802","messageId":"803","endLine":20,"endColumn":52},{"ruleId":"800","severity":1,"message":"942","line":22,"column":12,"nodeType":"802","messageId":"803","endLine":22,"endColumn":25},{"ruleId":"800","severity":1,"message":"943","line":22,"column":26,"nodeType":"802","messageId":"803","endLine":22,"endColumn":42},{"ruleId":"800","severity":1,"message":"965","line":25,"column":12,"nodeType":"802","messageId":"803","endLine":25,"endColumn":22},{"ruleId":"800","severity":1,"message":"966","line":25,"column":23,"nodeType":"802","messageId":"803","endLine":25,"endColumn":36},{"ruleId":"800","severity":1,"message":"967","line":26,"column":12,"nodeType":"802","messageId":"803","endLine":26,"endColumn":28},{"ruleId":"800","severity":1,"message":"968","line":26,"column":29,"nodeType":"802","messageId":"803","endLine":26,"endColumn":48},{"ruleId":"800","severity":1,"message":"969","line":38,"column":11,"nodeType":"802","messageId":"803","endLine":38,"endColumn":19},{"ruleId":"800","severity":1,"message":"970","line":73,"column":11,"nodeType":"802","messageId":"803","endLine":73,"endColumn":21},{"ruleId":"825","severity":1,"message":"826","line":154,"column":30,"nodeType":"827","messageId":"828","endLine":154,"endColumn":32},{"ruleId":"825","severity":1,"message":"826","line":155,"column":53,"nodeType":"827","messageId":"828","endLine":155,"endColumn":55},{"ruleId":"854","severity":1,"message":"971","line":171,"column":7,"nodeType":"856","endLine":171,"endColumn":9,"suggestions":"972"},{"ruleId":"825","severity":1,"message":"829","line":175,"column":27,"nodeType":"827","messageId":"828","endLine":175,"endColumn":29},{"ruleId":"806","severity":1,"message":"807","line":250,"column":25,"nodeType":"808","endLine":256,"endColumn":26},{"ruleId":"825","severity":1,"message":"826","line":458,"column":54,"nodeType":"827","messageId":"828","endLine":458,"endColumn":56},{"ruleId":"825","severity":1,"message":"826","line":459,"column":77,"nodeType":"827","messageId":"828","endLine":459,"endColumn":79},{"ruleId":"825","severity":1,"message":"829","line":519,"column":30,"nodeType":"827","messageId":"828","endLine":519,"endColumn":32},{"ruleId":"800","severity":1,"message":"839","line":2,"column":8,"nodeType":"802","messageId":"803","endLine":2,"endColumn":14},{"ruleId":"800","severity":1,"message":"840","line":3,"column":8,"nodeType":"802","messageId":"803","endLine":3,"endColumn":15},{"ruleId":"800","severity":1,"message":"939","line":4,"column":8,"nodeType":"802","messageId":"803","endLine":4,"endColumn":20},{"ruleId":"800","severity":1,"message":"940","line":5,"column":8,"nodeType":"802","messageId":"803","endLine":5,"endColumn":18},{"ruleId":"800","severity":1,"message":"852","line":6,"column":36,"nodeType":"802","messageId":"803","endLine":6,"endColumn":41},{"ruleId":"800","severity":1,"message":"883","line":6,"column":42,"nodeType":"802","messageId":"803","endLine":6,"endColumn":47},{"ruleId":"800","severity":1,"message":"926","line":6,"column":67,"nodeType":"802","messageId":"803","endLine":6,"endColumn":74},{"ruleId":"800","severity":1,"message":"941","line":6,"column":86,"nodeType":"802","messageId":"803","endLine":6,"endColumn":95},{"ruleId":"800","severity":1,"message":"884","line":8,"column":7,"nodeType":"802","messageId":"803","endLine":8,"endColumn":18},{"ruleId":"800","severity":1,"message":"821","line":11,"column":12,"nodeType":"802","messageId":"803","endLine":11,"endColumn":18},{"ruleId":"800","severity":1,"message":"881","line":12,"column":12,"nodeType":"802","messageId":"803","endLine":12,"endColumn":17},{"ruleId":"800","severity":1,"message":"973","line":19,"column":11,"nodeType":"802","messageId":"803","endLine":19,"endColumn":24},{"ruleId":"806","severity":1,"message":"807","line":117,"column":17,"nodeType":"808","endLine":123,"endColumn":18},{"ruleId":"800","severity":1,"message":"852","line":7,"column":36,"nodeType":"802","messageId":"803","endLine":7,"endColumn":41},{"ruleId":"800","severity":1,"message":"883","line":7,"column":42,"nodeType":"802","messageId":"803","endLine":7,"endColumn":47},{"ruleId":"800","severity":1,"message":"926","line":7,"column":48,"nodeType":"802","messageId":"803","endLine":7,"endColumn":55},{"ruleId":"800","severity":1,"message":"821","line":21,"column":12,"nodeType":"802","messageId":"803","endLine":21,"endColumn":18},{"ruleId":"800","severity":1,"message":"881","line":22,"column":12,"nodeType":"802","messageId":"803","endLine":22,"endColumn":17},{"ruleId":"800","severity":1,"message":"974","line":27,"column":12,"nodeType":"802","messageId":"803","endLine":27,"endColumn":25},{"ruleId":"825","severity":1,"message":"829","line":51,"column":31,"nodeType":"827","messageId":"828","endLine":51,"endColumn":33},{"ruleId":"825","severity":1,"message":"829","line":55,"column":36,"nodeType":"827","messageId":"828","endLine":55,"endColumn":38},{"ruleId":"800","severity":1,"message":"975","line":83,"column":11,"nodeType":"802","messageId":"803","endLine":83,"endColumn":35},{"ruleId":"825","severity":1,"message":"826","line":398,"column":31,"nodeType":"827","messageId":"828","endLine":398,"endColumn":33},{"ruleId":"825","severity":1,"message":"829","line":399,"column":30,"nodeType":"827","messageId":"828","endLine":399,"endColumn":32},{"ruleId":"825","severity":1,"message":"829","line":672,"column":59,"nodeType":"827","messageId":"828","endLine":672,"endColumn":61},{"ruleId":"825","severity":1,"message":"829","line":715,"column":35,"nodeType":"827","messageId":"828","endLine":715,"endColumn":37},{"ruleId":"800","severity":1,"message":"976","line":1024,"column":37,"nodeType":"802","messageId":"803","endLine":1024,"endColumn":41},{"ruleId":"825","severity":1,"message":"826","line":1025,"column":59,"nodeType":"827","messageId":"828","endLine":1025,"endColumn":61},{"ruleId":"825","severity":1,"message":"829","line":1027,"column":71,"nodeType":"827","messageId":"828","endLine":1027,"endColumn":73},{"ruleId":"825","severity":1,"message":"829","line":1056,"column":36,"nodeType":"827","messageId":"828","endLine":1056,"endColumn":38},{"ruleId":"806","severity":1,"message":"807","line":1438,"column":29,"nodeType":"808","endLine":1442,"endColumn":34},{"ruleId":"806","severity":1,"message":"807","line":1449,"column":29,"nodeType":"808","endLine":1453,"endColumn":34},{"ruleId":"806","severity":1,"message":"807","line":1563,"column":37,"nodeType":"808","endLine":1567,"endColumn":42},{"ruleId":"806","severity":1,"message":"807","line":1574,"column":37,"nodeType":"808","endLine":1578,"endColumn":42},{"ruleId":"806","severity":1,"message":"807","line":1771,"column":17,"nodeType":"808","endLine":1777,"endColumn":18},{"ruleId":"806","severity":1,"message":"807","line":1907,"column":29,"nodeType":"808","endLine":1911,"endColumn":34},{"ruleId":"806","severity":1,"message":"807","line":1918,"column":29,"nodeType":"808","endLine":1922,"endColumn":34},{"ruleId":"800","severity":1,"message":"839","line":2,"column":8,"nodeType":"802","messageId":"803","endLine":2,"endColumn":14},{"ruleId":"800","severity":1,"message":"840","line":3,"column":8,"nodeType":"802","messageId":"803","endLine":3,"endColumn":15},{"ruleId":"800","severity":1,"message":"939","line":4,"column":8,"nodeType":"802","messageId":"803","endLine":4,"endColumn":20},{"ruleId":"800","severity":1,"message":"940","line":5,"column":8,"nodeType":"802","messageId":"803","endLine":5,"endColumn":18},{"ruleId":"800","severity":1,"message":"852","line":6,"column":36,"nodeType":"802","messageId":"803","endLine":6,"endColumn":41},{"ruleId":"800","severity":1,"message":"883","line":6,"column":42,"nodeType":"802","messageId":"803","endLine":6,"endColumn":47},{"ruleId":"800","severity":1,"message":"926","line":6,"column":48,"nodeType":"802","messageId":"803","endLine":6,"endColumn":55},{"ruleId":"800","severity":1,"message":"813","line":6,"column":67,"nodeType":"802","messageId":"803","endLine":6,"endColumn":76},{"ruleId":"800","severity":1,"message":"884","line":9,"column":7,"nodeType":"802","messageId":"803","endLine":9,"endColumn":18},{"ruleId":"800","severity":1,"message":"821","line":12,"column":12,"nodeType":"802","messageId":"803","endLine":12,"endColumn":18},{"ruleId":"800","severity":1,"message":"881","line":13,"column":12,"nodeType":"802","messageId":"803","endLine":13,"endColumn":17},{"ruleId":"806","severity":1,"message":"807","line":93,"column":17,"nodeType":"808","endLine":99,"endColumn":18},{"ruleId":"800","severity":1,"message":"850","line":3,"column":9,"nodeType":"802","messageId":"803","endLine":3,"endColumn":25},{"ruleId":"800","severity":1,"message":"851","line":3,"column":31,"nodeType":"802","messageId":"803","endLine":3,"endColumn":35},{"ruleId":"800","severity":1,"message":"852","line":3,"column":36,"nodeType":"802","messageId":"803","endLine":3,"endColumn":41},{"ruleId":"800","severity":1,"message":"883","line":3,"column":42,"nodeType":"802","messageId":"803","endLine":3,"endColumn":47},{"ruleId":"800","severity":1,"message":"926","line":3,"column":48,"nodeType":"802","messageId":"803","endLine":3,"endColumn":55},{"ruleId":"800","severity":1,"message":"927","line":3,"column":56,"nodeType":"802","messageId":"803","endLine":3,"endColumn":66},{"ruleId":"800","severity":1,"message":"813","line":3,"column":67,"nodeType":"802","messageId":"803","endLine":3,"endColumn":76},{"ruleId":"800","severity":1,"message":"977","line":9,"column":10,"nodeType":"802","messageId":"803","endLine":9,"endColumn":17},{"ruleId":"800","severity":1,"message":"978","line":9,"column":19,"nodeType":"802","messageId":"803","endLine":9,"endColumn":29},{"ruleId":"800","severity":1,"message":"839","line":2,"column":8,"nodeType":"802","messageId":"803","endLine":2,"endColumn":14},{"ruleId":"800","severity":1,"message":"840","line":3,"column":8,"nodeType":"802","messageId":"803","endLine":3,"endColumn":15},{"ruleId":"800","severity":1,"message":"939","line":4,"column":8,"nodeType":"802","messageId":"803","endLine":4,"endColumn":20},{"ruleId":"800","severity":1,"message":"940","line":5,"column":8,"nodeType":"802","messageId":"803","endLine":5,"endColumn":18},{"ruleId":"800","severity":1,"message":"852","line":6,"column":36,"nodeType":"802","messageId":"803","endLine":6,"endColumn":41},{"ruleId":"800","severity":1,"message":"883","line":6,"column":42,"nodeType":"802","messageId":"803","endLine":6,"endColumn":47},{"ruleId":"800","severity":1,"message":"926","line":6,"column":48,"nodeType":"802","messageId":"803","endLine":6,"endColumn":55},{"ruleId":"800","severity":1,"message":"813","line":6,"column":67,"nodeType":"802","messageId":"803","endLine":6,"endColumn":76},{"ruleId":"800","severity":1,"message":"884","line":9,"column":7,"nodeType":"802","messageId":"803","endLine":9,"endColumn":18},{"ruleId":"800","severity":1,"message":"821","line":12,"column":12,"nodeType":"802","messageId":"803","endLine":12,"endColumn":18},{"ruleId":"800","severity":1,"message":"881","line":13,"column":12,"nodeType":"802","messageId":"803","endLine":13,"endColumn":17},{"ruleId":"806","severity":1,"message":"807","line":93,"column":17,"nodeType":"808","endLine":99,"endColumn":18},{"ruleId":"800","severity":1,"message":"839","line":2,"column":8,"nodeType":"802","messageId":"803","endLine":2,"endColumn":14},{"ruleId":"800","severity":1,"message":"840","line":3,"column":8,"nodeType":"802","messageId":"803","endLine":3,"endColumn":15},{"ruleId":"800","severity":1,"message":"939","line":4,"column":8,"nodeType":"802","messageId":"803","endLine":4,"endColumn":20},{"ruleId":"800","severity":1,"message":"940","line":5,"column":8,"nodeType":"802","messageId":"803","endLine":5,"endColumn":18},{"ruleId":"800","severity":1,"message":"852","line":6,"column":36,"nodeType":"802","messageId":"803","endLine":6,"endColumn":41},{"ruleId":"800","severity":1,"message":"883","line":6,"column":42,"nodeType":"802","messageId":"803","endLine":6,"endColumn":47},{"ruleId":"800","severity":1,"message":"926","line":6,"column":48,"nodeType":"802","messageId":"803","endLine":6,"endColumn":55},{"ruleId":"800","severity":1,"message":"813","line":6,"column":67,"nodeType":"802","messageId":"803","endLine":6,"endColumn":76},{"ruleId":"800","severity":1,"message":"884","line":9,"column":7,"nodeType":"802","messageId":"803","endLine":9,"endColumn":18},{"ruleId":"800","severity":1,"message":"821","line":12,"column":12,"nodeType":"802","messageId":"803","endLine":12,"endColumn":18},{"ruleId":"800","severity":1,"message":"881","line":13,"column":12,"nodeType":"802","messageId":"803","endLine":13,"endColumn":17},{"ruleId":"806","severity":1,"message":"807","line":93,"column":17,"nodeType":"808","endLine":99,"endColumn":18},"no-unused-vars","'filler' is assigned a value but never used.","Identifier","unusedVar","'introImage' is assigned a value but never used.","'howItWorks' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["979"],"no-negated-in-lhs",["980"],"'TextInput' is defined but never used.","'Picker' is defined but never used.","'ScrollView' is defined but never used.","'FlatList' is defined but never used.","'nativeTouchData' is defined but never used.","'xIcon' is defined but never used.","'Router' is defined but never used.","'Link' is defined but never used.","'height' is assigned a value but never used.","'brandsDropDownDisplay' is assigned a value but never used.","'setBrandsDropDownDisplay' is assigned a value but never used.","'toggleUserModal' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'login' is assigned a value but never used.","'brands' is assigned a value but never used.","'brandRenderRow' is assigned a value but never used.","no-dupe-keys","Duplicate key 'pointerEvents'.","ObjectExpression","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'logo' is defined but never used.","'Navbar' is defined but never used.","'Content' is defined but never used.","no-useless-rename","Import BrowserRouter unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"981","text":"982"},["979"],["980"],["979"],["980"],"'TouchableOpacity' is defined but never used.","'View' is defined but never used.","'Modal' is defined but never used.","'TouchableHighlight' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'props.location.search'. Either include them or remove the dependency array.","ArrayExpression",["983"],"'IntroImg' is defined but never used.","'banner' is assigned a value but never used.","'setBanner' is assigned a value but never used.","'bannerData' is assigned a value but never used.","'setBannerData' is assigned a value but never used.",["979"],["980"],"'detailView' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.location.search'. Either include it or remove the dependency array.",["984"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["985"],"Duplicate key 'backgroundColor'.","React Hook useEffect has a missing dependency: 'data.listCategory'. Either include it or remove the dependency array.",["986"],"Duplicate key 'flexDirection'.","'useEffect' is defined but never used.","Duplicate key 'height'.","'searchIcon' is defined but never used.","'userIcon' is defined but never used.","'boxIcon' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'width' is assigned a value but never used.","'toggleCartModal' is assigned a value but never used.","'Image' is defined but never used.","'queryString' is assigned a value but never used.","'setBrandData' is assigned a value but never used.","'setDetailView' is assigned a value but never used.","'brandId' is assigned a value but never used.","'setBrandId' is assigned a value but never used.","'subCategory' is assigned a value but never used.","'detailedCategoryData' is assigned a value but never used.","'outerCategory' is assigned a value but never used.","'detailedCategoryDataObject' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'clipOn' is defined but never used.","'brandListData' is assigned a value but never used.","'setBrandListData' is assigned a value but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'setEndPage' is assigned a value but never used.","'onScroll' is assigned a value but never used.","'checkboxClicked' is assigned a value but never used.","'sortMethodSelected' is assigned a value but never used.","no-redeclare","'numbers' is already defined.","redeclared","'filterQ' is already defined.","'colorStrings' is already defined.","'patternStrings' is already defined.",["987"],"React Hook useEffect has a missing dependency: 'filter'. Either include it or remove the dependency array.",["988"],"React Hook useEffect has a missing dependency: 'moodboardFilter'. Either include it or remove the dependency array.",["989"],["990"],["991"],["992"],"'mem_no' is assigned a value but never used.","'subUse' is assigned a value but never used.","'detailedUseData' is assigned a value but never used.","'outerUse' is assigned a value but never used.","'detailedUseDataObject' is assigned a value but never used.","'fetch' is defined but never used.","'Linking' is defined but never used.","'Dimensions' is defined but never used.","'setPageNeighbours' is assigned a value but never used.","'i' is already defined.","'handleMoveLeft' is assigned a value but never used.","'handleMoveRight' is assigned a value but never used.",["979"],["980"],"'q' is assigned a value but never used.","'setQ' is assigned a value but never used.","'refreshClipboard' is assigned a value but never used.","'setRefreshClipboard' is assigned a value but never used.",["993"],"'NavBarFiller' is defined but never used.","'Pagination' is defined but never used.","'textInput' is defined but never used.","'boardBuilding' is assigned a value but never used.","'setBoardBuilding' is assigned a value but never used.","'materialNumberMatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkButtonChecked' and 'props.material_num'. Either include them or remove the dependency array.",["994"],"'parse' is defined but never used.","'Carousel' is defined but never used.","'chatIcon' is defined but never used.","'moodboardClipBoard' is assigned a value but never used.","'setMoodboardClipBoard' is assigned a value but never used.",["995"],"no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","React Hook useEffect has missing dependencies: 'checkButtonChecked' and 'props.moodboard_num'. Either include them or remove the dependency array.",["996"],["979"],["980"],"'clipBoardData' is assigned a value but never used.","'setClipBoardData' is assigned a value but never used.","'checkButtonChecked' is assigned a value but never used.","'setCheckButtonChecked' is assigned a value but never used.","'inputValue' is assigned a value but never used.","'setInputValue' is assigned a value but never used.","'makeButtonEnable' is assigned a value but never used.","'setMakeButtonEnable' is assigned a value but never used.","'onChange' is assigned a value but never used.","'dateChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.material_data'. Either include it or remove the dependency array.",["997"],"'clipBoardInfo' is assigned a value but never used.","'passwordPopUp' is assigned a value but never used.","'checkExistMemberFunction' is assigned a value but never used.","'temp' is assigned a value but never used.","'profile' is assigned a value but never used.","'setProfile' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[675,705],"BrowserRouter",{"desc":"998","fix":"999"},{"desc":"1000","fix":"1001"},{"desc":"1002","fix":"1003"},{"desc":"1004","fix":"1005"},{"desc":"1000","fix":"1006"},{"desc":"1007","fix":"1008"},{"desc":"1009","fix":"1010"},{"desc":"1011","fix":"1012"},{"desc":"1013","fix":"1014"},{"desc":"1015","fix":"1016"},{"desc":"1000","fix":"1017"},{"desc":"1018","fix":"1019"},{"desc":"1000","fix":"1020"},{"desc":"1021","fix":"1022"},{"desc":"1023","fix":"1024"},"Update the dependencies array to be: [data, props.location.search]",{"range":"1025","text":"1026"},"Update the dependencies array to be: [props.location.search]",{"range":"1027","text":"1028"},"Update the dependencies array to be: [data]",{"range":"1029","text":"1030"},"Update the dependencies array to be: [data.listCategory]",{"range":"1031","text":"1032"},{"range":"1033","text":"1028"},"Update the dependencies array to be: [activePage, filter]",{"range":"1034","text":"1035"},"Update the dependencies array to be: [moodboardActivePage, moodboardFilter]",{"range":"1036","text":"1037"},"Update the dependencies array to be: [filter, materialScope]",{"range":"1038","text":"1039"},"Update the dependencies array to be: [filter, sortMethod]",{"range":"1040","text":"1041"},"Update the dependencies array to be: [filter, props.location.search]",{"range":"1042","text":"1043"},{"range":"1044","text":"1028"},"Update the dependencies array to be: [checkButtonChecked, clipBoardData, props.material_num]",{"range":"1045","text":"1046"},{"range":"1047","text":"1028"},"Update the dependencies array to be: [checkButtonChecked, clipBoardData, props.moodboard_num]",{"range":"1048","text":"1049"},"Update the dependencies array to be: [props.material_data]",{"range":"1050","text":"1051"},[685,687],"[data, props.location.search]",[2997,2999],"[props.location.search]",[1124,1126],"[data]",[1106,1108],"[data.listCategory]",[12316,12318],[12449,12461],"[activePage, filter]",[12655,12676],"[moodboardActivePage, moodboardFilter]",[12793,12808],"[filter, materialScope]",[12919,12931],"[filter, sortMethod]",[14077,14085],"[filter, props.location.search]",[3013,3015],[7682,7697],"[checkButtonChecked, clipBoardData, props.material_num]",[2844,2846],[6961,6976],"[checkButtonChecked, clipBoardData, props.moodboard_num]",[6014,6016],"[props.material_data]"]