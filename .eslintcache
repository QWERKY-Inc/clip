[{"/Users/bernardahn/Documents/GitHub/clip/src/reportWebVitals.js":"1","/Users/bernardahn/Documents/GitHub/clip/src/components/Content.js":"2","/Users/bernardahn/Documents/GitHub/clip/src/components/Navbar.js":"3","/Users/bernardahn/Documents/GitHub/clip/src/App.js":"4","/Users/bernardahn/Documents/GitHub/clip/src/index.js":"5","/Users/bernardahn/Documents/GitHub/clip/src/components/Home.js":"6","/Users/bernardahn/Documents/GitHub/clip/src/components/Category.js":"7","/Users/bernardahn/Documents/GitHub/clip/src/components/NavBarFiller.js":"8","/Users/bernardahn/Documents/GitHub/clip/src/components/ConstructionPart.js":"9","/Users/bernardahn/Documents/GitHub/clip/src/components/Brands.js":"10","/Users/bernardahn/Documents/GitHub/clip/src/components/MainMaterialCategory.js":"11","/Users/bernardahn/Documents/GitHub/clip/src/components/MainMoodBoard.js":"12","/Users/bernardahn/Documents/GitHub/clip/src/components/Footer.js":"13","/Users/bernardahn/Documents/GitHub/clip/src/components/PrivacyPolicy.js":"14","/Users/bernardahn/Documents/GitHub/clip/src/components/Terms.js":"15","/Users/bernardahn/Documents/GitHub/clip/src/components/BrandsDropDown.js":"16","/Users/bernardahn/Documents/GitHub/clip/src/components/CategoryDropDown.js":"17","/Users/bernardahn/Documents/GitHub/clip/src/components/SearchPage.js":"18","/Users/bernardahn/Documents/GitHub/clip/src/components/UseDropDown.js":"19","/Users/bernardahn/Documents/GitHub/clip/src/components/Pagination.js":"20","/Users/bernardahn/Documents/GitHub/clip/src/components/PartDetail.js":"21","/Users/bernardahn/Documents/GitHub/clip/src/components/ClipBoard.js":"22","/Users/bernardahn/Documents/GitHub/clip/src/components/MoodboardDetail.js":"23","/Users/bernardahn/Documents/GitHub/clip/src/components/MoodClipBoard.js":"24","/Users/bernardahn/Documents/GitHub/clip/src/components/AddToShoppingCart.js":"25","/Users/bernardahn/Documents/GitHub/clip/src/components/LogOut.js":"26","/Users/bernardahn/Documents/GitHub/clip/src/components/LogIn.js":"27","/Users/bernardahn/Documents/GitHub/clip/src/components/WrongLogIn.js":"28","/Users/bernardahn/Documents/GitHub/clip/src/components/KakaoAuth.js":"29","/Users/bernardahn/Documents/GitHub/clip/src/components/NoExistMember.js":"30","/Users/bernardahn/Documents/GitHub/clip/src/components/SentMessage.js":"31","/Users/bernardahn/Documents/GitHub/clip/src/components/TermsOfServicePopUp.js":"32","/Users/bernardahn/Documents/GitHub/clip/src/components/PrivacyPolicyPopUp.js":"33","/Users/bernardahn/Documents/GitHub/clip/src/components/WrongPinCode.js":"34","/Users/bernardahn/Documents/GitHub/clip/src/components/RegistrationSuccess.js":"35","/Users/bernardahn/Documents/GitHub/clip/src/components/EmailAlreadyExists.js":"36","/Users/bernardahn/Documents/GitHub/clip/src/components/AlreadyMemberMessage.js":"37","/Users/bernardahn/Documents/GitHub/clip/src/components/SentEmail.js":"38","/Users/bernardahn/Documents/GitHub/clip/src/components/AlreadyKakaoMember.js":"39","/Users/bernardahn/Documents/GitHub/clip/src/components/AppleAuth.js":"40","/Users/bernardahn/Documents/GitHub/clip/src/components/IntroImage.js":"41","/Users/bernardahn/Documents/GitHub/clip/src/components/MyPage.js":"42","/Users/bernardahn/Documents/GitHub/clip/src/components/Card.js":"43","/Users/bernardahn/Documents/GitHub/clip/src/components/PersonalInfoPage.js":"44","/Users/bernardahn/Documents/GitHub/clip/src/components/IntroImagePure.js":"45","/Users/bernardahn/Documents/GitHub/clip/src/components/MoodboardCard.js":"46","/Users/bernardahn/Documents/GitHub/clip/src/components/CategoryCard.js":"47"},{"size":362,"mtime":1610324185434,"results":"48","hashOfConfig":"49"},{"size":2155,"mtime":1610430110009,"results":"50","hashOfConfig":"49"},{"size":95637,"mtime":1616747354159,"results":"51","hashOfConfig":"49"},{"size":1872,"mtime":1613965462437,"results":"52","hashOfConfig":"49"},{"size":587,"mtime":1610418309440,"results":"53","hashOfConfig":"49"},{"size":537,"mtime":1617253520887,"results":"54","hashOfConfig":"49"},{"size":1130,"mtime":1610686358746,"results":"55","hashOfConfig":"49"},{"size":227,"mtime":1610928711960,"results":"56","hashOfConfig":"49"},{"size":456,"mtime":1610430511826,"results":"57","hashOfConfig":"49"},{"size":88843,"mtime":1618468348481,"results":"58","hashOfConfig":"49"},{"size":3891,"mtime":1618805595354,"results":"59","hashOfConfig":"49"},{"size":4939,"mtime":1618797557057,"results":"60","hashOfConfig":"49"},{"size":13416,"mtime":1618193543748,"results":"61","hashOfConfig":"49"},{"size":13815,"mtime":1616132709790,"results":"62","hashOfConfig":"49"},{"size":59098,"mtime":1616132706163,"results":"63","hashOfConfig":"49"},{"size":5166,"mtime":1618894005635,"results":"64","hashOfConfig":"49"},{"size":6846,"mtime":1618877682928,"results":"65","hashOfConfig":"49"},{"size":82929,"mtime":1618870168086,"results":"66","hashOfConfig":"49"},{"size":8094,"mtime":1618885147079,"results":"67","hashOfConfig":"49"},{"size":6422,"mtime":1614234108020,"results":"68","hashOfConfig":"49"},{"size":90574,"mtime":1618376046988,"results":"69","hashOfConfig":"49"},{"size":34552,"mtime":1618378225378,"results":"70","hashOfConfig":"49"},{"size":20585,"mtime":1618378638460,"results":"71","hashOfConfig":"49"},{"size":33835,"mtime":1614056809132,"results":"72","hashOfConfig":"49"},{"size":65360,"mtime":1615182504765,"results":"73","hashOfConfig":"49"},{"size":5546,"mtime":1617602897225,"results":"74","hashOfConfig":"49"},{"size":107594,"mtime":1618438762099,"results":"75","hashOfConfig":"49"},{"size":5720,"mtime":1616116265832,"results":"76","hashOfConfig":"49"},{"size":1699,"mtime":1616481988059,"results":"77","hashOfConfig":"49"},{"size":5728,"mtime":1615778672219,"results":"78","hashOfConfig":"49"},{"size":5787,"mtime":1615778774954,"results":"79","hashOfConfig":"49"},{"size":63134,"mtime":1617078434710,"results":"80","hashOfConfig":"49"},{"size":17851,"mtime":1617080061295,"results":"81","hashOfConfig":"49"},{"size":5955,"mtime":1617077191774,"results":"82","hashOfConfig":"49"},{"size":6362,"mtime":1617601555147,"results":"83","hashOfConfig":"49"},{"size":5732,"mtime":1616383065140,"results":"84","hashOfConfig":"49"},{"size":6184,"mtime":1617076820811,"results":"85","hashOfConfig":"49"},{"size":5793,"mtime":1616391731845,"results":"86","hashOfConfig":"49"},{"size":6182,"mtime":1617076622771,"results":"87","hashOfConfig":"49"},{"size":1802,"mtime":1617348059302,"results":"88","hashOfConfig":"49"},{"size":13544,"mtime":1618464551057,"results":"89","hashOfConfig":"49"},{"size":3962,"mtime":1618363546054,"results":"90","hashOfConfig":"49"},{"size":20204,"mtime":1618468588162,"results":"91","hashOfConfig":"49"},{"size":13298,"mtime":1618469181215,"results":"92","hashOfConfig":"49"},{"size":5218,"mtime":1618549165277,"results":"93","hashOfConfig":"49"},{"size":2242,"mtime":1618799235001,"results":"94","hashOfConfig":"49"},{"size":2371,"mtime":1618805474300,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lkszav",{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":70,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"108","usedDeprecatedRules":"105"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"111"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"111"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"105"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"111"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":90,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"101"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":49,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"111"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"111"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"115"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"101"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"115"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"174"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"101"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"105"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"101"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bernardahn/Documents/GitHub/clip/src/reportWebVitals.js",[],"/Users/bernardahn/Documents/GitHub/clip/src/components/Content.js",["221","222","223","224","225","226"],"import React from 'react';\nimport IntroImg from '../assets/introImage.png';\nimport icon1 from '../assets/icon1.svg'\nimport icon2 from '../assets/icon2.svg'\nimport icon3 from '../assets/icon3.svg'\nimport './content.css';\n\n\n\nconst Content=() => {\n\tconst filler=(\n\t\t<div className=\"headerFiller\">\n\t\t</div>\n\t)\n\tconst introImage=(\n\t\t<div className=\"introImage\">\n\t\t\t<div id=\"introImageDiv\">\n\t\t\t\t<img id=\"introImage\" src={IntroImg} alt=\"Logo\" title=\"Logo\" >\n\t\t\t\t</img>\n\t\t\t\t{/* <div id=\"introduction\">\n\t\t\t\t\t<p className=\"titleFont introText\">온라인 자재 라이브러리</p>\n\t\t\t\t\t<p className=\"regularFont introText\">쉽고 빠르게 자재를 찾아보고</p>\n\t\t\t\t\t<p className=\"regularFont introText\">샘플을 받아볼 수 있는 방법!</p>\n\t\t\t\t\t<p className=\"regularFont introText\">디자인 전문가라면 언제나 무료!</p>\n\t\t\t\t</div> */}\n\t\t\t</div>\n\t\t</div>\n\t)\n\tconst howItWorks=(\n\t\t<div className=\"howItWorksDiv\">\n\t\t\t<p className=\"titleFont\">다양한 자재를 검색하고, 다음날 오전까지 샘플을 받아보세요!</p>\n\t\t\t<div>\n\t\t\t\t<button id=\"howItWorksLink\">사용방법</button>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<div className='howToIconsDiv'>\n\t\t\t\t\t<img className='howToIcons'src={icon1}></img>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<p className=\"subTitleFont\">쉽고 간편하게 검색</p>\n\t\t\t<p className=\"regularFont\">국내 및 해외 건축 인테리어 브랜드 및 자재를 한곳에서 쉽고 빠르게 검색해보세요.</p>\n\t\t\t<img className='howToIcons'src={icon2}></img>\n\t\t\t<p className=\"subTitleFont\">샘플을 주문하면</p>\n\t\t\t<p className=\"regularFont\">프로젝트에 필요한 샘플을 장바구니에 담고 주문하세요.</p>\n\t\t\t<img className='howToIcons'src={icon3}></img>\n\t\t\t<p className=\"subTitleFont\">한박스로 당일발송</p>\n\t\t\t<p className=\"regularFont\">주문한 샘플은 당일발송 됩니다. (영업일 기준 1-2일 배송완료)</p>\n\n\t\t</div>\n\t)\n\t\n  const data=(\n  \t<div className=\"box\">\n  \t\t<h2>temporary filler</h2>\n  \t</div>\n  )\n\n  return (\n    <main className=\"content\">\n\t\t{/* {filler}\n\t\t{introImage} */}\n\t\t{/* {howItWorks} */}\n\t    {data}\n\t    {data}\n\t\t{data}\n    </main>\n  )\n}\n\nexport default Content;",["227","228"],"/Users/bernardahn/Documents/GitHub/clip/src/components/Navbar.js",["229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298"],"import React,{useEffect} from 'react';\nimport './navbar.css';\n// import Logo from './../logo.svg';\nimport {TouchableOpacity,Text,View,Modal,TouchableHighlight,Dimensions,TextInput,Picker,Linking,ScrollView,FlatList} from 'react-native';\nimport Logo from '../assets/header_logo.png'\nimport { nativeTouchData } from 'react-dom/test-utils';\n// import searchIcon from '../assets/icnSearch.png'\nimport searchIcon from '../assets/searchIcon.png'\nimport userIcon from '../assets/icnUser.png'\nimport boxIcon from '../assets/icnBox.png'\nimport xIcon from '../assets/x.png'\nimport {BrowserRouter as Router,Switch,Route,Link} from 'react-router-dom'\nimport BrandsDropDown from './BrandsDropDown'\nimport CategoryDropDown from './CategoryDropDown';\nimport UseDropDown from './UseDropDown'\nimport LogOut from './LogOut'\nimport LogIn from './LogIn'\nimport WrongLogIn from './WrongLogIn'\nimport AlreadyKakaoMember from './AlreadyKakaoMember'\n// import Popup from 'reactjs-popup';\n// import 'reactjs-popup/dist/index.css';\n// import {UserProvider,useUser} from './user-context'\nconst queryString =require('query-string');\n\nconst Navbar=() => {\n  const [scrolled,setScrolled]=React.useState(false);\n  const [userModalVisible,setUserModalVisible]=React.useState(false);\n  const [cartModalVisible,setCartModalVisible]=React.useState(false);\n  const [height,setHeight]=React.useState(Dimensions.get('window').height)\n  const [width,setWidth]=React.useState(Dimensions.get('window').width)\n  // const [user,setUser]=useUser()\n  const [loginInfo,setLoginInfo]=React.useState(null)\n  const [userPhoneNumber,setUserPhoneNumber]=React.useState(null)\n  const [userEmail,setUserEmail]=React.useState(null)\n  const [password,setPassword]=React.useState(null)\n  const [loggedOn,setLoggedOn]=React.useState(false)\n  const [entryCorrect,setEntryCorrect]=React.useState(true)\n  const [brandListData,setBrandListData]=React.useState(null)\n  const [brandsDropDown,setBrandsDropDown]=React.useState(false)\n  const [categoryDropDown,setCategoryDropDown]=React.useState(false)\n  const [useDropDown,setUseDropDown]=React.useState(false)\n  const [brandsDropDownDisplay,setBrandsDropDownDisplay]=React.useState('none')\n  const [inputValue,setInputValue]=React.useState(\"\")\n  const [searchTermEnable,setSearchTermEnable]=React.useState(false)\n  const [logOutShow,setLogOutShow]=React.useState(false)\n  const [logInShow,setLogInShow]=React.useState(false)\n  const [wrongLogInShow,setWrongLogInShow]=React.useState(false)\n  const [userName,setUserName]=React.useState('')\n  const [userCompanyName,setUserCompanyName]=React.useState('')\n  const [userCompanyWebSite,setUserCompanyWebSite]=React.useState('')\n  const [passwordCheck,setPasswordCheck]=React.useState('')\n  const [registrationScreen,setRegistrationScreen]=React.useState(0)\n  const [pincodeAnswer,setPincodeAnswer]=React.useState('')\n  const [joinType,setJoinType]=React.useState('MOBILE')\n  const [SNSID,setSNSID]=React.useState(null)\n  const [alreadyKakaoMemberShow,setAlreadyKakaoMemberShow]=React.useState()\n  const handleScroll=() => {\n    const offset=window.scrollY;\n    if(offset > 200 ){\n      setScrolled(true);\n    }\n    else{\n      setScrolled(false);\n    }\n  }\n  const toggleUserModal=()=>{\n      setUserModalVisible(!userModalVisible)\n  }\n  const toggleCartModal=()=>{\n    setCartModalVisible(!cartModalVisible)\n}\n  const onPhoneNumberChange=()=>{\n  \n    if(loginInfo!=null){\n      if(localStorage.login&&localStorage.login!=\"\"){\n        if(JSON.parse(window.localStorage.login).result=='SUCCESS'){\n          console.log(JSON.parse(window.localStorage.getItem('login')))\n          console.log('logged on')\n          setLoggedOn(true)\n          setEntryCorrect(true)\n        }\n        else{\n          console.log(JSON.parse(window.localStorage.getItem('login')))\n          console.log('logged off')\n          setLoggedOn(false)\n          setEntryCorrect(false)\n        }\n      }\n      else{\n          setLoggedOn(false)\n        console.log('logged off')\n      }\n    }\n    \n  }\n  const onPasswordChange=()=>{\n    // console.log(password)\n  }\n  const login=()=>{\n    fetch('/login?'+\n      queryString.stringify({\n              mem_jointype:'MOBILE',\n              mem_password:password,\n              mem_token:null,\n              mem_mobile:userPhoneNumber\n          })\n    )\n    .then(res=>res.json())\n    .then((incomingData)=>{\n      setLoginInfo(incomingData)\n      console.log(\"_______\")\n      console.log(incomingData)\n      window.localStorage.setItem('login',JSON.stringify(incomingData))\n      if(incomingData.result=='SUCCESS'){\n        setLoggedOn(true)\n        setEntryCorrect(true)\n      }\n      else{\n        setLoggedOn(false)\n        setEntryCorrect(false)\n      }\n      // console.log(loggedOn)\n    })\n    .catch(err=>{\n        console.log(err)\n    })\n\n    \n\n    // fetch('http://clip.partners/api/mobile/MemberLogin',{\n    //     method: 'post',\n    //     headers: {'Content-Type':'application/x-www-form-urlencoded'},\n    //     body:queryString.stringify({\n    //         mem_jointype:'MOBILE',\n    //         mem_password:password,\n    //         mem_token:null,\n    //         mem_mobile:userPhoneNumber\n    //     })\n\n    // })\n    // .then(res=>res.json())\n    // .then((incomingData)=>{\n    //   setLoginInfo(incomingData)\n    //   console.log(\"!_______!\")\n    //   console.log(loginInfo)\n    //   // console.log('data read : ' , data.listCategory[0].ct_img_url);\n    //   window.localStorage.setItem('login',JSON.stringify(loginInfo))\n    // })\n    // .catch(err=>{\n    //     console.log(err)\n    // })\n\n  }\n  const logInFunction=(obj)=>{\n    fetch('/login?'+\n      queryString.stringify(obj)\n    )\n    .then(res=>res.json())\n    .then((incomingData)=>{\n      setLoginInfo(incomingData)\n      console.log(\"_______\")\n      console.log(incomingData)\n      window.localStorage.setItem('login',JSON.stringify(incomingData))\n      if(incomingData.result=='SUCCESS'){\n        setWrongLogInShow(false)\n        setLoggedOn(true)\n        setEntryCorrect(true)\n      }\n      else if(incomingData.result=='NEED_JOIN'){ \n        console.log(\"jointype:\"+obj.mem_jointype)\n        console.log(\"SNSID\"+obj.mem_snsid)\n        setSNSID(obj.mem_snsid)\n        setJoinType(obj.mem_jointype)\n        setLoggedOn(false)\n        setRegistrationScreen(1)\n        // console.log('how do i direct users to join using kakao page')\n      }\n      else{\n        if(incomingData.message==\"JOIN_KAKAO\"){\n          setAlreadyKakaoMemberShow(true)\n          console.log('gotta show log in using kakao popup')\n        }\n        else if(incomingData.message==\"NO_EXIST_MEMBER\"){\n          setWrongLogInShow(true)\n          setLoggedOn(false)\n          setEntryCorrect(false)\n        }\n        \n      }\n      // console.log(loggedOn)\n    })\n    .catch(err=>{\n        console.log(err)\n    })\n    \n    \n\n    // fetch('http://clip.partners/api/mobile/MemberLogin',{\n    //     method: 'post',\n    //     headers: {'Content-Type':'application/x-www-form-urlencoded'},\n    //     body:queryString.stringify({\n    //         mem_jointype:'MOBILE',\n    //         mem_password:password,\n    //         mem_token:null,\n    //         mem_mobile:userPhoneNumber\n    //     })\n\n    // })\n    // .then(res=>res.json())\n    // .then((incomingData)=>{\n    //   setLoginInfo(incomingData)\n    //   console.log(\"!_______!\")\n    //   console.log(loginInfo)\n    //   // console.log('data read : ' , data.listCategory[0].ct_img_url);\n    //   window.localStorage.setItem('login',JSON.stringify(loginInfo))\n    // })\n    // .catch(err=>{\n    //     console.log(err)\n    // })\n\n  }\n  const logOutFunction=()=>{\n    setLoginInfo(null)\n    setLoggedOn(false)\n    console.log(\"_______\")\n    // window.localStorage.setItem('login','')\n    localStorage.removeItem('login')\n  }\n  const onChange=()=>{\n    setHeight(Dimensions.get('window').height)\n    setWidth(Dimensions.get('window').width)\n    // console.log(height+\" : \"+width)\n  }\n  const updateInputValue=(e)=>{\n    setInputValue(e.target.value)\n    if(e.target.value!=\"\"){\n      // setMakeButtonEnable(true)\n      setSearchTermEnable(true)\n  }\n  else{\n      // setMakeButtonEnable(false)\n      setSearchTermEnable(false)\n  }\n}\n  const brands=()=>{\n    fetch('/brandslist')\n    .then(res=>res.json())\n    .then((incomingData)=>{\n      setBrandListData(incomingData)\n    })\n    .catch(err=>{\n        console.log(err)\n    })\n  }\n  const toggleBrandsDropDown=()=>{\n    console.log('brandsDropDown toggled')\n    setCategoryDropDown(false)\n    setUseDropDown(false)\n    setBrandsDropDown(!brandsDropDown)\n  }\n  const toggleCategoryDropDown=()=>{\n    console.log('categoryDropDown toggled')\n    setBrandsDropDown(false)\n    setUseDropDown(false)\n    setCategoryDropDown(!categoryDropDown)\n  }\n  const toggleUseDropDown=()=>{\n    console.log('useDropDown toggled')\n    setBrandsDropDown(false)\n    setCategoryDropDown(false)\n    setUseDropDown(!useDropDown)\n  }\n  const toggleLogOutShow=()=>{\n    setLogOutShow(!logOutShow)\n  }\n  const toggleLogInShow=()=>{\n    setLogInShow(!logInShow)\n  }\n  const toggleWrongLogInShow=()=>{\n    setWrongLogInShow(!logInShow)\n  }\n  const toggleAlreadyKakaoMemberShow=()=>{\n    setAlreadyKakaoMemberShow(!alreadyKakaoMemberShow)\n  }\n  const brandRenderRow=(brand,index,separators)=>{\n    return(\n    <TouchableOpacity\n      onPress={() => \n        Linking.openURL(`/brands?ct_id=${brand.ct_id}`)\n      }\n    >\n    <div\n      style={{\n        textAlign:'left',\n        padding:'5pt'\n      }}\n    >\n\n      <Text\n        style ={{\n          height:'65pt',\n          width:'250px',\n          fontSize: '15pt',\n          fontWeight:'700',\n          textDecorationLine:'none',\n          color:'black',\n          textAlign:'left',\n          alignItems:'center',\n          justifyContent:'center',\n          flexDirection:'row',\n          marginTop:'45pt',\n          pointerEvents:'none',\n          backgroundColor:'transparent',\n          pointerEvents:'none',\n          \n      }}\n      >\n        {brand.ct_text}\n      </Text>\n      <br></br>\n    </div>\n    </TouchableOpacity>\n                        \n  \n  )}\n\n  useEffect(() => {\n    window.addEventListener('scroll',handleScroll)\n    Dimensions.addEventListener('change',onChange)\n    if(localStorage.login&&localStorage.login!=\"\"){\n      setLoginInfo(JSON.parse(window.localStorage.getItem('login')))\n      if(JSON.parse(window.localStorage.getItem('login')).result==\"SUCCESS\"){\n        setLoggedOn(true)\n      }\n    }\n    else{\n      setLoggedOn(false)\n    }\n    //brands()\n    // console.log(loggedOn)\n  },[])\n  useEffect(()=>{\n    console.log(loggedOn)\n  },[loggedOn])\n  useEffect(()=>{\n    console.log(brandListData)\n  },[brandListData])\n  // useEffect(()=>{\n  //   console.log(brandsDropDownDisplay)\n  //   if(brandsDropDown==true){\n  //     setBrandsDropDownDisplay('block')\n  //   }\n  //   else if(brandsDropDown==false){\n  //     setBrandsDropDownDisplay('none')\n  //   }\n  // },[brandsDropDown])\n  \n  let x=['navbar'];\n  if(scrolled){\n    x.push('scrolled');\n  }\n  if(loggedOn==true){\n    if(width>1271){\n \n        return (    \n          <header className={x.join(\" \")}>\n            <Modal\n                animationType=\"fade\"\n                transparent={false}\n                visible={cartModalVisible}\n                onDismiss={() => {\n                  // alert('Modal has been closed.');\n                  console.log(\"user modal has been closed\")\n                }}>\n                <View style={{marginTop: 22}}>\n                  <View>\n                    <Text>cart Info</Text>\n\n                    <TouchableHighlight\n                      onPress={() => {\n                        toggleCartModal()\n                      }}>\n                      <Text>x</Text>\n                    </TouchableHighlight>\n                  </View>\n                </View>\n              </Modal>\n            {/* <Modal\n                animationType=\"fade\"\n                transparent={false}\n                visible={userModalVisible}\n                onDismiss={() => {\n                  // alert('Modal has been closed.');\n                  console.log(\"user modal has been closed\")\n                }}>\n                <View style={{marginTop: 22}}>\n                  <View>\n                    <TouchableHighlight\n                      onPress={() => {\n                        logOutFunction()\n                      }}>\n                      <Text>로그아웃</Text>\n                    </TouchableHighlight>\n                    <TouchableHighlight\n                      onPress={() => {\n                        toggleUserModal()\n                      }}>\n                      <Text>x</Text>\n                    </TouchableHighlight>\n                  </View>\n                </View>\n              </Modal>\n               */}\n                <div\n                    style={{\n                        display: logOutShow ? 'block':'none' \n                    }}\n                >\n                    <LogOut toggleLogOutShow={toggleLogOutShow} logOutFunction={logOutFunction}/>\n                </div>\n                <div\n                  style={{\n                    display: useDropDown ? 'block':'none'\n                  }}\n                >\n                  <UseDropDown toggleUseDropDown={toggleUseDropDown}/>\n                </div>\n                <div\n                  style={{\n                    display:categoryDropDown ? 'block':'none'\n                  }}\n                >\n                  <CategoryDropDown toggleCategoryDropDown={toggleCategoryDropDown}/>\n                </div>\n                <div\n                  style={{\n                    display:brandsDropDown ? 'block':'none'\n                  }}\n                >\n                  <BrandsDropDown toggleBrandsDropDown={toggleBrandsDropDown}/>\n                </div>\n\n            <div className=\"headerContainer\">\n            \n              <div className=\"logo\">\n                <a\n                  href=\"/clip\"\n                >\n                  <img src={Logo} alt=\"Logo\" title=\"Logo\" />\n                </a>\n              </div>\n\n                  <TouchableOpacity\n                        className=\"linkTo\"\n                        id=\"category\"\n                        style={{\n                            position:'fixed',\n                            height:50,\n                            width:240,\n                            top:38,\n                            left:'167pt',\n                            backgroundColor:'transparent',\n                            zIndex:1\n                        }}\n                        activeOpacity={0.5}\n                        onPress={()=>{\n                          toggleCategoryDropDown()\n                        }}\n                    >\n                    \n                        {/* <Link to=\"/category\">\n                          자재카테고리\n                        </Link> */}\n                        <a \n                        style={\n                          {\n                            // flex:1,\n                            textDecorationLine:'none',\n                            // color:'black',\n                            // //borderColor:'black',\n                            // //borderWidth:2,\n                            // backgroundColor:'transparent',\n                            // fontSize: '25pt',\n                            // fontWeight:'700',\n                            // textShadowColor: 'rgba(0, 0, 0, 0.5)',\n                            // textShadowOffset: {width: 0, height: 0},\n                            // textShadowRadius: 2,\n                            // // flex:1,\n                            // alignItems:'center',\n                            // justifyContent:'center',\n                            // flexDirection:'row',\n                            // textAlign:'center'\n                          }} \n                          // href=\"/category\"\n                          >\n                <Text\n                      selectable={false} \n                      style ={{\n                          fontSize: '25px',\n                          fontWeight:'700',\n                          textDecorationLine:'none',\n                          color:'black',\n                          // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                          // textShadowOffset: {width: 0, height: 0},\n                          // textShadowRadius: 2,\n                          textAlign:'center',\n                          alignItems:'center',\n                          justifyContent:'center',\n                          flexDirection:'row',\n                          margin:11,\n                          // padding:'auto',\n                          pointerEvents:'none'\n\n                      }}\n                      >\n                        자재카테고리\n                      </Text>\n              </a>\n                  </TouchableOpacity>\n\n\n                  <TouchableOpacity\n                        className='linkTo'\n                        style={{\n                            position:'fixed',\n                            height:50,\n                            width:170,\n                            top:38,\n                            left:'349pt',\n                            backgroundColor:'transparent',\n                            zIndex:1\n                        }}\n                        activeOpacity={0.5}\n                        onPress={()=>{\n                          toggleUseDropDown()\n                          \n                         \n                        }}\n                    >\n                      <a \n                        style={\n                          {\n                            textDecorationLine:'none',\n                          }} \n                          // href=\"/constructionpart\"\n                      >\n                      <Text\n                      selectable={false} \n                      style ={{\n                          fontSize: '25px',\n                          fontWeight:'700',\n                          textDecorationLine:'none',\n                          // color:'white',\n                          // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                          // textShadowOffset: {width: 0, height: 0},\n                          // textShadowRadius: 2,\n                          color:'black',\n                          textAlign:'center',\n                          alignItems:'center',\n                          justifyContent:'center',\n                          flexDirection:'row',\n                          margin:11,\n                          padding:'auto',\n                          pointerEvents:'none'\n                      }}\n                      >\n                        사공부위\n                      </Text>\n                      </a>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                        className=\"linkTo\"\n                        style={{\n                            position:'fixed',\n                            height:50,\n                            width:140,\n                            top:38,\n                            left:'478pt',\n                            backgroundColor:'transparent',\n                            zIndex:1\n                        }}\n                        activeOpacity={0.5}\n                        // onMouseEnter={()=>\n                        //   console.log('mouse entered')\n                        // }\n                        onPress={()=>{\n                          console.log('toggle dropdown')\n                          toggleBrandsDropDown()\n                        }}\n                    >\n                      <a \n                        style={\n                          {\n                            textDecorationLine:'none',\n                          }} \n                          // href=\"/brands\"\n                      >\n                        <Text\n                        selectable={false} \n                        style ={{\n                            fontSize: '25px',\n                            fontWeight:'700',\n                            textDecorationLine:'none',\n                            // color:'white',\n                            // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                            // textShadowOffset: {width: 0, height: 0},\n                            // textShadowRadius: 2,\n                            color:'black',\n                            textAlign:'center',\n                            alignItems:'center',\n                            justifyContent:'center',\n                            flexDirection:'row',\n                            margin:11,\n                            padding:'auto',\n                            pointerEvents:'none'\n                        }}\n                        >\n                          브랜드\n                        </Text>\n                      </a>\n                  </TouchableOpacity>\n                  \n                  <View\n            style={{\n              backgroundColor:'white',\n              border:\"1px solid #ccc\",\n              width:252,\n              height:49,\n              borderRadius:'24px',\n              position:'fixed',\n              top:28,\n              right:230,\n            }}\n          >\n                    <input \n                            style={{\n                                overflow:'hidden', \n                                width:'200px',\n                                height:'49px',\n                                padding:'12px 20px',\n                                margin:\"8px 0\",\n                                // border:\"1px solid #ccc\",\n                                borderRadius:'24px',\n                                boxSizing:'border-box',\n                                position:'fixed',\n                                top:20,\n                                right:280,\n                                fontSize:'18px'\n                            }}\n                            value={inputValue} \n                            onChange={updateInputValue}\n                            placeholder={'검색'}\n\n                        />\n                        <TouchableOpacity\n                          onPress={() => {\n                            if(searchTermEnable==true){\n                              Linking.openURL(`/searchpage?keyword=`+inputValue)\n                            }\n                            else{\n                              Linking.openURL(`/searchpage`)\n                            }\n                          }}\n                          style={{\n                            position:'fixed',\n                            height:47,\n                            width:47,\n                            top:'29px',\n                            right:'173pt',\n                            backgroundColor:'transparent',\n                            zIndex:1\n                        }}\n                        >\n                        <img\n                          style={{\n                            height:47,\n                            width:47,\n                          }}\n                          src={searchIcon}\n                        >\n                        </img>\n                      </TouchableOpacity>\n                    </View>\n                  <TouchableOpacity\n                    style={{\n                      position:'fixed',\n                      height:47,\n                      width:47,\n                      top:'29px',\n                      right:'103pt',\n                      backgroundColor:'transparent',\n                      zIndex:1\n                  }}\n                  onPress={() => {\n                    toggleCartModal()\n                  }}\n                  >\n                    <img\n                      src={boxIcon}\n                    >\n                    </img>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    className=\"linkTo\"\n                    style={{\n                      position:'fixed',\n                      height:47,\n                      width:47,\n                      top:'29px',\n                      right:'33pt',\n                      backgroundColor:'transparent',\n                      zIndex:1,\n                  }}\n                  onPress={() => {\n                    // toggleUserModal()\n                    toggleLogOutShow()\n                  }}\n                  >\n                    <img\n                      src={userIcon}\n                      style={{\n                        height:'47pt',\n                      \n                      }}\n                    >\n                    </img>\n                  </TouchableOpacity>\n                  <Switch>\n                    <Route path=\"/\">\n                      {/* <Text>\n                        Home\n                      </Text> */}\n                    </Route>\n                    <Route path=\"/category\">\n                      <Text>\n                        category\n                      </Text>\n                    </Route>\n                  </Switch>\n                \n\n            </div>\n            \n\n              \n\n          </header>\n        )       \n      \n    }\n    else if(width>636 && width<=1271){\n      return(\n        <header className={x.join(\" \")}>\n        <Modal\n            animationType=\"fade\"\n            transparent={false}\n            visible={cartModalVisible}\n            onDismiss={() => {\n              // alert('Modal has been closed.');\n              console.log(\"user modal has been closed\")\n            }}>\n            <View style={{marginTop: 22}}>\n              <View>\n                <Text>cart Info</Text>\n\n                <TouchableHighlight\n                  onPress={() => {\n                    toggleCartModal()\n                  }}>\n                  <Text>x</Text>\n                </TouchableHighlight>\n              </View>\n            </View>\n          </Modal>\n        {/* <Modal\n            animationType=\"fade\"\n            transparent={false}\n            visible={userModalVisible}\n            onDismiss={() => {\n              // alert('Modal has been closed.');\n              console.log(\"user modal has been closed\")\n            }}>\n            <View style={{marginTop: 22}}>\n              <View>\n              \n                <TouchableHighlight\n                  onPress={() => {\n                    logOutFunction()\n                  }}>\n                  <Text>로그아웃</Text>\n                </TouchableHighlight>\n                <TouchableHighlight\n                  onPress={() => {\n                    toggleUserModal()\n                  }}>\n                  <Text>x</Text>\n                </TouchableHighlight>\n\n              </View>\n            </View>\n          </Modal> */}\n           <div\n              style={{\n                  display: logOutShow ? 'block':'none' \n              }}\n          >\n              <LogOut toggleLogOutShow={toggleLogOutShow} logOutFunction={logOutFunction}/>\n          </div>\n        <div className=\"headerContainer\">\n        \n          <div className=\"logo\">\n            <a\n              href=\"/clip\"\n            >\n              <img src={Logo} alt=\"Logo\" title=\"Logo\" />\n            </a>\n          </div>\n\n          <View\n            style={{\n              backgroundColor:'white',\n              border:\"1px solid #ccc\",\n              width:252,\n              height:49,\n              borderRadius:'24px',\n              position:'fixed',\n              top:28,\n              right:230,\n            }}\n          >\n                    <input \n                            style={{\n                                overflow:'hidden', \n                                width:'200px',\n                                height:'49px',\n                                padding:'12px 20px',\n                                margin:\"8px 0\",\n                                // border:\"1px solid #ccc\",\n                                borderRadius:'24px',\n                                boxSizing:'border-box',\n                                position:'fixed',\n                                top:20,\n                                right:280,\n                                fontSize:'18px'\n                            }}\n                            value={inputValue} \n                            onChange={updateInputValue}\n                            placeholder={'검색'}\n\n                        />\n                        <TouchableOpacity\n                          onPress={() => {\n                            if(searchTermEnable==true){\n                              Linking.openURL(`/searchpage?keyword=`+inputValue)\n                            }\n                            else{\n                              Linking.openURL(`/searchpage`)\n                            }\n                          }}\n                          style={{\n                            position:'fixed',\n                            height:47,\n                            width:47,\n                            top:'29px',\n                            right:'173pt',\n                            backgroundColor:'transparent',\n                            zIndex:1\n                        }}\n                        >\n                        <img\n                          style={{\n                            height:47,\n                            width:47\n                          }}\n                          src={searchIcon}\n                        >\n                        </img>\n                      </TouchableOpacity>\n                    </View>\n              <TouchableOpacity\n                style={{\n                  position:'fixed',\n                  height:47,\n                  width:47,\n                  top:'29px',\n                  right:'103pt',\n                  backgroundColor:'transparent',\n                  zIndex:1\n              }}\n              onPress={() => {\n                toggleCartModal()\n              }}\n              >\n                <img\n                  src={boxIcon}\n                >\n                </img>\n              </TouchableOpacity>\n              <TouchableOpacity\n                className=\"linkTo\"\n                style={{\n                  position:'fixed',\n                  height:47,\n                  width:47,\n                  top:'29px',\n                  right:'33pt',\n                  backgroundColor:'transparent',\n                  zIndex:1,\n              }}\n              onPress={() => {\n                // toggleUserModal()\n                toggleLogOutShow()\n              }}\n              >\n                <img\n                  src={userIcon}\n                  style={{\n                    height:'47pt',\n                  \n                  }}\n                >\n                </img>\n              </TouchableOpacity>\n              <Switch>\n                <Route path=\"/\">\n                  {/* <Text>\n                    Home\n                  </Text> */}\n                </Route>\n                <Route path=\"/category\">\n                  <Text>\n                    category\n                  </Text>\n                </Route>\n              </Switch>\n            \n\n        </div>\n        \n\n          \n\n      </header>\n      )\n    }\n    else{\n      return (    \n        <header className={x.join(\" \")}>\n          <Modal\n              animationType=\"fade\"\n              transparent={false}\n              visible={cartModalVisible}\n              onDismiss={() => {\n                // alert('Modal has been closed.');\n                console.log(\"user modal has been closed\")\n              }}>\n              <View style={{marginTop: 22}}>\n                <View>\n                  <Text>cart Info</Text>\n\n                  <TouchableHighlight\n                    onPress={() => {\n                      toggleCartModal()\n                    }}>\n                    <Text>x</Text>\n                  </TouchableHighlight>\n                </View>\n              </View>\n            </Modal>\n          {/* <Modal\n              animationType=\"fade\"\n              transparent={false}\n              visible={userModalVisible}\n              onDismiss={() => {\n                // alert('Modal has been closed.');\n                console.log(\"user modal has been closed\")\n              }}>\n              <View style={{marginTop: 22}}>\n                <View>\n                  <TouchableHighlight\n                    onPress={() => {\n                      logOutFunction()\n                    }}>\n                    <Text>로그아웃</Text>\n                  </TouchableHighlight>\n                  <TouchableHighlight\n                    onPress={() => {\n                      toggleUserModal()\n                    }}>\n                    <Text>x</Text>\n                  </TouchableHighlight>\n                </View>\n              </View>\n            </Modal> */}\n             <div\n                style={{\n                    display: logOutShow ? 'block':'none' \n                }}\n              >\n                  <LogOut toggleLogOutShow={toggleLogOutShow} logOutFunction={logOutFunction}/>\n              </div>\n          <div className=\"headerContainer\">\n          \n            <div className=\"logo\">\n              <a\n                href=\"/clip\"\n              >\n                <img src={Logo} alt=\"Logo\" title=\"Logo\" />\n              </a>\n            </div>\n\n              \n                <TouchableOpacity\n                  onPress={() => \n                    Linking.openURL(`/searchpage`)\n                  }\n                  style={{\n                    position:'fixed',\n                    height:47,\n                    width:47,\n                    top:'29px',\n                    right:'105pt',\n                    backgroundColor:'transparent',\n                    zIndex:1\n                }}\n                >\n                  <img\n                    style={{\n                      height:47,\n                      width:47,\n                    }}\n                    src={searchIcon}\n                  >\n                  </img>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={{\n                    position:'fixed',\n                    height:47,\n                    width:47,\n                    top:'29px',\n                    right:'60pt',\n                    backgroundColor:'transparent',\n                    zIndex:1\n                }}\n                onPress={() => {\n                  toggleCartModal()\n                }}\n                >\n                  <img\n                    src={boxIcon}\n                  >\n                  </img>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  className=\"linkTo\"\n                  style={{\n                    position:'fixed',\n                    height:47,\n                    width:47,\n                    top:'29px',\n                    right:'15pt',\n                    backgroundColor:'transparent',\n                    zIndex:1,\n                }}\n                onPress={() => {\n                  // toggleUserModal()\n                  toggleLogOutShow()\n                }}\n                >\n                  <img\n                    src={userIcon}\n                    style={{\n                      height:'47pt',\n                    \n                    }}\n                  >\n                  </img>\n                </TouchableOpacity>\n                <Switch>\n                  <Route path=\"/\">\n                    {/* <Text>\n                      Home\n                    </Text> */}\n                  </Route>\n                  <Route path=\"/category\">\n                    <Text>\n                      category\n                    </Text>\n                  </Route>\n                </Switch>\n              \n\n          </div>\n          \n\n            \n\n        </header>\n      )\n    }\n  }\n  else{\n    if(entryCorrect==true){\n      if(width>1271){\n        return (    \n          <header className={x.join(\" \")}>\n            <Modal\n                animationType=\"fade\"\n                transparent={false}\n                visible={cartModalVisible}\n                onDismiss={() => {\n                  // alert('Modal has been closed.');\n                  console.log(\"user modal has been closed\")\n                }}>\n                <View style={{marginTop: 22}}>\n                  <View>\n                    <Text>cart Info</Text>\n\n                    <TouchableHighlight\n                      onPress={() => {\n                        toggleCartModal()\n                      }}>\n                      <Text>x</Text>\n                    </TouchableHighlight>\n                  </View>\n                </View>\n              </Modal>\n            {/* <Modal\n                animationType=\"fade\"\n                transparent={false}\n                visible={userModalVisible}\n                onDismiss={() => {\n                  // alert('Modal has been closed.');\n                  console.log(\"user modal has been closed\")\n                }}>\n                <View style={{marginTop: 22}}>\n                  <View>\n                    <TouchableHighlight\n                      onPress={() => {\n                        logOutFunction()\n                      }}>\n                      <Text>로그아웃</Text>\n                    </TouchableHighlight>\n                    <TouchableHighlight\n                      onPress={() => {\n                        toggleUserModal()\n                      }}>\n                      <Text>x</Text>\n                    </TouchableHighlight>\n                  </View>\n                </View>\n              </Modal>\n               */}\n               <div\n                    style={{\n                        display: wrongLogInShow ? 'block':'none' \n                    }}\n                >\n                    <WrongLogIn toggleWrongLogInShow={toggleWrongLogInShow} />\n                </div>\n                <div\n                  style={{\n                    display:alreadyKakaoMemberShow ? 'block':'none'\n                  }}\n                >\n                   <AlreadyKakaoMember toggleAlreadyKakaoMemberShow={toggleAlreadyKakaoMemberShow}/>\n                </div>\n                <div\n                    style={{\n                        display: logInShow ? 'block':'none' \n                    }}\n                >\n                    {/* <LogIn toggleLogInShow={toggleLogInShow} logInFunction={logInFunction} setUserPhoneNumber={setUserPhoneNumber} onPhoneNumberChange={onPhoneNumberChange} userPhoneNumber={userPhoneNumber} setPassword={setPassword} onPasswordChange={onPasswordChange} password={password} setUserEmail={setUserEmail} userEmail={userEmail}/> */}\n                    <LogIn toggleLogInShow={toggleLogInShow} \n                      logInFunction={logInFunction} \n                      setUserPhoneNumber={setUserPhoneNumber} \n                      onPhoneNumberChange={onPhoneNumberChange} \n                      userPhoneNumber={userPhoneNumber} \n                      setPassword={setPassword} \n                      onPasswordChange={onPasswordChange} \n                      password={password} \n                      setUserEmail={setUserEmail} \n                      userEmail={userEmail}\n                      setUserName={setUserName}\n                      userName={userName}\n                      userCompanyName={userCompanyName}\n                      setUserCompanyName={setUserCompanyName}\n                      userCompanyWebSite={userCompanyWebSite}\n                      setUserCompanyWebSite={setUserCompanyWebSite}\n                      passwordCheck={passwordCheck}\n                      setPasswordCheck={setPasswordCheck}\n                      setRegistrationScreen={setRegistrationScreen}\n                      registrationScreen={registrationScreen}\n                      pincodeAnswer={pincodeAnswer}\n                      setPincodeAnswer={setPincodeAnswer}\n                      setSNSID={setSNSID}\n                      SNSID={SNSID}\n                      setJoinType={setJoinType}\n                      joinType={joinType}\n                      />\n                </div>\n                <div\n                  style={{\n                    display: useDropDown ? 'block':'none'\n                  }}\n                >\n                  <UseDropDown toggleUseDropDown={toggleUseDropDown}/>\n                </div>\n                <div\n                  style={{\n                    display:categoryDropDown ? 'block':'none'\n                  }}\n                >\n                  <CategoryDropDown toggleCategoryDropDown={toggleCategoryDropDown}/>\n                </div>\n                <div\n                  style={{\n                    display:brandsDropDown ? 'block':'none'\n                  }}\n                >\n                  <BrandsDropDown toggleBrandsDropDown={toggleBrandsDropDown}/>\n                </div>\n\n            <div className=\"headerContainer\">\n            \n              <div className=\"logo\">\n                <a\n                  href=\"/clip\"\n                >\n                  <img src={Logo} alt=\"Logo\" title=\"Logo\" />\n                </a>\n              </div>\n\n                  <TouchableOpacity\n                        className=\"linkTo\"\n                        id=\"category\"\n                        style={{\n                            position:'fixed',\n                            height:50,\n                            width:240,\n                            top:38,\n                            left:'167pt',\n                            backgroundColor:'transparent',\n                            zIndex:1\n                        }}\n                        activeOpacity={0.5}\n                        onPress={()=>{\n                          toggleCategoryDropDown()\n                        }}\n                    >\n                    \n                        {/* <Link to=\"/category\">\n                          자재카테고리\n                        </Link> */}\n                        <a \n                        style={\n                          {\n                            // flex:1,\n                            textDecorationLine:'none',\n                            // color:'black',\n                            // //borderColor:'black',\n                            // //borderWidth:2,\n                            // backgroundColor:'transparent',\n                            // fontSize: '25pt',\n                            // fontWeight:'700',\n                            // textShadowColor: 'rgba(0, 0, 0, 0.5)',\n                            // textShadowOffset: {width: 0, height: 0},\n                            // textShadowRadius: 2,\n                            // // flex:1,\n                            // alignItems:'center',\n                            // justifyContent:'center',\n                            // flexDirection:'row',\n                            // textAlign:'center'\n                          }} \n                          // href=\"/category\"\n                          >\n                <Text\n                      selectable={false} \n                      style ={{\n                          fontSize: '25px',\n                          fontWeight:'700',\n                          textDecorationLine:'none',\n                          color:'black',\n                          // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                          // textShadowOffset: {width: 0, height: 0},\n                          // textShadowRadius: 2,\n                          textAlign:'center',\n                          alignItems:'center',\n                          justifyContent:'center',\n                          flexDirection:'row',\n                          margin:11,\n                          // padding:'auto',\n                          pointerEvents:'none'\n\n                      }}\n                      >\n                        자재카테고리\n                      </Text>\n              </a>\n                  </TouchableOpacity>\n\n\n                  <TouchableOpacity\n                        className='linkTo'\n                        style={{\n                            position:'fixed',\n                            height:50,\n                            width:170,\n                            top:38,\n                            left:'349pt',\n                            backgroundColor:'transparent',\n                            zIndex:1\n                        }}\n                        activeOpacity={0.5}\n                        onPress={()=>{\n                          toggleUseDropDown()\n                          \n                         \n                        }}\n                    >\n                      <a \n                        style={\n                          {\n                            textDecorationLine:'none',\n                          }} \n                          // href=\"/constructionpart\"\n                      >\n                      <Text\n                      selectable={false} \n                      style ={{\n                          fontSize: '25px',\n                          fontWeight:'700',\n                          textDecorationLine:'none',\n                          // color:'white',\n                          // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                          // textShadowOffset: {width: 0, height: 0},\n                          // textShadowRadius: 2,\n                          color:'black',\n                          textAlign:'center',\n                          alignItems:'center',\n                          justifyContent:'center',\n                          flexDirection:'row',\n                          margin:11,\n                          padding:'auto',\n                          pointerEvents:'none'\n                      }}\n                      >\n                        사공부위\n                      </Text>\n                      </a>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                        className=\"linkTo\"\n                        style={{\n                            position:'fixed',\n                            height:50,\n                            width:140,\n                            top:38,\n                            left:'478pt',\n                            backgroundColor:'transparent',\n                            zIndex:1\n                        }}\n                        activeOpacity={0.5}\n                        // onMouseEnter={()=>\n                        //   console.log('mouse entered')\n                        // }\n                        onPress={()=>{\n                          console.log('toggle dropdown')\n                          toggleBrandsDropDown()\n                        }}\n                    >\n                      <a \n                        style={\n                          {\n                            textDecorationLine:'none',\n                          }} \n                          // href=\"/brands\"\n                      >\n                        <Text\n                        selectable={false} \n                        style ={{\n                            fontSize: '25px',\n                            fontWeight:'700',\n                            textDecorationLine:'none',\n                            // color:'white',\n                            // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                            // textShadowOffset: {width: 0, height: 0},\n                            // textShadowRadius: 2,\n                            color:'black',\n                            textAlign:'center',\n                            alignItems:'center',\n                            justifyContent:'center',\n                            flexDirection:'row',\n                            margin:11,\n                            padding:'auto',\n                            pointerEvents:'none'\n                        }}\n                        >\n                          브랜드\n                        </Text>\n                      </a>\n                  </TouchableOpacity>\n                  \n                  <View\n            style={{\n              backgroundColor:'white',\n              border:\"1px solid #ccc\",\n              width:252,\n              height:49,\n              borderRadius:'24px',\n              position:'fixed',\n              top:28,\n              right:230,\n            }}\n          >\n                    <input \n                            style={{\n                                overflow:'hidden', \n                                width:'200px',\n                                height:'49px',\n                                padding:'12px 20px',\n                                margin:\"8px 0\",\n                                // border:\"1px solid #ccc\",\n                                borderRadius:'24px',\n                                boxSizing:'border-box',\n                                position:'fixed',\n                                top:20,\n                                right:280,\n                                fontSize:'18px'\n                            }}\n                            value={inputValue} \n                            onChange={updateInputValue}\n                            placeholder={'검색'}\n\n                        />\n                        <TouchableOpacity\n                          onPress={() => {\n                            if(searchTermEnable==true){\n                              Linking.openURL(`/searchpage?keyword=`+inputValue)\n                            }\n                            else{\n                              Linking.openURL(`/searchpage`)\n                            }\n                          }}\n                          style={{\n                            position:'fixed',\n                            height:47,\n                            width:47,\n                            top:'29px',\n                            right:'173pt',\n                            backgroundColor:'transparent',\n                            zIndex:1\n                        }}\n                        >\n                        <img\n                          style={{\n                            height:47,\n                            width:47,\n                          }}\n                          src={searchIcon}\n                        >\n                        </img>\n                      </TouchableOpacity>\n                    </View>\n                  <TouchableOpacity\n                    style={{\n                      position:'fixed',\n                      height:47,\n                      width:47,\n                      top:'29px',\n                      right:'103pt',\n                      backgroundColor:'transparent',\n                      zIndex:1\n                  }}\n                  onPress={() => {\n                    toggleCartModal()\n                  }}\n                  >\n                    <img\n                      src={boxIcon}\n                    >\n                    </img>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    className=\"linkTo\"\n                    style={{\n                      position:'fixed',\n                      height:47,\n                      width:47,\n                      top:'29px',\n                      right:'33pt',\n                      backgroundColor:'transparent',\n                      zIndex:1,\n                  }}\n                  onPress={() => {\n                    // toggleUserModal()\n                    toggleLogInShow()\n                  }}\n                  >\n                    <img\n                      src={userIcon}\n                      style={{\n                        height:'47pt',\n                      \n                      }}\n                    >\n                    </img>\n                  </TouchableOpacity>\n                  <Switch>\n                    <Route path=\"/\">\n                      {/* <Text>\n                        Home\n                      </Text> */}\n                    </Route>\n                    <Route path=\"/category\">\n                      <Text>\n                        category\n                      </Text>\n                    </Route>\n                  </Switch>\n                \n\n            </div>\n            \n\n              \n\n          </header>\n        )  \n      }\n      else if(width>636 && width<=1271){\n        return(\n        <header className={x.join(\" \")}>\n        <Modal\n            animationType=\"fade\"\n            transparent={false}\n            visible={cartModalVisible}\n            onDismiss={() => {\n              // alert('Modal has been closed.');\n              console.log(\"user modal has been closed\")\n            }}>\n            <View style={{marginTop: 22}}>\n              <View>\n                <Text>cart Info</Text>\n\n                <TouchableHighlight\n                  onPress={() => {\n                    toggleCartModal()\n                  }}>\n                  <Text>x</Text>\n                </TouchableHighlight>\n              </View>\n            </View>\n          </Modal>\n          <div\n              style={{\n                  display: wrongLogInShow ? 'block':'none' \n              }}\n          >\n              <WrongLogIn toggleWrongLogInShow={toggleWrongLogInShow} />\n          </div>\n          <div\n            style={{\n              display:alreadyKakaoMemberShow ? 'block':'none'\n            }}\n          >\n              <AlreadyKakaoMember toggleAlreadyKakaoMemberShow={toggleAlreadyKakaoMemberShow}/>\n          </div>\n          <div\n              style={{\n                  display: logInShow ? 'block':'none' \n              }}\n          >\n              <LogIn toggleLogInShow={toggleLogInShow} \n                      logInFunction={logInFunction} \n                      setUserPhoneNumber={setUserPhoneNumber} \n                      onPhoneNumberChange={onPhoneNumberChange} \n                      userPhoneNumber={userPhoneNumber} \n                      setPassword={setPassword} \n                      onPasswordChange={onPasswordChange} \n                      password={password} \n                      setUserEmail={setUserEmail} \n                      userEmail={userEmail}\n\n                      setUserName={setUserName}\n                      userName={userName}\n                      userCompanyName={userCompanyName}\n                      setUserCompanyName={setUserCompanyName}\n                      userCompanyWebSite={userCompanyWebSite}\n                      setUserCompanyWebSite={setUserCompanyWebSite}\n                      passwordCheck={passwordCheck}\n                      setPasswordCheck={setPasswordCheck}\n                      setRegistrationScreen={setRegistrationScreen}\n                      registrationScreen={registrationScreen}\n                      pincodeAnswer={pincodeAnswer}\n                      setPincodeAnswer={setPincodeAnswer}\n                      setSNSID={setSNSID}\n                      SNSID={SNSID}\n                      setJoinType={setJoinType}\n                      joinType={joinType}\n                      />\n          </div>\n        <div className=\"headerContainer\">\n        \n          <div className=\"logo\">\n            <a\n              href=\"/clip\"\n            >\n              <img src={Logo} alt=\"Logo\" title=\"Logo\" />\n            </a>\n          </div>\n\n          <View\n            style={{\n              backgroundColor:'white',\n              border:\"1px solid #ccc\",\n              width:252,\n              height:49,\n              borderRadius:'24px',\n              position:'fixed',\n              top:28,\n              right:230,\n            }}\n          >\n                    <input \n                            style={{\n                                overflow:'hidden', \n                                width:'200px',\n                                height:'49px',\n                                padding:'12px 20px',\n                                margin:\"8px 0\",\n                                // border:\"1px solid #ccc\",\n                                borderRadius:'24px',\n                                boxSizing:'border-box',\n                                position:'fixed',\n                                top:20,\n                                right:280,\n                                fontSize:'18px'\n                            }}\n                            value={inputValue} \n                            onChange={updateInputValue}\n                            placeholder={'검색'}\n\n                        />\n                        <TouchableOpacity\n                          onPress={() => {\n                            if(searchTermEnable==true){\n                              Linking.openURL(`/searchpage?keyword=`+inputValue)\n                            }\n                            else{\n                              Linking.openURL(`/searchpage?mem_no=`)\n                            }\n                          }}\n                          style={{\n                            position:'fixed',\n                            height:47,\n                            width:47,\n                            top:'29px',\n                            right:'173pt',\n                            backgroundColor:'transparent',\n                            zIndex:1\n                        }}\n                        >\n                        <img\n                          style={{\n                            height:47,\n                            width:47,\n                          }}\n                          src={searchIcon}\n                        >\n                        </img>\n                      </TouchableOpacity>\n                    </View>\n              <TouchableOpacity\n                style={{\n                  position:'fixed',\n                  height:47,\n                  width:47,\n                  top:'29px',\n                  right:'103pt',\n                  backgroundColor:'transparent',\n                  zIndex:1\n              }}\n              onPress={() => {\n                toggleCartModal()\n              }}\n              >\n                <img\n                  src={boxIcon}\n                >\n                </img>\n              </TouchableOpacity>\n              <TouchableOpacity\n                className=\"linkTo\"\n                style={{\n                  position:'fixed',\n                  height:47,\n                  width:47,\n                  top:'29px',\n                  right:'33pt',\n                  backgroundColor:'transparent',\n                  zIndex:1,\n              }}\n              onPress={() => {\n                // toggleUserModal()\n                toggleLogInShow()\n              }}\n              >\n                <img\n                  src={userIcon}\n                  style={{\n                    height:'47pt',\n                  \n                  }}\n                >\n                </img>\n              </TouchableOpacity>\n              <Switch>\n                <Route path=\"/\">\n                  {/* <Text>\n                    Home\n                  </Text> */}\n                </Route>\n                <Route path=\"/category\">\n                  <Text>\n                    category\n                  </Text>\n                </Route>\n              </Switch>\n            \n\n        </div>\n        \n\n          \n\n      </header>\n      )\n      }\n      else{\n        return (    \n          <header className={x.join(\" \")}>\n            <Modal\n                animationType=\"fade\"\n                transparent={false}\n                visible={cartModalVisible}\n                onDismiss={() => {\n                  // alert('Modal has been closed.');\n                  console.log(\"user modal has been closed\")\n                }}>\n                <View style={{marginTop: 22}}>\n                  <View>\n                    <Text>cart Info</Text>\n\n                    <TouchableHighlight\n                      onPress={() => {\n                        toggleCartModal()\n                      }}>\n                      <Text>x</Text>\n                    </TouchableHighlight>\n                  </View>\n                </View>\n              </Modal>\n              <div\n                    style={{\n                        display: wrongLogInShow ? 'block':'none' \n                    }}\n                >\n                    <WrongLogIn toggleWrongLogInShow={toggleWrongLogInShow} />\n                </div>\n                <div\n                  style={{\n                    display:alreadyKakaoMemberShow ? 'block':'none'\n                  }}\n                >\n                    <AlreadyKakaoMember toggleAlreadyKakaoMemberShow={toggleAlreadyKakaoMemberShow}/>\n                </div>\n              <div\n                  style={{\n                      display: logInShow ? 'block':'none' \n                  }}\n              >\n                  {/* <LogIn toggleLogInShow={toggleLogInShow} logInFunction={logInFunction} setUserPhoneNumber={setUserPhoneNumber} onPhoneNumberChange={onPhoneNumberChange} userPhoneNumber={userPhoneNumber} setPassword={setPassword} onPasswordChange={onPasswordChange} password={password} setUserEmail={setUserEmail} userEmail={userEmail}/> */}\n                  <LogIn toggleLogInShow={toggleLogInShow} \n                      logInFunction={logInFunction} \n                      setUserPhoneNumber={setUserPhoneNumber} \n                      onPhoneNumberChange={onPhoneNumberChange} \n                      userPhoneNumber={userPhoneNumber} \n                      setPassword={setPassword} \n                      onPasswordChange={onPasswordChange} \n                      password={password} \n                      setUserEmail={setUserEmail} \n                      userEmail={userEmail}\n\n                      setUserName={setUserName}\n                      userName={userName}\n                      userCompanyName={userCompanyName}\n                      setUserCompanyName={setUserCompanyName}\n                      userCompanyWebSite={userCompanyWebSite}\n                      setUserCompanyWebSite={setUserCompanyWebSite}\n                      passwordCheck={passwordCheck}\n                      setPasswordCheck={setPasswordCheck}\n                      setRegistrationScreen={setRegistrationScreen}\n                      registrationScreen={registrationScreen}\n                      pincodeAnswer={pincodeAnswer}\n                      setPincodeAnswer={setPincodeAnswer}\n                      setSNSID={setSNSID}\n                      SNSID={SNSID}\n                      setJoinType={setJoinType}\n                      joinType={joinType}\n                      />\n              </div>\n            <div className=\"headerContainer\">\n            \n              <div className=\"logo\">\n                <a\n                  href=\"/clip\"\n                >\n                  <img src={Logo} alt=\"Logo\" title=\"Logo\" />\n                </a>\n              </div>\n\n                \n                  <TouchableOpacity\n                    onPress={() => \n                      Linking.openURL(`/searchpage`)\n                    }\n                    style={{\n                      position:'fixed',\n                      height:47,\n                      width:47,\n                      top:'29px',\n                      right:'105pt',\n                      backgroundColor:'transparent',\n                      zIndex:1\n                  }}\n                  >\n                    <img\n                      style={{\n                        height:47,\n                        width:47,\n                      }}\n                      src={searchIcon}\n                    >\n                    </img>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    style={{\n                      position:'fixed',\n                      height:47,\n                      width:47,\n                      top:'29px',\n                      right:'60pt',\n                      backgroundColor:'transparent',\n                      zIndex:1\n                  }}\n                  onPress={() => {\n                    toggleCartModal()\n                  }}\n                  >\n                    <img\n                      src={boxIcon}\n                    >\n                    </img>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    className=\"linkTo\"\n                    style={{\n                      position:'fixed',\n                      height:47,\n                      width:47,\n                      top:'29px',\n                      right:'15pt',\n                      backgroundColor:'transparent',\n                      zIndex:1,\n                  }}\n                  onPress={() => {\n                    //toggleUserModal()\n                    toggleLogInShow()\n                  }}\n                  >\n                    <img\n                      src={userIcon}\n                      style={{\n                        height:'47pt',\n                      \n                      }}\n                    >\n                    </img>\n                  </TouchableOpacity>\n                  <Switch>\n                    <Route path=\"/\">\n                      {/* <Text>\n                        Home\n                      </Text> */}\n                    </Route>\n                    <Route path=\"/category\">\n                      <Text>\n                        category\n                      </Text>\n                    </Route>\n                  </Switch>\n                \n\n            </div>\n            \n\n              \n\n          </header>\n        )\n      }\n    }\n    else{\n      if(width>1271){\n        return (    \n          <header className={x.join(\" \")}>\n            <Modal\n                animationType=\"fade\"\n                transparent={false}\n                visible={cartModalVisible}\n                onDismiss={() => {\n                  // alert('Modal has been closed.');\n                  console.log(\"user modal has been closed\")\n                }}>\n                <View style={{marginTop: 22}}>\n                  <View>\n                    <Text>cart Info</Text>\n\n                    <TouchableHighlight\n                      onPress={() => {\n                        toggleCartModal()\n                      }}>\n                      <Text>x</Text>\n                    </TouchableHighlight>\n                  </View>\n                </View>\n              </Modal>\n            {/* <Modal\n                animationType=\"fade\"\n                transparent={false}\n                visible={userModalVisible}\n                onDismiss={() => {\n                  // alert('Modal has been closed.');\n                  console.log(\"user modal has been closed\")\n                }}>\n                <View style={{marginTop: 22}}>\n                  <View>\n                    <TouchableHighlight\n                      onPress={() => {\n                        logOutFunction()\n                      }}>\n                      <Text>로그아웃</Text>\n                    </TouchableHighlight>\n                    <TouchableHighlight\n                      onPress={() => {\n                        toggleUserModal()\n                      }}>\n                      <Text>x</Text>\n                    </TouchableHighlight>\n                  </View>\n                </View>\n              </Modal>\n               */}\n                {/* <div\n                    style={{\n                        display: logOutShow ? 'block':'none' \n                    }}\n                >\n                    <LogOut toggleLogOutShow={toggleLogOutShow} logOutFunction={logOutFunction}/>\n                </div> */}\n                <div\n                    style={{\n                        display: wrongLogInShow ? 'block':'none' \n                    }}\n                >\n                    <WrongLogIn toggleWrongLogInShow={toggleWrongLogInShow} />\n                </div>\n                <div\n                  style={{\n                    display:alreadyKakaoMemberShow ? 'block':'none'\n                  }}\n                >\n                    <AlreadyKakaoMember toggleAlreadyKakaoMemberShow={toggleAlreadyKakaoMemberShow}/>\n                </div>\n                <div\n                    style={{\n                        display: logInShow ? 'block':'none' \n                    }}\n                >\n                    {/* <LogIn toggleLogInShow={toggleLogInShow} logInFunction={logInFunction} setUserPhoneNumber={setUserPhoneNumber} onPhoneNumberChange={onPhoneNumberChange} userPhoneNumber={userPhoneNumber} setPassword={setPassword} onPasswordChange={onPasswordChange} password={password} setUserEmail={setUserEmail} userEmail={userEmail}/> */}\n                    <LogIn toggleLogInShow={toggleLogInShow} \n                      logInFunction={logInFunction} \n                      setUserPhoneNumber={setUserPhoneNumber} \n                      onPhoneNumberChange={onPhoneNumberChange} \n                      userPhoneNumber={userPhoneNumber} \n                      setPassword={setPassword} \n                      onPasswordChange={onPasswordChange} \n                      password={password} \n                      setUserEmail={setUserEmail} \n                      userEmail={userEmail}\n\n                      setUserName={setUserName}\n                      userName={userName}\n                      userCompanyName={userCompanyName}\n                      setUserCompanyName={setUserCompanyName}\n                      userCompanyWebSite={userCompanyWebSite}\n                      setUserCompanyWebSite={setUserCompanyWebSite}\n                      passwordCheck={passwordCheck}\n                      setPasswordCheck={setPasswordCheck}\n                      setRegistrationScreen={setRegistrationScreen}\n                      registrationScreen={registrationScreen}\n                      pincodeAnswer={pincodeAnswer}\n                      setPincodeAnswer={setPincodeAnswer}\n                      setSNSID={setSNSID}\n                      SNSID={SNSID}\n                      setJoinType={setJoinType}\n                      joinType={joinType}\n                      />\n                </div>\n                <div\n                  style={{\n                    display: useDropDown ? 'block':'none'\n                  }}\n                >\n                  <UseDropDown toggleUseDropDown={toggleUseDropDown}/>\n                </div>\n                <div\n                  style={{\n                    display:categoryDropDown ? 'block':'none'\n                  }}\n                >\n                  <CategoryDropDown toggleCategoryDropDown={toggleCategoryDropDown}/>\n                </div>\n                <div\n                  style={{\n                    display:brandsDropDown ? 'block':'none'\n                  }}\n                >\n                  <BrandsDropDown toggleBrandsDropDown={toggleBrandsDropDown}/>\n                </div>\n\n            <div className=\"headerContainer\">\n            \n              <div className=\"logo\">\n                <a\n                  href=\"/clip\"\n                >\n                  <img src={Logo} alt=\"Logo\" title=\"Logo\" />\n                </a>\n              </div>\n\n                  <TouchableOpacity\n                        className=\"linkTo\"\n                        id=\"category\"\n                        style={{\n                            position:'fixed',\n                            height:50,\n                            width:240,\n                            top:38,\n                            left:'167pt',\n                            backgroundColor:'transparent',\n                            zIndex:1\n                        }}\n                        activeOpacity={0.5}\n                        onPress={()=>{\n                          toggleCategoryDropDown()\n                        }}\n                    >\n                    \n                        {/* <Link to=\"/category\">\n                          자재카테고리\n                        </Link> */}\n                        <a \n                        style={\n                          {\n                            // flex:1,\n                            textDecorationLine:'none',\n                            // color:'black',\n                            // //borderColor:'black',\n                            // //borderWidth:2,\n                            // backgroundColor:'transparent',\n                            // fontSize: '25pt',\n                            // fontWeight:'700',\n                            // textShadowColor: 'rgba(0, 0, 0, 0.5)',\n                            // textShadowOffset: {width: 0, height: 0},\n                            // textShadowRadius: 2,\n                            // // flex:1,\n                            // alignItems:'center',\n                            // justifyContent:'center',\n                            // flexDirection:'row',\n                            // textAlign:'center'\n                          }} \n                          // href=\"/category\"\n                          >\n                <Text\n                      selectable={false} \n                      style ={{\n                          fontSize: '25px',\n                          fontWeight:'700',\n                          textDecorationLine:'none',\n                          color:'black',\n                          // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                          // textShadowOffset: {width: 0, height: 0},\n                          // textShadowRadius: 2,\n                          textAlign:'center',\n                          alignItems:'center',\n                          justifyContent:'center',\n                          flexDirection:'row',\n                          margin:11,\n                          // padding:'auto',\n                          pointerEvents:'none'\n\n                      }}\n                      >\n                        자재카테고리\n                      </Text>\n              </a>\n                  </TouchableOpacity>\n\n\n                  <TouchableOpacity\n                        className='linkTo'\n                        style={{\n                            position:'fixed',\n                            height:50,\n                            width:170,\n                            top:38,\n                            left:'349pt',\n                            backgroundColor:'transparent',\n                            zIndex:1\n                        }}\n                        activeOpacity={0.5}\n                        onPress={()=>{\n                          toggleUseDropDown()\n                          \n                         \n                        }}\n                    >\n                      <a \n                        style={\n                          {\n                            textDecorationLine:'none',\n                          }} \n                          // href=\"/constructionpart\"\n                      >\n                      <Text\n                      selectable={false} \n                      style ={{\n                          fontSize: '25px',\n                          fontWeight:'700',\n                          textDecorationLine:'none',\n                          // color:'white',\n                          // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                          // textShadowOffset: {width: 0, height: 0},\n                          // textShadowRadius: 2,\n                          color:'black',\n                          textAlign:'center',\n                          alignItems:'center',\n                          justifyContent:'center',\n                          flexDirection:'row',\n                          margin:11,\n                          padding:'auto',\n                          pointerEvents:'none'\n                      }}\n                      >\n                        사공부위\n                      </Text>\n                      </a>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                        className=\"linkTo\"\n                        style={{\n                            position:'fixed',\n                            height:50,\n                            width:140,\n                            top:38,\n                            left:'478pt',\n                            backgroundColor:'transparent',\n                            zIndex:1\n                        }}\n                        activeOpacity={0.5}\n                        // onMouseEnter={()=>\n                        //   console.log('mouse entered')\n                        // }\n                        onPress={()=>{\n                          console.log('toggle dropdown')\n                          toggleBrandsDropDown()\n                        }}\n                    >\n                      <a \n                        style={\n                          {\n                            textDecorationLine:'none',\n                          }} \n                          // href=\"/brands\"\n                      >\n                        <Text\n                        selectable={false} \n                        style ={{\n                            fontSize: '25px',\n                            fontWeight:'700',\n                            textDecorationLine:'none',\n                            // color:'white',\n                            // textShadowColor: 'rgba(0, 0, 0, 0.85)',\n                            // textShadowOffset: {width: 0, height: 0},\n                            // textShadowRadius: 2,\n                            color:'black',\n                            textAlign:'center',\n                            alignItems:'center',\n                            justifyContent:'center',\n                            flexDirection:'row',\n                            margin:11,\n                            padding:'auto',\n                            pointerEvents:'none'\n                        }}\n                        >\n                          브랜드\n                        </Text>\n                      </a>\n                  </TouchableOpacity>\n                  \n                  <View\n            style={{\n              backgroundColor:'white',\n              border:\"1px solid #ccc\",\n              width:252,\n              height:49,\n              borderRadius:'24px',\n              position:'fixed',\n              top:28,\n              right:230,\n            }}\n          >\n                    <input \n                            style={{\n                                overflow:'hidden', \n                                width:'200px',\n                                height:'49px',\n                                padding:'12px 20px',\n                                margin:\"8px 0\",\n                                // border:\"1px solid #ccc\",\n                                borderRadius:'24px',\n                                boxSizing:'border-box',\n                                position:'fixed',\n                                top:20,\n                                right:280,\n                                fontSize:\"18px\"\n                            }}\n                            value={inputValue} \n                            onChange={updateInputValue}\n                            placeholder={'검색'}\n\n                        />\n                        <TouchableOpacity\n                          onPress={() => {\n                            if(searchTermEnable==true){\n                              Linking.openURL(`/searchpage?keyword=`+inputValue)\n                            }\n                            else{\n                              Linking.openURL(`/searchpage`)\n                            }\n                          }}\n                          style={{\n                            position:'fixed',\n                            height:47,\n                            width:47,\n                            top:'29px',\n                            right:'173pt',\n                            backgroundColor:'transparent',\n                            zIndex:1\n                        }}\n                        >\n                        <img\n                          style={{\n                            height:47,\n                            width:47,\n                          }}\n                          src={searchIcon}\n                        >\n                        </img>\n                      </TouchableOpacity>\n                    </View>\n                  <TouchableOpacity\n                    style={{\n                      position:'fixed',\n                      height:47,\n                      width:47,\n                      top:'29px',\n                      right:'103pt',\n                      backgroundColor:'transparent',\n                      zIndex:1\n                  }}\n                  onPress={() => {\n                    toggleCartModal()\n                  }}\n                  >\n                    <img\n                      src={boxIcon}\n                    >\n                    </img>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    className=\"linkTo\"\n                    style={{\n                      position:'fixed',\n                      height:47,\n                      width:47,\n                      top:'29px',\n                      right:'33pt',\n                      backgroundColor:'transparent',\n                      zIndex:1,\n                  }}\n                  onPress={() => {\n                    // toggleUserModal()\n                    // toggleLogOutShow()\n                    toggleLogInShow()\n                  }}\n                  >\n                    <img\n                      src={userIcon}\n                      style={{\n                        height:'47pt',\n                      \n                      }}\n                    >\n                    </img>\n                  </TouchableOpacity>\n                  <Switch>\n                    <Route path=\"/\">\n                      {/* <Text>\n                        Home\n                      </Text> */}\n                    </Route>\n                    <Route path=\"/category\">\n                      <Text>\n                        category\n                      </Text>\n                    </Route>\n                  </Switch>\n                \n\n            </div>\n            \n\n              \n\n          </header>\n        )  \n      }\n      else if(width>636 && width<=1271){\n        return(\n        <header className={x.join(\" \")}>\n        <Modal\n            animationType=\"fade\"\n            transparent={false}\n            visible={cartModalVisible}\n            onDismiss={() => {\n              // alert('Modal has been closed.');\n              console.log(\"user modal has been closed\")\n            }}>\n            <View style={{marginTop: 22}}>\n              <View>\n                <Text>cart Info</Text>\n\n                <TouchableHighlight\n                  onPress={() => {\n                    toggleCartModal()\n                  }}>\n                  <Text>x</Text>\n                </TouchableHighlight>\n              </View>\n            </View>\n          </Modal>\n          <div\n              style={{\n                  display: wrongLogInShow ? 'block':'none' \n              }}\n          >\n              <WrongLogIn toggleWrongLogInShow={toggleWrongLogInShow} />\n          </div>\n          <div\n                  style={{\n                    display:alreadyKakaoMemberShow ? 'block':'none'\n                  }}\n                >\n                    <AlreadyKakaoMember toggleAlreadyKakaoMemberShow={toggleAlreadyKakaoMemberShow}/>\n                </div>\n          <div\n              style={{\n                  display: logInShow ? 'block':'none' \n              }}\n          >\n              {/* <LogIn toggleLogInShow={toggleLogInShow} logInFunction={logInFunction} setUserPhoneNumber={setUserPhoneNumber} onPhoneNumberChange={onPhoneNumberChange} userPhoneNumber={userPhoneNumber} setPassword={setPassword} onPasswordChange={onPasswordChange} password={password} setUserEmail={setUserEmail} userEmail={userEmail}/> */}\n              <LogIn toggleLogInShow={toggleLogInShow} \n                      logInFunction={logInFunction} \n                      setUserPhoneNumber={setUserPhoneNumber} \n                      onPhoneNumberChange={onPhoneNumberChange} \n                      userPhoneNumber={userPhoneNumber} \n                      setPassword={setPassword} \n                      onPasswordChange={onPasswordChange} \n                      password={password} \n                      setUserEmail={setUserEmail} \n                      userEmail={userEmail}\n\n                      setUserName={setUserName}\n                      userName={userName}\n                      userCompanyName={userCompanyName}\n                      setUserCompanyName={setUserCompanyName}\n                      userCompanyWebSite={userCompanyWebSite}\n                      setUserCompanyWebSite={setUserCompanyWebSite}\n                      passwordCheck={passwordCheck}\n                      setPasswordCheck={setPasswordCheck}\n                      setRegistrationScreen={setRegistrationScreen}\n                      registrationScreen={registrationScreen}\n                      pincodeAnswer={pincodeAnswer}\n                      setPincodeAnswer={setPincodeAnswer}\n                      setSNSID={setSNSID}\n                      SNSID={SNSID}\n                      setJoinType={setJoinType}\n                      joinType={joinType}\n                      />\n         </div>\n        <div className=\"headerContainer\">\n        \n          <div className=\"logo\">\n            <a\n              href=\"/clip\"\n            >\n              <img src={Logo} alt=\"Logo\" title=\"Logo\" />\n            </a>\n          </div>\n\n          <View\n            style={{\n              backgroundColor:'white',\n              border:\"1px solid #ccc\",\n              width:252,\n              height:49,\n              borderRadius:'24px',\n              position:'fixed',\n              top:28,\n              right:230,\n            }}\n          >\n                    <input \n                            style={{\n                                overflow:'hidden', \n                                width:'200px',\n                                height:'49px',\n                                padding:'12px 20px',\n                                margin:\"8px 0\",\n                                // border:\"1px solid #ccc\",\n                                borderRadius:'24px',\n                                boxSizing:'border-box',\n                                position:'fixed',\n                                top:20,\n                                right:280,\n                                fontSize:'18px'\n                            }}\n                            value={inputValue} \n                            onChange={updateInputValue}\n                            placeholder={'검색'}\n\n                        />\n                        <TouchableOpacity\n                          onPress={() => {\n                            if(searchTermEnable==true){\n                              Linking.openURL(`/searchpage?keyword=`+inputValue+'&mem_no=')\n                            }\n                            else{\n                              Linking.openURL(\"/searchpage?mem_no=\")\n                            }\n                          }}\n                          style={{\n                            position:'fixed',\n                            height:47,\n                            width:47,\n                            top:'29px',\n                            right:'173pt',\n                            backgroundColor:'transparent',\n                            zIndex:1\n                        }}\n                        >\n                        <img\n                          style={{\n                            height:47,\n                            width:47,\n                          }}\n                          src={searchIcon}\n                        >\n                        </img>\n                      </TouchableOpacity>\n                    </View>\n              <TouchableOpacity\n                style={{\n                  position:'fixed',\n                  height:47,\n                  width:47,\n                  top:'29px',\n                  right:'103pt',\n                  backgroundColor:'transparent',\n                  zIndex:1\n              }}\n              onPress={() => {\n                toggleCartModal()\n              }}\n              >\n                <img\n                  src={boxIcon}\n                >\n                </img>\n              </TouchableOpacity>\n              <TouchableOpacity\n                className=\"linkTo\"\n                style={{\n                  position:'fixed',\n                  height:47,\n                  width:47,\n                  top:'29px',\n                  right:'33pt',\n                  backgroundColor:'transparent',\n                  zIndex:1\n              }}\n              onPress={() => {\n                //toggleUserModal()\n                toggleLogInShow()\n              }}\n              >\n                <img\n                  src={userIcon}\n                  style={{\n                    height:'47pt',\n                  \n                  }}\n                >\n                </img>\n              </TouchableOpacity>\n              <Switch>\n                <Route path=\"/\">\n                  {/* <Text>\n                    Home\n                  </Text> */}\n                </Route>\n                <Route path=\"/category\">\n                  <Text>\n                    category\n                  </Text>\n                </Route>\n              </Switch>\n            \n\n        </div>\n        \n\n          \n\n      </header>\n      )\n      }\n      else{\n        return (    \n          <header className={x.join(\" \")}>\n            <Modal\n                animationType=\"fade\"\n                transparent={false}\n                visible={cartModalVisible}\n                onDismiss={() => {\n                  // alert('Modal has been closed.');\n                  console.log(\"user modal has been closed\")\n                }}>\n                <View style={{marginTop: 22}}>\n                  <View>\n                    <Text>cart Info</Text>\n\n                    <TouchableHighlight\n                      onPress={() => {\n                        toggleCartModal()\n                      }}>\n                      <Text>x</Text>\n                    </TouchableHighlight>\n                  </View>\n                </View>\n              </Modal>\n              <div\n                  style={{\n                      display: wrongLogInShow ? 'block':'none' \n                  }}\n              >\n                  <WrongLogIn toggleWrongLogInShow={toggleWrongLogInShow} />\n              </div>\n              <div\n                  style={{\n                    display:alreadyKakaoMemberShow ? 'block':'none'\n                  }}\n                >\n                  <AlreadyKakaoMember toggleAlreadyKakaoMemberShow={toggleAlreadyKakaoMemberShow}/>\n              </div>\n              <div\n                    style={{\n                        display: logInShow ? 'block':'none' \n                    }}\n                >\n                    {/* <LogIn toggleLogInShow={toggleLogInShow} logInFunction={logInFunction} setUserPhoneNumber={setUserPhoneNumber} onPhoneNumberChange={onPhoneNumberChange} userPhoneNumber={userPhoneNumber} setPassword={setPassword} onPasswordChange={onPasswordChange} password={password} setUserEmail={setUserEmail} userEmail={userEmail}/> */}\n                    <LogIn toggleLogInShow={toggleLogInShow} \n                      logInFunction={logInFunction} \n                      setUserPhoneNumber={setUserPhoneNumber} \n                      onPhoneNumberChange={onPhoneNumberChange} \n                      userPhoneNumber={userPhoneNumber} \n                      setPassword={setPassword} \n                      onPasswordChange={onPasswordChange} \n                      password={password} \n                      setUserEmail={setUserEmail} \n                      userEmail={userEmail}\n\n                      setUserName={setUserName}\n                      userName={userName}\n                      userCompanyName={userCompanyName}\n                      setUserCompanyName={setUserCompanyName}\n                      userCompanyWebSite={userCompanyWebSite}\n                      setUserCompanyWebSite={setUserCompanyWebSite}\n                      passwordCheck={passwordCheck}\n                      setPasswordCheck={setPasswordCheck}\n                      setRegistrationScreen={setRegistrationScreen}\n                      registrationScreen={registrationScreen}\n                      pincodeAnswer={pincodeAnswer}\n                      setPincodeAnswer={setPincodeAnswer}\n                      setSNSID={setSNSID}\n                      SNSID={SNSID}\n                      setJoinType={setJoinType}\n                      joinType={joinType}\n                      />\n                </div>\n            <div className=\"headerContainer\">\n            \n              <div className=\"logo\">\n                <a\n                  href=\"/clip\"\n                >\n                  <img src={Logo} alt=\"Logo\" title=\"Logo\" />\n                </a>\n              </div>\n\n                \n                  <TouchableOpacity\n                    onPress={() => \n                      Linking.openURL(`/searchpage`)\n                    }\n                    style={{\n                      position:'fixed',\n                      height:47,\n                      width:47,\n                      top:'29px',\n                      right:'105pt',\n                      backgroundColor:'transparent',\n                      zIndex:1\n                  }}\n                  >\n                    <img\n                      style={{\n                        height:47,\n                        width:47,   \n                      }}\n                      src={searchIcon}\n                    >\n                    </img>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    style={{\n                      position:'fixed',\n                      height:47,\n                      width:47,\n                      top:'29px',\n                      right:'60pt',\n                      backgroundColor:'transparent',\n                      zIndex:1\n                  }}\n                  onPress={() => {\n                    toggleCartModal()\n                  }}\n                  >\n                    <img\n                      src={boxIcon}\n                    >\n                    </img>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    className=\"linkTo\"\n                    style={{\n                      position:'fixed',\n                      height:47,\n                      width:47,\n                      top:'29px',\n                      right:'15pt',\n                      backgroundColor:'transparent',\n                      zIndex:1\n                  }}\n                  onPress={() => {\n                    //toggleUserModal()\n                    toggleLogInShow()\n                  }}\n                  >\n                    <img\n                      src={userIcon}\n                      style={{\n                        height:'47pt',\n                      \n                      }}\n                    >\n                    </img>\n                  </TouchableOpacity>\n                  <Switch>\n                    <Route path=\"/\">\n                      {/* <Text>\n                        Home\n                      </Text> */}\n                    </Route>\n                    <Route path=\"/category\">\n                      <Text>\n                        category\n                      </Text>\n                    </Route>\n                  </Switch>\n                \n\n            </div>\n            \n\n              \n\n          </header>\n        )\n      }\n    }\n  }\n};\n\nexport default Navbar;",["299","300"],"/Users/bernardahn/Documents/GitHub/clip/src/App.js",["301","302","303","304","305","306"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './components/Home'\nimport Navbar from './components/Navbar';\nimport Content from './components/Content';\nimport Category from './components/Category';\nimport ConstructionPart from './components/ConstructionPart';\nimport Brands from './components/Brands'\nimport PrivacyPolicy from './components/PrivacyPolicy'\nimport Terms from './components/Terms'\nimport SearchPage from './components/SearchPage'\nimport PartDetail from './components/PartDetail'\nimport MoodboardDetail from './components/MoodboardDetail'\n// import {UserProvider,useUser} from './components/user-context'\nimport {BrowserRouter as BrowserRouter,Router,Switch,Route,Link} from 'react-router-dom'\n\n// const globalState={\n//   phoneNum:undefined,\n//   idNum:undefined,\n//   password:undefined\n// }\n// const globalStateContext = React.createContext(globalState)\n\n\nfunction App() {\n  return (\n    // <UserProvider>\n      <div className=\"App\">\n        <BrowserRouter>\n          {/* <Navbar />\n          <Content /> */}\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/clip\" component={Home} />\n            <Route exact path=\"/category\" component={Category}/>\n            <Route exact path=\"/constructionPart\" component={ConstructionPart}/>\n            <Route exact path=\"/brands\" component={Brands}/>\n            <Route exact path=\"/privacypolicy\" component={PrivacyPolicy}/>\n            <Route exact path=\"/terms\" component={Terms}/>\n            <Route exact path=\"/searchpage\" component={SearchPage}/>\n            <Route exact path=\"/partdetail\" component={PartDetail}/>\n            <Route exact path=\"/moodboarddetail\" component={MoodboardDetail}/>\n          </Switch>\n        </BrowserRouter>\n      </div>\n    // </UserProvider>\n  );\n}\n\nexport default App;\n","/Users/bernardahn/Documents/GitHub/clip/src/index.js",[],["307","308"],"/Users/bernardahn/Documents/GitHub/clip/src/components/Home.js",["309"],"import Navbar from './Navbar';\nimport Content from './Content';\nimport IntroImage from './IntroImage'\nimport NavBarFiller from './NavBarFiller'\nimport MainMaterialCategory from './MainMaterialCategory'\nimport MainMoodBoard from './MainMoodBoard'\nimport Footer from './Footer'\nfunction Home() {\n    return (\n      <div className=\"Home\">\n          <Navbar />\n          <NavBarFiller/>\n          <IntroImage/>\n          <MainMaterialCategory/>\n          <MainMoodBoard/>\n          <Footer/>\n      </div>\n    );\n  }\n  \n  export default Home;",["310","311"],"/Users/bernardahn/Documents/GitHub/clip/src/components/Category.js",["312","313","314","315","316"],"import React,{useEffect} from 'react';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport NavBarFiller from './NavBarFiller';\nimport {TouchableOpacity,Text,View,Modal,TouchableHighlight} from 'react-native';\nconst queryString = require('query-string');\n\nfunction Category(props) {\n\n  const[data,setData]=React.useState({})\n  const[catQ,setCatQ]=React.useState({cat_num: null})\n    useEffect(() => {\n      \n      fetch('/data')\n      .then(res=>res.json())\n      .then(data=>setData(data),()=>{\n        console.log('data read : ' , data);\n      })\n      const parsed = queryString.parse(props.location.search);\n\n      console.log(parsed)\n      setCatQ(parsed)\n    },[])\n    return (\n      <div className=\"Category\">\n       \n          <Navbar />\n          <NavBarFiller/>\n          <Text> \n            Category Num\n          </Text> \n          <br></br>\n          <Text>\n            {catQ.cat_num}\n          </Text>\n          {/* <Text>\n            {data.lastname} {data.firstname}\n          </Text> */}\n\n          <Content/>\n            \n          \n        \n      </div>\n    );\n  }\n  \n  export default Category;","/Users/bernardahn/Documents/GitHub/clip/src/components/NavBarFiller.js",[],"/Users/bernardahn/Documents/GitHub/clip/src/components/ConstructionPart.js",["317","318","319","320"],"import Navbar from './Navbar';\nimport Content from './Content';\nimport NavBarFiller from './NavBarFiller';\nimport {TouchableOpacity,Text,View,Modal,TouchableHighlight} from 'react-native';\n\nfunction ConstructionPart() {\n    return (\n      <div className=\"ConstructionPart\">\n        <Navbar />\n        <NavBarFiller/>\n        <Text> \n          ConstructionPart\n        </Text> \n        <Content/>  \n      </div>\n    );\n  }\n  export default ConstructionPart;","/Users/bernardahn/Documents/GitHub/clip/src/components/Brands.js",["321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353"],"/Users/bernardahn/Documents/GitHub/clip/src/components/MainMaterialCategory.js",["354","355","356","357","358","359"],"/Users/bernardahn/Documents/GitHub/clip/src/components/MainMoodBoard.js",["360","361","362","363"],"/Users/bernardahn/Documents/GitHub/clip/src/components/Footer.js",["364","365","366","367","368","369","370","371","372","373","374","375","376","377"],"import React,{useEffect} from 'react';\nimport {TouchableOpacity,Text,View} from 'react-native';\nimport Logo from '../assets/header_logo.png'\nimport instaLogo from '../assets/instagram-brands.svg'\nimport facebookLogo from '../assets/facebook-f-brands.svg'\nimport pinterestLogo from '../assets/pinterest-p-brands.svg'\nimport Font from 'react-font'\nconst IntroImage=() => {\n\t\n    return (\n        <Font family='Noto Sans KR'>\n        <div className=\"introImageContainer\"\n            style={{\n                backgroundColor:'white',\n                // height:'300pt'\n                margin:0,\n                height:'400px'\n            }}\n        >\n            <div\n                style={{\n                    // height:'40px',\n                    // marginTop:'15px',\n                    // display:'block',\n                    // // position:'fixed',\n                    // top:'33px',\n                    // marginLeft:'29px',\n                    // height:'33pt'\n                    flexDirection:'column',\n                    textAlign:'left'\n                }}\n            >\n            <a\n            href=\"/clip\"\n          >\n            <div    \n                style={{\n                    height:'40px',\n                    width:'150px',\n                    marginTop:'0px',\n                    display:'block',\n                    // position:'fixed',\n                    backgroundColor:'transparent',\n                    top:'0px',\n                    marginLeft:'0px',\n                    height:'33pt',\n                    flex:1,\n                }}\n            >\n                <img src={Logo} alt=\"Logo\" title=\"Logo\"\n                    style={{\n                        height:'40px',\n                        marginTop:'25px',\n                        display:'block',\n                        // position:'fixed',\n                        top:'35px',\n                        marginLeft:'30px',\n                        height:'33pt'\n                    }}\n                />\n            </div>\n          </a>\n          <div\n            style={{\n                display:'flex',\n                flexDirection:'row',\n                // backgroundColor:'red'\n            }}\n          >\n          <a\n            href='https://www.instagram.com/clip.style.official/'\n          >\n            <div\n            style={{\n                height:'40px',\n                // marginTop:'15px',\n                display:'block',\n                // position:'fixed',\n                backgroundColor:'transparent',\n                // top:'0px',\n                marginLeft:'5px',\n                height:'33pt',\n                flex:1\n            }}>\n                <img src={instaLogo} alt=\"Logo\" title=\"Logo\"\n                    style={{\n                        height:'40px',\n                        marginTop:'15px',\n                        display:'block',\n                        // position:'fixed',\n                        top:'33px',\n                        marginLeft:'25px',\n                        height:'33pt'\n                    }}\n                />\n\n            </div>\n          </a>\n          <a\n            href='https://www.facebook.com/clip.style.official/'\n          >\n            <div\n            style={{\n                height:'40px',\n                // marginTop:'15px',\n                display:'block',\n                // position:'fixed',\n                backgroundColor:'transparent',\n                // top:'0px',\n                marginLeft:'5px',\n                height:'33pt',\n                flex:1\n            }}>\n                <img src={facebookLogo} alt=\"Logo\" title=\"Logo\"\n                    style={{\n                        height:'40px',\n                        marginTop:'15px',\n                        display:'block',\n                        // position:'fixed',\n                        top:'33px',\n                        marginLeft:'15px',\n                        height:'33pt'\n                    }}\n                />\n\n            </div>\n          </a>\n          <a\n            href='https://www.pinterest.co.kr/clip_style/'\n          >\n            <div\n            style={{\n                height:'40px',\n                // marginTop:'15px',\n                display:'block',\n                // position:'fixed',\n                backgroundColor:'transparent',\n                // top:'0px',\n                marginLeft:'5px',\n                height:'33pt',\n                flex:1\n            }}>\n                <img src={pinterestLogo} alt=\"Logo\" title=\"Logo\"\n                    style={{\n                        height:'40px',\n                        marginTop:'15px',\n                        display:'block',\n                        // position:'fixed',\n                        top:'33px',\n                        marginLeft:'15px',\n                        height:'33pt'\n                    }}\n                />\n\n            </div>\n          </a>\n          </div>\n          <div\n          style={{\n            height:'40px',\n            marginTop:'15px',\n            display:'block',\n            // position:'fixed',\n            backgroundColor:'transparent',\n            // top:'0px',\n            marginLeft:'25px',\n            height:'33pt',\n            flex:1\n          }}>\n\n          \n          <span\n            style={{\n                // height:'40px',\n                // marginTop:'12px',\n                display:'block',\n                position:'relative',\n                // top:'-50px',\n                marginLeft:'7px',\n                // height:'33pt'\n                fontSize: '15pt',\n                fontWeight:'500',\n                textDecorationLine:'none',\n                color:'black',\n                textAlign:'left',\n                padding:'auto',\n              \n            }}\n          >\n          주식회사 쿼키 \n        \n          </span>\n          </div>\n          <div\n            style={{\n                // height:'40px',\n                // marginTop:'15px',\n                display:'block',\n                // position:'fixed',\n                backgroundColor:'transparent',\n                // top:'0px',\n                marginLeft:'32px',\n                // height:'33pt',\n                flex:2\n            }}\n          >\n            <div\n            style={{\n                // height:'40px',\n                // marginTop:'15px',\n                display:'block',\n                // position:'fixed',\n                backgroundColor:'transparent',\n                // top:'0px',\n                marginLeft:'0px',\n                // height:'33pt',\n                // flex:2\n            }}>\n                <span\n                style={{\n                    fontSize: '15pt',\n                    fontWeight:'500',\n                    textDecorationLine:'none',\n                    color:'black',\n                    textAlign:'left',\n                    padding:'auto',\n                }}\n                >\n                    서울시 강남구 영동대로 511 2749호\n                </span>\n            </div>\n            <br></br>\n            <div\n            style={{\n                // height:'40px',\n                // marginTop:'15px',\n                display:'block',\n                // position:'fixed',\n                backgroundColor:'transparent',\n                // top:'0px',\n                marginLeft:'0px',\n                // height:'33pt',\n                // flex:2\n            }}\n            >\n                <span\n                style={{\n                    fontSize: '15pt',\n                    fontWeight:'500',\n                    textDecorationLine:'none',\n                    color:'black',\n                    textAlign:'left',\n                    padding:'auto',\n                }}\n                >\n                    사업자 등록번호 : 444-81-01756\n                </span>\n            </div>\n            <div\n            style={{\n                // height:'40px',\n                // marginTop:'15px',\n                display:'block',\n                // position:'fixed',\n                backgroundColor:'transparent',\n                // top:'0px',\n                marginLeft:'0px',\n                // height:'33pt',\n                // flex:2\n            }}\n            >\n                <span\n                style={{\n                    fontSize: '15pt',\n                    fontWeight:'500',\n                    textDecorationLine:'none',\n                    color:'black',\n                    textAlign:'left',\n                    padding:'auto',\n                }}\n                >\n                    통신판매업: 2020-서울강남-03319\n                </span>\n            </div>\n            <br></br>\n          </div>\n          </div>\n          <div\n          style={{\n              textAlign:'left',\n              height:'40px',\n              // marginTop:'15px',\n              display:'block',\n              // position:'fixed',\n              backgroundColor:'transparent',\n              // top:'0px',\n              marginLeft:'32px',\n              height:'33pt',\n              flex:2,\n          }}\n          >\n            <div\n            >\n                <a style={{           \n                            textDecorationLine:'none',\n                            textDecorationStyle:'none',\n                            height:\"100%\",\n                            width:\"100%\",\n                            \n                          }} href=\"mailto:help@clip.style\" >\n                <span\n                style={{\n                    fontSize: '15pt',\n                    fontWeight:'500',\n                    textDecorationLine:'none',\n                    color:'black',\n                    textAlign:'left',\n                    padding:'auto',\n                }}\n                >\n                    헬프데스크: help@clip.style\n                </span>\n                </a>\n            </div>\n            <div>\n                <a style={{           \n                    textDecorationLine:'none',\n                    textDecorationStyle:'none',\n                    height:\"100%\",\n                    width:\"100%\",\n                    \n                    }} href=\"mailto:admin@clip.style\" >\n                <span\n                style={{\n                    fontSize: '15pt',\n                    fontWeight:'500',\n                    textDecorationLine:'none',\n                    color:'black',\n                    textAlign:'left',\n                    padding:'auto',\n                }}\n                >\n                    제휴문의: admin@clip.style\n                </span>\n                </a>\n            </div>\n            <br></br>\n            <div>\n                <span\n                style={{\n                    fontSize: '15pt',\n                    fontWeight:'500',\n                    textDecorationLine:'none',\n                    color:'black',\n                    textAlign:'left',\n                    padding:'auto',\n                }}\n                >\n                    © 2021 QWERKY Inc. \n                </span>\n            </div>\n            <div\n                style={{\n                    display:'flex',\n                    flexDirection:'row',\n                    \n                }}\n            >\n                <div>\n                    <a\n                        href=\"/privacypolicy\"\n                        style={{\n                            textDecorationLine:'none',\n                            textDecorationStyle:'none',\n                        }}\n                    >\n                        <span\n                            style={{\n                                fontSize: '15pt',\n                                fontWeight:'500',\n                                textDecorationLine:'none',\n                                color:'black',\n                                textAlign:'left',\n                                padding:'auto',\n                            }}\n                        >\n                                개인정보 처리방침\n                        </span>\n                    </a>\n                </div>\n                <div>\n                    <span\n                    style={{\n                        fontSize: '15pt',\n                        fontWeight:'500',\n                        textDecorationLine:'none',\n                        color:'black',\n                        textAlign:'left',\n                        padding:'auto',\n                    }}\n                    >\n                        &nbsp;|&nbsp;\n                    </span>\n                </div>\n                <div>\n                    <a\n                        href=\"/terms\"\n                        style={{\n                            textDecorationLine:'none',\n                            textDecorationStyle:'none',\n                        }}\n                    >\n                        <span\n                        style={{\n                            fontSize: '15pt',\n                            fontWeight:'500',\n                            textDecorationLine:'none',\n                            color:'black',\n                            textAlign:'left',\n                            padding:'auto',\n                        }}\n                        >\n                            이용약관\n                        </span>\n                    </a>\n                </div>\n            </div>\n            <br></br>\n          </div>\n        </div>\n        </Font>\n    )\n\n}\n\nexport default IntroImage;","/Users/bernardahn/Documents/GitHub/clip/src/components/PrivacyPolicy.js",["378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393"],"import React,{useEffect} from 'react';\nimport './navbar.css';\n// import Logo from './../logo.svg';\nimport {TouchableOpacity,Text,View,Modal,TouchableHighlight,Dimensions} from 'react-native';\nimport NavbarFiller from './NavBarFiller'\nimport Footer from './Footer'\nimport Logo from '../assets/header_logo.png'\nimport { nativeTouchData } from 'react-dom/test-utils';\nimport searchIcon from '../assets/icnSearch.png'\nimport userIcon from '../assets/icnUser.png'\nimport boxIcon from '../assets/icnBox.png'\nimport {BrowserRouter as Router,Switch,Route,Link} from 'react-router-dom'\n\nconst PrivacyPolicy=() => {\n  const [scrolled,setScrolled]=React.useState(false);\n  const [userModalVisible,setUserModalVisible]=React.useState(false);\n  const [cartModalVisible,setCartModalVisible]=React.useState(false);\n  const [height,setHeight]=React.useState(Dimensions.get('window').height)\n  const [width,setWidth]=React.useState(Dimensions.get('window').width)\n\n  const handleScroll=() => {\n    const offset=window.scrollY;\n    if(offset > 200 ){\n      setScrolled(true);\n    }\n    else{\n      setScrolled(false);\n    }\n  }\n  const toggleUserModal=()=>{\n      setUserModalVisible(!userModalVisible)\n  }\n  const toggleCartModal=()=>{\n    setCartModalVisible(!cartModalVisible)\n}\n  const onChange=()=>{\n    setHeight(Dimensions.get('window').height)\n    setWidth(Dimensions.get('window').width)\n    // console.log(height+\" : \"+width)\n  }\n  useEffect(() => {\n    window.addEventListener('scroll',handleScroll)\n    Dimensions.addEventListener('change',onChange)\n  },[])\n\n  let x=['navbar'];\n  if(scrolled){\n    x.push('scrolled');\n  }\n \n  return (    \n    <div>\n    <header className={x.join(\" \")}>\n        <div className=\"headerContainer\">\n        \n            <div className=\"logo\">\n            <a\n                href=\"/clip\"\n            >\n                <img src={Logo} alt=\"Logo\" title=\"Logo\" />\n            </a>\n            </div>\n        </div>\n    </header>\n    <NavbarFiller/>\n    <Text>\n    개인정보 처리방침 ​ (주)쿼키(이하 “회사”)는 통신비밀보호법, 전기통신사업법, 정보통신망 이용촉진 및 정보보호 등에 관한 법률 등 정보통신 서비스 제공자가 준수하여야 할 관련 법령 상의 개인정보 보호 규정을 준수하며, 관련 법령에 의거한 개인정보 취급 방침을 정하여 이용자 권익 보호에 최선을 다하고 있습니다. 본 개인정보 처리 방침은 회사가 제공하는 클립 (CLIP) 서비스에 적용되며 다음과 같은 내용을 포함하고 있습니다. ​ 1. 개인정보 수집 및 이용 현황 회사는 서비스 제공을 위한 최소한의 범위 내에서 이용자의 동의 하에 개인정보를 수집하며, 수집한 모든 개인정보는 고지한 목적 범위 내에서만 사용됩니다. 필수정보 - 수집 항목: 전자메일(아이디), 비밀번호, 이름, 회사명, 회사규모, 직종, 직책, 전화번호, 웹사이트,블로그 또는 SNS주소, 직종, 직책, 전문분야, 회사규모. - 수집 및 이용목적: 본인 확인 및 가입 의사 확인, 회원가입 승인여부 판단, 부정이용 확인∙방지, 상담 및 문의 처리, 회원 맞춤형 정보 제공. - 보유 및 이용기간: 회원 탈퇴 시 즉시 삭제함. 부정이용 방지를 위한 정보(ID, 불량 이용 기록)는 탈퇴DB에서 6개월 후 삭제함. 추가정보 - 수집 항목: 수취인정보(이름, 연락처, 주소), 프로젝트정보(프로젝트 이름, 유형, 규모, 시기 등), 샘플이용정보(적용부위, 시공여부 등), 통화가능 시간. - 수집 및 이용목적: 물품의 주문/배송/취소. 제품 안내 및 상담, 문의 처리, 샘플제공업체 마케팅 정보 제공 - 보유 및 이용기간: 재화 또는 서비스의 제공 목적이 달성된 후 파기(단, 관계법령에 정해진 규정에 따라 법정기간 동안 보관). 거래기록 보존을 위한 정보(ID, 계좌번호, 배송지 주소)는 5년간 보관함(전자상거래 등에서의 소비자보호에 관한 법률). 선택정보 - 수집 항목: 마케팅 정보 수신 동의(휴대폰 번호, 전자메일, SMS/MMS), 뉴스레터 수신 동의(전자메일). - 수집 및 이용목적: 신규 서비스 안내, 설문, 이벤트 관련 정보 및 참여 기회 제공, 광고 및 마케팅 정보 제공. - 보유 및 이용기간: 정보 삭제 또는 이용 정지 요청 및 회원 탈퇴 시 즉시 삭제 ※ 부정이용이란 회원 탈퇴 후 재가입, 허위정보를 통한 물품 주문, 물품 주문 후 구매취소 등을 반복적으로 행하는 등, 이용약관 등에서 금지하고 있는 행위, 명의도용 등의 불·편법 행위 등을 포함합니다. ※ 고객의 권리를 보장해 드리기 위하여 탈퇴 회원 또는 장기 미이용 회원에게 환불 또는 리콜 안내를 목적으로 구매정보를 이용하여 연락을 취할 수 있습니다. ※ 위의 정보는 서비스 이용에 따른 통계∙분석에 이용될 수 있습니다. 2. 개인정보의 공유 및 제공 회사는 “1. 개인정보 수집 및 이용 현황”에서 고지한 범위 내에서만 개인정보를 이용하며, 이용자의 사전 동의 없이는 동 범위를 초과하여 이용하지 않습니다. 물품 주문이 이루어진 경우, 상담 및 배송 등의 원활한 거래 이행을 위하여 관련된 정보를 필요한 범위 내에서 샘플제공업체(제3자)에게 전달합니다. 제공받는 자: 샘플제공 업체 제공 목적: 서비스 제공, 업체 직발송 물품 배송, 제품 안내, 홍보 및 상담, 문의 처리 제공 정보: 수취인정보(이름, 연락처, 주소), 프로젝트정보(프로젝트 이름, 유형, 규모, 시기 등), 샘플이용정보(적용부위, 시공여부 등), 통화가능 시간. 보유 및 이용기간: 재화 또는 서비스의 제공 목적이 달성된 후 파기(단, 관계법령에 정해진 규정에 따라 법정기간 동안 보관) ※ 동의 거부권 등에 대한 고지 개인정보 제공은 서비스 이용을 위해 꼭 필요합니다. 개인정보 제공을 거부하실 수 있으나, 이 경우 서비스 이용이 제한될 수 있습니다. 개인정보 제3자 제공은 샘플 주문시에만 이뤄지며, 명확한 내용은 주문 신청 시 안내하여 드립니다. 3. 개인정보의 파기 수집된 개인정보의 보유•이용기간은 서비스 이용계약 체결(회원가입)시부터 서비스 이용계약 해지(탈퇴신청, 직권탈퇴포함)시까지 입니다. 또한 동의 해지 시 고객의 개인정보를 상기 명시한 정보보유 사유에 따라 일정 기간 저장하는 자료를 제외하고는 지체 없이 파기합니다. 종이에 출력된 개인정보는 분쇄기로 분쇄하거나 소각 등을 통하여 파기하고, 전자적 파일형태로 저장된 개인정보는 기록을 재생할 수 없는 기술적 방법 또는 물리적 방법을 사용하여 파기합니다. 수집•이용목적이 달성된 개인정보의 경우 별도의 DB에 옮겨져 내부규정 및 관련 법령을 준수하여 안전하게 보관되며, 정해진 기간이 종료되었을 때 지체없이 파기됩니다. 이때, 별도의 DB로 옮겨진 개인정보는 회원이 동의한 목적을 초과하거나 혹은 법률이 정한 경우 외의 다른 목적으로 이용되지 않습니다. 4. 고객의 권리와 의무 4.1 고객의 권리 고객 및 법정대리인은 언제든지 수집 정보에 대하여 수정, 동의 철회, 삭제, 열람을 요청할 수 있습니다. 다만, 동의 철회, 삭제 시 서비스의 일부 또는 전부 이용이 제한될 수 있습니다. 회사가 수집한 개인정보는 CLIP 웹페이지에서 - 개인정보 확인 수정 / 주문목록 / 배송조회를 통해 확인할 수 있습니다. CLIP 웹을 통해 직접 확인하지 못하는 정보는 고객센터 help@clip.style에 요청하여 확인할 수 있습니다. 개인정보 동의 철회 및 삭제, 처리 정지를 요청하고자 하는 경우에는 고객센터 help@clip.style을 통해 요청할 수 있습니다. 또한, 고객은 언제든 회원탈퇴를 통해 개인정보의 수집 및 이용 동의를 철회할 수 있습니다. 이러한 요청 시, 서비스의 일부 또는 전부 이용이 제한될 수 있습니다. 또한 법률에 특별한 규정이 있거나 법령상 의무를 준수하기 위하여 불가피한 경우, 다른 사람의 생명·신체를 해할 우려가 있거나 다른사람의 재산과 그 밖의 이익을 부당하게 침해할 우려가 있는 경우, 개인정보를 처리하지 아니하면 정보 주체와 약정한 서비스를 제공하지 못하는 등 계약의 이행이 곤란한 경우로서 정보주체가 그 계약의 해지 의사를 명확하게 밝히지 아니한경우에는 동의 철회, 삭제, 처리 정지가 어려울 수 있습니다. 요청하신 처리가 완료될 때까지 해당 정보를 이용하거나 타인에게 제공하지 않습니다. 또한, 합리적인 사유로 잘못된 개인정보를 제3자에게 이미 제공한 경우, 그 결과를 지체 없이 제3자에게 통지하여 동의 철회, 삭제, 처리 정지하도록 조치합니다. 4.2. 고객의 의무 고객은 자신의 개인정보를 보호할 의무가 있으며, 회사의 귀책사유가 없이 ID(이메일 주소), 비밀번호, 접근매체 등의양도·대여·분실이나 로그인 상태에서 이석 등 고객 본인의 부주의나 관계법령에 의한 보안조치로 차단할 수 없는 방법이나 기술을 사용한 해킹 등 회사가 상당한 주의에도 불구하고 통제할 수 없는 인터넷상의 문제 등으로 개인정보가 유출되어 발생한 문제에 대해 회사는 책임을 지지 않습니다. 고객은 자신의 개인정보를 최신의 상태로 유지해야 하며, 고객의 부정확한 정보 입력으로 발생하는 문제의 책임은 고객 자신에게 있습니다. 타인의 개인정보를 도용한 회원가입 또는 ID등을 도용하여 결제 처리 시 고객 자격 상실과 함께 관계법령에 의거하여 처벌될 수 있습니다. 고객은 아이디, 비밀번호 등에 대해 보안을 유지할 책임이 있으며 제3자에게 이를 양도하거나 대여할 수 없습니다. 고객은 회사의 개인정보보호정책에 따라 보안을 위한 주기적인 활동에 협조할 의무가 있습니다. 5. 자동 수집되는 개인정보 및 거부에 관한 사항 회사는 이용자 맞춤서비스 등을 제공하기 위하여 쿠키(cookie)를 설치 및 운영합니다. 쿠키의 사용 목적과 거부에 관한 사항은 아래와 같습니다. 가. 쿠키란? 쿠키는 웹사이트를 운영하는데 이용되는 서버가 이용자의 브라우저에 보내는 아주 작은 텍스트 파일로서 이용자의 컴퓨터에 저장되어 운영됩니다. 나. 쿠키의 사용 목적 이용자들의 접속 관리, 이용자 별 사용 환경 제공, 이용자 활동 정보 파악, 이벤트 및 프로모션 통계 확인 등을 파악하여 최적화된 맞춤형 서비스를 제공하기 위해 사용합니다. 다. 쿠키의 설치·운영 및 거부 서비스를 이용함에 있어 이용자는 쿠키 설치에 대한 선택권을 가지고 있습니다. 이용자는 웹 브라우저에서 옵션을 설정함으로써 모든 쿠키를 허용 또는 거부 하거나, 쿠키가 저장될 때마다 확인을 거치도록 할 수 있습니다. 쿠키 설치 허용 여부를 지정하는 방법은 다음과 같습니다. Internet Explorer : 웹 브라우저 상단 도구 메뉴 > 인터넷 옵션 > 개인정보 > 개인정보처리 수준 설정Chrome : 웹 브라우저 우측 설정 메뉴 > 도구 > 인터넷 사용기록 삭제 6. 개인정보 보호책임자 및 담당자 안내 고객의 개인정보에 관한 업무를 총괄해서 책임지고, 개인정보와 관련된 불만처리 및 피해구제 등을 위하여 아래와 같이 개인정보 보호책임자 및 담당부서를 지정하여 운영하고 있습니다. 회사가 제공하는 서비스를 이용하면서 발생하는 개인정보 보호 관련 문의, 불만, 피해구제 등에 관한 사항은 아래로 연락하여 문의할 수 있습니다. 개인정보 보호책임자 성명: 부창용 이메일: help@clip.style 개인정보 민원처리 담당부서 부서명: (주)쿼키 고객센터 이메일: help@clip.style 기타 개인정보 침해에 대한 신고나 상담이 필요하신 경우에는 아래 기관에 문의하시기 바랍니다. 대검찰청 사이버범죄 수사단 (www.spo.go.kr / 국번없이 1301) 개인정보 침해 신고 센터 (privacy.kisa.or.kr / 국번없이 118) 경찰청 사이버안전국 (http://cyberbureau.police.go.kr / 국번없이 182) 7. 링크사이트 회사는 홈페이지에 다른 회사의 웹사이트 또는 자료에 대한 링크를 제공할 수 있습니다. 홈페이지에 링크되어 있는 다른 회사의 웹사이트로 옮겨갈 경우 해당 웹사이트의 개인정보처리방침이 적용됩니다. 8. 고지의 의무 이 개인정보 처리방침은 시행일로부터 적용됩니다. 고객의 개인정보 권리에 중요한 변경 사유가 발생하는 경우 최소 14일전에 공지사항을 통하여 고지합니다. 이 외의 다른 변경사항이 발생하는 경우에는 변경사항의 시행 최소 7일 전부터 공지사항을 통해 고지합니다. 현재 개인정보 처리방침 공고일자: 2020년   12월 1일 현재 개인정보 처리방침 시행일자: 2020년   12월 1일\n    </Text>\n    <Footer/>\n    </div>\n\n  )\n\n\n};\n\nexport default PrivacyPolicy;","/Users/bernardahn/Documents/GitHub/clip/src/components/Terms.js",["394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409"],"import React,{useEffect} from 'react';\nimport './navbar.css';\n// import Logo from './../logo.svg';\nimport {TouchableOpacity,Text,View,Modal,TouchableHighlight,Dimensions} from 'react-native';\nimport NavbarFiller from './NavBarFiller'\nimport Footer from './Footer'\nimport Logo from '../assets/header_logo.png'\nimport { nativeTouchData } from 'react-dom/test-utils';\nimport searchIcon from '../assets/icnSearch.png'\nimport userIcon from '../assets/icnUser.png'\nimport boxIcon from '../assets/icnBox.png'\nimport {BrowserRouter as Router,Switch,Route,Link} from 'react-router-dom'\n\nconst PrivacyPolicy=() => {\n  const [scrolled,setScrolled]=React.useState(false);\n  const [userModalVisible,setUserModalVisible]=React.useState(false);\n  const [cartModalVisible,setCartModalVisible]=React.useState(false);\n  const [height,setHeight]=React.useState(Dimensions.get('window').height)\n  const [width,setWidth]=React.useState(Dimensions.get('window').width)\n\n  const handleScroll=() => {\n    const offset=window.scrollY;\n    if(offset > 200 ){\n      setScrolled(true);\n    }\n    else{\n      setScrolled(false);\n    }\n  }\n  const toggleUserModal=()=>{\n      setUserModalVisible(!userModalVisible)\n  }\n  const toggleCartModal=()=>{\n    setCartModalVisible(!cartModalVisible)\n}\n  const onChange=()=>{\n    setHeight(Dimensions.get('window').height)\n    setWidth(Dimensions.get('window').width)\n    // console.log(height+\" : \"+width)\n  }\n  useEffect(() => {\n    window.addEventListener('scroll',handleScroll)\n    Dimensions.addEventListener('change',onChange)\n  },[])\n\n  let x=['navbar'];\n  if(scrolled){\n    x.push('scrolled');\n  }\n \n  return (    \n    <div>\n    <header className={x.join(\" \")}>\n        <div className=\"headerContainer\">\n        \n            <div className=\"logo\">\n            <a\n                href=\"/clip\"\n            >\n                <img src={Logo} alt=\"Logo\" title=\"Logo\" />\n            </a>\n            </div>\n        </div>\n    </header>\n    <NavbarFiller/>\n    <Text>\n   이용약관 ​ 회원 이용약관 제1조 (목적) 본 약관은 (주)쿼키 (이하 “회사”)가 제공하는 관련 서비스 (이하 “서비스”)를 이용함에 있어 회사와 회원의 권리, 의무 및 책임사항을 규정함을 그 목적으로 합니다. ​ 제2조 (용어의 정의) 본 약관에서 사용된 용어의 의미는 다음과 같습니다. 1. “사이트”란 “회사”가 운영하고 있는 인터넷 웹사이트인 clip.style을 의미합니다. 2. “회원”이란 회사와 서비스 이용계약을 체결하여 회원등록을 하고 회사가 제공하는 서비스를 이용하는 개인 또는 기업을 의미합니다. 3. “서비스\"란 “회사”가 “사이트”를 통해 제공하는 모든 컨텐츠와 “회원”이 “회사”에 요청하고, 제공받는 물리적 서비스 및 이와 관련한 모든 부대서비스를 말합니다. 4. “이용자 아이디\" 또는 \"회원 아이디\"라 함은 회원의 식별과 회원의 서비스 이용을 위하여 회원이 선정하고 회사가 부여하는 문자와 숫자의 조합을 말합니다. 5. \"비밀번호\"라 함은 회사의 서비스를 이용하려는 사람이 이용자 아이디를 부여 받은 자와 동일인 임을 확인하고 회원의 권익을 보호하기 위하여 회원이 선정한 문자와 숫자의 조합을 말합니다. 6. “콘텐츠”란 회사가 제작 또는 회원이 제작하여 사이트에 등록한 모든 정보를 의미하며, 부호, 문자, 음성, 이미지 또는 동영상 등으로 표현된 자료 또는 정보를 의미합니다. 제3조 (이용 약관의 효력 및 적용과 변경) 1. 회사는 본 약관을 “사이트\"에 게시하여 서비스를 이용하고자 하는 자 및 이용자가 본 약관의 내용을 확인할 수 있도록 하여야 합니다. 2. 이 약관에 동의하고 회원 가입을 한 회원은 약관에 동의한 시점부터 동의한 약관의 적용을 받고 약관의 변경이 있을 경우에는 변경의 효력이 발생한 시점부터 변경된 약관의 적용을 받습니다. 이 약관에 동의하는 것은 정기적으로 홈페이지를 방문하여 약관의 변경 사항을 확인하는 것에 동의하는 것을 의미합니다. 3. 회사는 본 약관에 명시 되지 아니한 서비스 이용에 대한 특정 조건을 이용정책에 포함시킬 수 있습니다. 본 약관의 일부 조항이 회사에 의해 개정되는 경우, 모든 개정 조항은 본 약관의 현재 버전 및 개정안의 발효일, 개정이유와 함께 발효일 7일 전부터(단, 수정 내용이 이용자에게 불리한 경우에는 14일) 발효일 직전일까지 “사이트”에 게시되거나 이메일 또는 기타 수단을 통하여 통지되어야 합니다.해당 이용정책은 본 약관의 일부를 구성합니다. 4. 회원은 변경된 약관에 대해 거부할 권리가 있습니다. 본 약관의 변경에 대해 이의가 있는 회원은 서비스 이용을 중단하고 회원 탈퇴를 할 수 있습니다. 회원이 변경된 이용 약관의 시행일 이후에도 서비스를 계속 이용하는 경우에는 변경된 약관에 동의한 것으로 봅니다. 제4조 (약관 외 준칙) 1. 이 약관에서 규정하지 않은 사항에 관해서는 약관의 규제 등에 관한 법률, 전기통신 기본법, 전기통신 사업법, 정보통신망 이용촉진 등에 관한 법률 등의 관계법령에 따릅니다. 2. 회원이 회사와 개별 계약을 체결하여 서비스를 이용하는 경우에는 개별 계약이 우선합니다. 제5조 (이용 계약의 성립) 1. 회사의 서비스 이용 계약(이하 “이용 계약”이라 한다)은 서비스를 이용하고자 하는 자의 본 약관과 개인정보 처리 방침의 내용에 대한 동의 및 이용 신청(회원 가입 신청)에 대하여 회사가 승낙함으로써 성립합니다. 2. 서비스를 이용하고자 하는 자가 이용 신청 당시 웹 상의 \"동의함\"에 체크 후 회원 인증 과정을 완료 시 본 약관 및 개인정보 처리 방침에 대하여 동의한 것으로 간주합니다. 3. 제1항의 승낙은 이용 신청자의 본 약관에 대한 동의를 확인하고 웹 상의 안내 및 전자 메일로 통지함으로써 이루어지고 이러한 승낙의 통지가 이용 신청자에게 도달하면 이용 계약이 성립합니다. 4. 회사가 다른 회사와의 협력, 계약을 통해 제공하는 서비스에 대한 내용, 제3자 회사의 의무, 이용자의 권리와 의무 등 상세 사항은 해당 서비스에 대하여 제3자가 제공하는 별도 약관, 운영 정책 등에서 정하는 바에 따릅니다. 이용자가 해당 서비스를 이용할 경우, 제3자가 제공하는 서비스 이용 약관에 대한 동의가 필요할 수 있습니다. 제6조 (서비스 이용 신청) 1. 회원으로 가입하여 본 서비스를 이용하고자 하는 이용 고객은 회사에서 요청하는 제반 정보(이름, 회사명, 생년월일, 전화번호, 전자메일 주소 등)를 제공하여야 합니다 2. 실명으로 등록하지 않거나 허위정보를 제공한 사용자는 일체의 권리를 주장할 수 없습니다. 3. 타인의 명의를 도용하여 이용 신청을 한 회원의 모든 아이디는 삭제 되며, 관계 법령에 따라 처벌을 받을 수 있습니다. 제7조 (이용 신청의 승낙과 제한) 1. 회사는 이용 고객의 회원 신청에 대하여 업무상 또는 기술상의 문제가 없는 경우 서비스 이용을 승낙함을 원칙으로 합니다. 2. 회사는 아래 사항에 해당하는 경우에 대해서는 이용 신청을 승낙하지 아니합니다. 가. 실명이 아니거나 타인의 명의를 이용하여 신청한 경우 나. 이용계약 신청서의 내용을 허위로 기재한 경우 다. 가입신청자가 이 약관에 의하여 이전에 회원자격을 상실한 적이 있는 경우 3. 회사는 아래 사항에 해당하는 경우에는 그 신청에 대하여 승낙 제한 사유가 해소될 때까지 승낙을 유보할 수 있습니다. 가. 회사가 설비의 여유가 없는 경우 나. 회사의 기술상 지장이 있는 경우 다. 회사가 제시하는 회원 가입 절차를 완료하지 않은 경우 라. 기타 회원으로서 부적절한 행위를 할 우려가 있다고 인정되는 경우7 제8조 (서비스의 이용 및 내용) 1. 서비스의 이용은 회사의 업무상 또는 기술상 지장이 없는 한 1일 24시간, 연중무휴로 운영됩니다. 2. 회원은 사이트에 아이디로 접속한 후 별도의 접속 절차 없이 자유롭게 사이트를 이용할 수 있습니다. 3. 사이트는 정보통신 시스템 등의 정기 점검, 보수, 교체, 고장, 통신 두절 등의 사유가 발생한 경우에는 서비스의 제공을 일시 중단할 수 있으며, 사이트에서 공지 또는 전자메일을 통해 회원에게 알립니다. 4. 통제할 수 없는 사유로 인해 발생하는 서비스의 수정, 정지 또는 중단에 대해 회사는 어떠한 방식으로도 책임을 지지않습니다. 5. 회사가 자체 제작한 저작물에 대한 저작권, 기타 지적 재산권은 회사에 귀속합니다. 6. 회원은 사이트를 이용함으로써 얻은 정보를 회사의 사전 승낙 없이 복제, 송신, 출판, 배포, 방송, 기타 방법에 의하여 영리 목적으로 이용하거나 제3자에게 이용하게 하여서는 안 됩니다. 제9조 (서비스에 대한 약관 및 이용 조건) 1. 서비스 이용 자격, 서비스 등록 및 사용제한 가. 서비스는 건축, 인테리어 및 전문 디자이너 회원을 위해 제공되며, 건축, 인테리어 디자인 회사 및 제조업체 또는 관련업종 종사자/회사로 이용 자격이 제한됩니다. 나. 서비스는 국내에 위치한 국내 주소 또는 IP주소를 가진 사용자를 위해 제공되며, 제공불가 지역에서의 서비스 이용신청은 제한됩니다. 다. 서비스 이용을 위해 제출하는 모든 정보는 거짓이 없고, 정확하여야 하며 변경사항 발생 시 항상 최신으로 유지하여야 합니다. 라. 서비스는 회원이 소속된 회사, 업체, 업종의 사업 또는 상업적 목적을 위해 제공 되는 것이며, 단순히 회원 개인의 사용 목적으로 제공되지 않습니다. 마. 제조업체 또는 이와 관련된 회원의 경우, 본 서비스를 경쟁 업체의 샘플을 획득하는 용도로 사용하지 말아야 합니다. 2. 등록 수락 및 제한 가. 회사는 귀하가 서비스 이용 신청을 위해 제공한 정보에 따라 귀하가 회원으로 수락될 것인지 여부를 결정할 권리가 있습니다. 나. 회사는 등록 정보 및 기타 요소(건축 / 인테리어 디자이너 여부 또는 관련 업종 종사자/회사 인지 여부 등) 을 검토하는데 걸리는 시간에 따라 즉시 수락되거나 며칠이 소요 될 수 있습니다. 다. 귀하는 회사의 판단에 따라 서비스 회원으로 수락되지않을 수도 있음을 회원 신청 단계에서 고려하여야 합니다. 3. 비밀번호 및 계정 관리 가. 회원 등록이 수락되는 경우, 회원 계정에 액세스 하려면 비밀번호가 필요합니다. 나. 등록 계정과 관련하여 발생하는 모든 활동에 대한 책임은 회원에게 있으므로 회원은 비밀번호가 노출되지 않도록 주의하여야 합니다. 다. 등록계정은 회원이 소속된 회사, 업체, 업종의 사업 또는 상업적 목적을 위해서만 사용하여야하며, 다른 사람에게 등록계정을 사용할 수 있도록 허가하거나 양도 할 수 없습니다. 라. 이메일 메시지를 포함한 등록 계정을 통해 게시 또는 표시되는 모든 콘텐츠와 샘플 주문 등 서비스 이용에 대한 책임은 회원에게 있습니다. 마. 회원은 등록계정의 비밀번호가 무단으로 사용되거나 노출된 경우, 회사에 즉시 알려야합니다. 또한 회사가 등록계정의 비밀번호가 더이상 안전하지 않다고 판단될 경우, 회원에게 비밀번호 변경을 요청할 수 있습니다. 바. 회원은 등록계정의 비밀번호를 제 3자에게 공개하거나 제 3자가 등록 계정에 액세스하도록 허용해서는 안됩니다. 또한 등록계정을 판매하거나 양도 할 수 없습니다. 4. 회원은 회원이 소속된 회사, 업체, 업종의 사업 또는 상업적 목적(샘플링된 재료의 구매여부 결정)을 위해 샘플을 주문하는 것 이외에 다른 목적으로 샘플을 주문할 수 없습니다. 5. 서비스에 대한 회사의 책임 가. 회사가 제공하는 컨텐츠 또는 샘플은 회사가 소유하거나 판매하는 것이 아니며, 회사는 회원과 제조업체 간의 중개자 역할을 하며 제조업체를 대신하여 회원에게 컨텐츠 및 샘플을 제공하는 에이전트 역할을 합니다. 나. 회원과 제조업체는 회사가 회원과 제조업체 간에 생성된 계약의 당사자가 아니라는 것에 동의합니다. 다. 회사는 단순히 회원과 제조업체를 연결하는 사이트 및 서비스를 운영합니다. 라. 서비스를 통해 연결된 회원과 제조업체 간의 소통 및 계약, 구매결정 여부는 회원의 책임입니다. 마. 회사가 제공하는 샘플 및 콘텐츠에 관한 모든 정보는 제조업체로부터 제공받은 정보를 기반으로 합니다. 따라서 회사는 정보가 정확하다는 것을 보증할 수 없으며, 정보의 오류나 누락에 대해 책임지지 않습니다. 바. 회원은 샘플 신청 이후, 필요한 정보 등에 대해 개별적으로 검토하고, 필요한 경우 제조업체에 직접 정보를 요청해야합니다. 사. 회사는 회원과 제조업체 간에 체결되는 계약과 관련하여 어떠한 책임도 지지 않습니다. 6. 서비스요금 가. 회사는 일반적으로 서비스에 대한 수수료를 회원에게 청구하지 않습니다. 나. 회사는 서비스에 대한 요금을 변경할 권리가 있습니다. 회사가 요금을 변경하는 경우, 회사는 먼저 영향을 받는 당사자에게 이를 고지하고 지불 확인을 요청해야합니다. 7. 주문관련 가. 회원이 플랫폼을 통해 샘플을 요청하거나 주문을 하면, 회사는 회원에게 연락하여 샘플 주문 내용을 확인하고, 이와 관련한 추가 제안을 할 수 있습니다. 나. 회사는 월-목요일 주문 기준 다음 영업일 배송을 원칙으로 하며, 샘플 주문이 배송마감 시간 이후에 이루어진 경우, 2번째 영업일 이내에 샘플을 수령 할 수 있도록 합니다. 다. 주문물품 배송 및 배송가능 지역은 운송업체에 따라 달라지며, 천재지변등의 통제할 수 없는 이유로 인해 배송이 중단 될 수 있습니다. 라. 주문물품이 회원에게 도착하지 않은 경우, 어떠한 경우에도 회사는 책임지지 않습니다. 8. 커뮤니케이션 - 회사는 회원이 요청한 샘플을 제조업체가 제공할 수 있도록 회원의 동의에 따라 회원의 연락처 정보를 포함한 프로젝트 정보를 제조업체와 공유합니다. 제조업체는 회원에게 제공된 샘플과 관련된 프로모션, 제안 및 관련 정보를 제공합니다. - 회사는 제조업체가 회원에게 직접 제공하는 프로모션, 제안 및 정보가 제품 대한 책임이 없습니다. - 회사는 회원의 동의에 따라 회사(또는 회원의 요청에 따라 샘플 및 제품정보를 제공하는 모든제조업체)가 요청한 샘플에 대한 후속 조치 목적, 특정 제품 또는 서비스 소개 및 기타 판촉 목적으로 SMS 문자메시지 및 이메일을 발송할 수 있습니다. - 샘플의 사용 목적과 프로젝트 또는 이용 정보등 제조업체와의 네트워킹 및 리드 생성에 필요한 정보를 요구할 수 있으며, 해당 데이터를 제조업체에 전달할 수 있습니다. 제10조 (서비스 콘텐츠에 대한 저작권의 귀속 및 제한) 1. 회사 및 공급 업체 (라이센스 제공자 포함)는 플랫폼 및 서비스에 대한 모든 소유권을 보유하고 있습니다. 플랫폼에는 회사 및 공급업체 및 라이센스 제공자의 저작권이있는 자료, 상표 및 기타 독점 콘텐츠 및 정보가 포함됩니다. 2. 오디오, 비디오, 로고, 정보, 데이터, 소프트웨어, 문서, 서비스, 다운로드 또는 플랫폼에 포함 된 기타 유사한 자료 (“콘텐츠\")는 저작권 및 기타 지적 재산권 법, 국제 협약 및 기타 지적 재산권에 의해 보호됩니다. 3. 회원은 본 이용약관으로 인하여 서비스를 소유하거나 서비스에 관한 저작권을 보유하게 되는 것이 아니라, 회사로부터 서비스의 이용을 허락 받게 되는 바, 서비스는 정보 취득 또는 개인 용도로만 제공되는 형태로 회원이 이용할 수 있습니다.개인 용도 및 단순정보 용으로 콘텐츠를 다운로드할 때에는 다음 사항을 준수하여야 합니다. 가. 다운로드한 콘텐츠를 수정하지 않음 나. 다운로드한 콘텐츠에 포함 된 모든 저작권 및 소유권 정보를 포함하여 보관 다. 다운로드한 콘텐츠에 대한 제한 또는 사용 요구 사항을 준수 라. 단, 단순 다운로드 이외에 플랫폼에서 콘텐츠 데이터를 스크래핑하는 행위 금지 4. 회원은 회사를 이용함으로써 얻은 정보 중 회사에게 지적 재산권이 귀속된 정보를 회사의 사전 승낙 없이 복제, 송신, 출판, 배포, 방송, 기타 방법에 의하여 다음과 같은 용도로 사용하여서는 안됩니다. 가. 콘텐츠 재생산 또는 판촉 용도 나. 상업적 판매, 재판매 또는 배포 목적 (사전에 서면 허가를 받거나 플랫폼 이용 약관에 명시된 특정 권한이 제공된 정보 제외) 다. 본 이용 약관의 어떠한 내용도 여기 또는 플랫폼의 다른 곳에서 명시 적으로 제공된 경우를 제외하고 MB 콘텐츠를 포함하여 플랫폼 또는 플랫폼에 포함 된 모든 자료를 사용할 수있는 라이센스 또는 권리를 부여하는 것으로 해석되지 않습니다. 5. 회원은 콘텐츠의 오류가 있을 경우 이의를 제기 할 수 있습니다. 단,  회사는 회원의 견해를 반드시 반영 할 필요는 없으며, 회사는 콘텐츠의 내용이나 자료에 대해 보증하지 않습니다. 제 11조(서비스의 제공 및 변경) 1. 회사는 이용 감소로 인한 원활한 서비스 제공의 곤란 및 수익성 악화, 기술적 사양 변경 및 불가피한 사정, 서비스 제공과 관련한 회사 정책의 변경 등 기타 상당한 이유가 있는 경우에 운영상, 기술상의 필요에 따라 제공하고 있는 전부 또는 일부 서비스를 변경 또는 중단할 수 있습니다. 이 경우에는 변경된 서비스의 내용을 공지합니다. 단, 회사는 불가피한 여건이나 사정이 있는 경우, 위 공지를 하지 않을 수 있습니다. 2. 회사는 무료로 제공되는 서비스의 일부 또는 전부를 회사의 정책 및 운영의 필요상 수정, 중단, 변경할 수 있으며, 이에 대하여 관련법에 특별한 규정이 없는 한 회원에게 별도의 보상을 하지 않습니다. 3. 서비스의 내용, 이용 방법, 이용 시간에 대하여 변경 또는 서비스 중단이 있는 경우에는 변경 또는 중단될 서비스의 내용 및 사유와 일자 등은 그 변경 또는 중단 전에 회사 사이트 또는 서비스 내 공지사항 화면 등 회원이 충분하게 인지할 수 있는 방법으로 30일의 기간을 두고 사전에 공지합니다. 제12조 (정보의 제공 및 광고의 게재) 1. 회사는 회원에게 서비스 이용에 필요가 있다고 인정되거나 서비스 개선 및 회원 대상의 서비스 소개 등의 목적으로 하는 각종 정보를 회원이 수신 동의한 경우, 전자메일, SMS(Short Message Service), MMS(Multimedia Message Service)로 제공할 수 있습니다. 2. 회사는 제공하는 서비스와 관련되는 정보 또는 광고를 서비스 화면, 홈페이지 등에 게재할 수 있으며, 회원들에게 전자메일 및 SMS, MMS를 통해 알릴 수 있습니다. 3. 회사는 서비스 상에 게재되어 있거나 본 서비스를 통한 광고주의 판촉 활동에 회원이 참여하거나 교신 또는 거래를 함으로써 발생하는 모든 손실과 손해에 대해 회사의 고의, 중과실로 인한 경우가 아닌 한 책임을 지지 않습니다. 4. 본 서비스의 회원은 서비스 이용 시 노출되는 광고 게재에 대해 동의하는 것으로 간주합니다. 제13조 (회사의 의무) 1. 회사는 본 약관에서 정한 바에 따라 계속적, 안정적으로 서비스를 제공할 수 있도록 최선의 노력을 다해야 합니다. 2. 회사는 회원이 안전하게 서비스를 이용할 수 있도록 회원의 개인 정보(신용 정보 포함)보호를 위해 보안 시스템을 갖추어야 하며 개인정보 취급 방침을 공시하고 준수합니다. 3. 회사는 서비스 이용과 관련하여 회원으로부터 제기된 의견이나 불만이 정당하다고 인정할 경우에는 이를 처리하여야 합니다. 회원이 제기한 의견이나 불만 사항에 대해서는 연락 가능한 수단을 통하여 회원에게 처리 과정 및 결과를 전달합니다. 4. 회사는 유료 결제와 관련한 결제 사항 정보를 상법 등 관련 법령의 규정에 의하여 5년 이상 보존합니다. 5. 천재지변 등 예측하지 못한 일이 발생하거나 시스템의 장애가 발생하여 서비스가 중단될 경우 이에 대한 손해에 대해서는 회사가 책임을 지지 않습니다. 다만 자료의 복구나 정상적인 서비스 지원이 되도록 최선을 다할 의무를 집니다. 6. 회사는 회원의 개인정보를 본인의 승낙 없이 타인에게 누설, 배포하지 않습니다. 단, 전기통신 관련 법령 등 관 법령에 의하여 관련 국가기관 등의 요구가 있는 경우에는 그러하지 아니합니다. 7. 회원이 등록한 자료로 인하여 사이트의 원활한 운영에 영향을 미친다고 판단될 시, 등록된 모든 자료를 회원의 사전 동의 없이 삭제할 수 있습니다. 제14조 (회원의 의무) 1. 회원은 관계 법령과 본 약관의 규정 및 기타 회사가 통지하는 사항을 준수하여야 하며, 기타 회사의 업무에 방해되는 행위를 해서는 안됩니다. 2. 회원은 서비스 이용 등록 시, 그리고 서비스 이용과정에서 회사에 제출하는 모든 등록 정보를 정확하고, 최신상태로 유지하여야 합니다. 3. 회원은 서비스를 이용하여 얻은 정보를 회사의 사전 동의 없이 복사, 복제, 번역, 출판, 방송 기타의 방법으로 사용하거나 이를 타인에게 제공할 수 없습니다. 4. 회원은 회사가 제공하는 서비스를 이용함에 있어 다음 각 호에 해당하는 내용을 목적으로 하거나 의도하는 행위를 하여서는 안됩니다. 가. 다른 회원의 아이디를 부정 사용하는 행위 나. 범죄 행위를 목적으로 하거나 기타 범죄 행위와 관련된 행위 다. 타인의 명예를 훼손하거나 모욕하는 행위 라. 타인의 지적 재산권 등의 권리를 침해하는 행위 마. 해킹 행위 또는 바이러스의 유포 행위 바. 타인의 의사에 반하여 광고성 정보 등 일정한 내용을 계속적으로 전송하는 행위 사. 서비스의 안정적인 운영에 지장을 주거나 줄 우려가 있다고 판단되는 행위 아.사이트의 정보 및 서비스를 이용한 영리 행위 자. 그 밖에 선량한 풍속, 기타 사회 질서를 해하거나 관계 법령에 위반하는 행위 제15조 (회원의 가입해지/서비스 중지/자료 삭제) 1. 회원은 언제든지 서비스 내 “탈퇴” 기능을 통하여 이용 계약 해지 신청을 할 수 있으며, 회사는 관련법 등이 정하는 바에 따라 이를 즉시 처리하여야 합니다. 2. 회원이 계약을 해지할 경우, 관련법 및 개인정보 처리 방침에 따라 회사가 회원정보를 보유하는 경우를 제외하고는 해지 즉시 회원의 모든 데이터는 소멸됩니다. 3. 다음의 사항에 해당하는 경우 회사는 사전 동의 없이 가입 해지나 서비스 중지 조치를 취할 수 있습니다. 가. 회원의 의무를 성실하게 이행하지 않은 경우 나. 타 이용자에게 심한 모욕을 주거나, 서비스 이용을 방해한 경우 다. 회사의 서비스 또는 사이트의 정보를 회사의 동의 없이 호스팅하거나 회사의 서버 또는 네트워크를 방해 또는 방해시도 하는 경우 라. 회사에 제공한 정보가 허위 또는 오도의 소지가 있거나 조작되었을 경우 마. 신원을 숨기려고 하거나, 공개할 권리가 없는 정보를 제공한 경우 바. 회원 자격 또는 회사의 서비스 또는 그 일부를 재판매하거나 재판매 시도하는 경우 사. 허가받지 않은 웹사이트 또는 웹페이지 링크로의 접근을 유도하는 경우 아. 정보통신 윤리위원회 등 관련 공공기관의 시정 요구가 있는 경우 자. 제3자의 지적재산권을 침해한 경우 차. 불법 콘텐츠인 경우 카. 부당한 방법으로 평점을 조작하거나 타인의 서비스 이용에 방해를 초래하는 경우 타. 회사의 동의나 허락, 승인 없이 홍보성 게시 글이나 광고를 게시하는 경우 파. 본 서비스 목적에 맞지 않는 분야에 정보를 활용하여 사회적 물의가 발생한 경우기타 본 서비스 명예를 훼손하였거나 회사가 판단하기에 적합하지 않은 목적으로 회원 가입을 하였을 경우 하. 회사는 회원 가입이 해제된 경우에 해당 회원의 정보를 임의로 삭제할 수 있습니다. 제16조 (휴면 아이디) 1. 회원이 12개월 (365일) 이상 로그인 하지 않은 경우 해당 회원의 아이디는 휴면아이디가 되어 회원 로그인을 비롯한 모든 서비스에 대한 이용이 정지되고, 회사는 회원이 서비스 사용을 위해 등록한 정보를 삭제할 수 있으며, 회사는 휴면아이디의 개인정보를 다른 아이디와 별도로 관리합니다. 2. 회사는 1항에 의한 서비스 이용 정지 30일 전 전자메일을 통하여 서비스 이용 정지에 대하여 안내하고, 서비스 이용 정지가 되는 경우 다시 전자메일을 통하여 서비스 이용 정지 사실에 대하여 고지합니다. 3. 회원은 서비스 이용 정지 이후에 사이트 상에서 직접 본인 확인을 거쳐 휴면 상태 해지 신청을 하는 즉시 다시 정상적으로 서비스를 이용할 수 있습니다. 제17조 (손해 배상) 회사는 회원에게 무료로 제공하는 서비스의 이용과 관련하여 개인정보 보호 정책에서 정하는 내용에 해당하지 않는 사항에 대하여는 어떠한 손해도 책임을 지지 않습니다. 제18조 (면책 조항) 1. 회사는 천재지변, 전쟁 및 기타 이에 준하는 불가항력으로 인하여 서비스를 제공할 수 없는 경우에는 서비스 제공에 대한 책임이 면제됩니다. 2. 회사는 기간 통신 사업자가 전기통신 서비스를 중지하거나 정상적으로 제공하지 아니하여 손해가 발생한 경우 책임이 면제됩니다. 3. 회사는 서비스용 설비의 보수, 교체, 정기점검, 공사 등 부득이한 사유로 발생한 손해에 대한 책임이 면제됩니다. 4. 회사는 회원의 귀책 사유로 인한 서비스 이용의 장애 또는 손해에 대하여 책임을 지지 않습니다. 5. 회사는 이용자의 컴퓨터 오류에 의해 손해가 발생한 경우, 또는 회원이 신상 정보 및 서비스 이용 관련하여 회사가 요청한 정보를 부실하게 기재하여 손해가 발생한 경우 책임을 지지 않습니다. 6. 회사는 회원이 서비스를 이용하여 기대하는 수익을 얻지 못하거나 상실한 것에 대하여 책임을 지지 않습니다. 7. 회사는 회원이 서비스를 이용하면서 얻은 자료로 인한 손해에 대하여 책임을 지지 않습니다. 또한 회사는 회원이 서비스를 이용하며 타 회원으로 인해 입게 되는 정신적 피해에 대하여 보상할 책임을 지지 않습니다. 8. 회사는 사이트에 게재한 각종 정보, 자료, 사실의 신뢰도, 정확성 등 내용에 대하여 책임을 지지 않습니다. 9. 회사는 이용자 상호간 및 이용자와 제 3자 상호 간에 서비스를 매개로 발생한 분쟁에 대해 개입할 의무가 없으며, 이로 인한 손해를 배상할 책임도 없습니다. 10. 회원이 서비스를 이용함에 있어 행한 불법 행위나 본 약관 위반 행위로 인하여 회사가 당해 회원 이외의 제3자로부터 손해 배상 청구 또는 소송을 비롯한 각종 이의 제기를 받는 경우 당해 회원은 자신의 책임과 비용으로 회사를 면책 시켜야 하며, 회사가 면책되지 못한 경우 당해 회원은 그로 인하여 회사에 발생한 모든 손해를 배상하여야 합니다. 11. 회사는 회원이 게재한 정보, 자료, 사실의 신뢰도, 정확성 등 내용에 관해서는 책임을 지지 않습니다. 12. 회원이 발송한 메일 내용에 대한 법적인 책임은 회원에게 있습니다. 13. 회사는 회원 간 또는 회원과 제3자 상호간에 서비스를 매개로 하여 거래 등을 한 경우에는 책임이 면제됩니다. 제19조 (회원의 개인정보 보호) 회사는 이용자의 개인정보 보호를 위하여 노력해야 합니다. 이용자의 개인정보 보호에 관해서는 정보통신망 이용 촉진 및 정보 보호 등에 관한 법률에 따르고, 사이트에 \"개인정보 처리 방침\"을 고지합니다. 제20조 (신용 정보의 제공 활용 동의) 회사가 회원 가입과 관련하여 취득한 회원의 개인 신용정보를 타인에게 제공하거나 활용하고자 할 때에는 신용정보의 이용 및 보호에 관한 법률 제32조의 규정에 따라 사전에 그 사유 및 해당 기관 또는 업체 명 등을 밝히고 해당 회원의 동의를 얻어야 합니다. 제21조 (분쟁 해결) 1. 회사는 이용자가 제기하는 정당한 의견이나 불만을 반영하고 그 피해를 최소화하기 위하여 노력합니다. 2. 회사는 이용자로부터 제출되는 불만 사항 및 의견은 우선적으로 그 사항을 처리합니다. 다만, 신속한 처리가 곤란한 경우에는 이용자에게 그 사유와 처리 일정을 즉시 통보해야 합니다. 3. 회사와 이용자 간에 발생한 전자상거래 분쟁과 관련하여 이용자의 피해 구제 신청이 있는 경우에는 공정거래 위원회 또는 시, 도지사가 의뢰하는 분쟁 조정 기관의 조정에 따를 수 있습니다. 제22조 (재판권 및 준거법) 1. 이 약관의 해석 및 회사와 회원 간의 분쟁에 대하여서는 대한민국의 법을 적용합니다. 2. 이 약관에 명시되지 않은 사항은 통신 심의 관련법 등 관계 법령과 상관습에 따릅니다. 3. 서비스 이용으로 발생한 분쟁에 대해 소송이 제기되는 경우 회사의 본사 소재지를 관할하는 법원을 관할 법원으로 합니다. [부칙] 본 약관은  2020년 12월 1일부터 적용합니다. 브랜드 파트너 이용약관 본 클립 서비스 이용 약관(이하 “본 약관”)은 (주)쿼키 (그 계열회사, 임직원 및 계약관계에 따른 이해당사자를 포함하며, 이하 총칭하여 “회사”)가 제공하는 서비스 이용에 대한 조건을 정하고 있으며, 서비스 이용자(그 계열회사, 임직원, 계약관계에 따른 이해관계인 및 이해당사자를 포함하며, 이하 총칭하여 “이용자”) 및 회사 간의 계약을 구성한다. 회사의 서비스를 이용하고자 하는 자는 서비스를 등록 및 사용함에 있어서 본 약관에 따라 본 약관, 서비스 약관, 이용정책 등에 구속되며 본 약관을 준수할 것에 동의한다. 제 1조 (목적) 본 약관의 목적은 회사와 이용자의 권리, 의무 및 책임, 서비스 이용 절차 및 기타 관련 사항을 정함으로써 상호 우호적인 거래관계에 기여하고 궁극적으로는 양 당사자의 이익을 증진시키고 상호 발전을 촉진시키는 데 있습니다. 제 2조 (정의) 본 약관에서 사용된 용어의 의미는 다음과 같습니다. 본 약관에서 정의되지 않은 용어는 일반 거래 관행에 따라 정의된 의미를 가집니다. 1. “클립”이란 이용자가 회사의 서비스를 이용할 수 있도록 정보통신 시설/장비/네트워크를 통해 회사가 제공하는 서비스 플랫폼을 의미합니다. 2. “서비스”란 회사가 제공한 모든 서비스 및 추가 서비스를 의미합니다. 3. “개별 서비스”란 회사가 제공하는 서비스로서 독립적인 서비스로 분류하는 서비스를 말하며, 해당 서비스와 관련하여 제공되는 추가 서비스, 자료 등을 포함하는 의미입니다 4. “이용정책”이란 “클립” 서비스에 대한 이용정책, 이용 약관, 규칙 및 지침 및 서비스 이용과 관련하여 회사가 설정한 기타 정책(향후 회사가 개정하는 내용 포함)을 의미합니다. 5. “이용자 전용 시스템”이란 회사가 관련 정보를 상호 교환하기 위해 이용자에게 제공하는 온라인 포털 사이트 및 툴을 의미하며, 이용자가 서비스를 이용하는 데 필요한 기능을 갖추고 있습니다. 6. “서비스 이용 수수료”란 서비스 이용 시 회사가 제공하는 다양한 서비스의 이용에 대하여 이용자가 회사에 지불하는 금액을 의미합니다. 7. “서비스 이용 정보”란 이용자가 회사로부터 취득하거나 본 약관, 본 약관·클립·이용자 전용 시스템의 이용에 따른 거래 및 서비스를 통해 취득 또는 생산된 모든 데이터, 정보, 자료 등을 의미합니다. 제 3조 (약관의 게시, 유효성 및 개정) 1. 회사는 본 약관을 클립 웹페이지 또는 이용자 전용 시스템에 게시하여 서비스를 이용하고자 하는 자 및 이용자가 본 약관의 내용을 확인할 수 있도록 하여야 합니다. 2. 회사는 본 약관에 명시 되지 아니한 서비스 이용에 대한 특정 조건을 이용정책에 포함시킬 수 있으며, 관련 서비스 웹페이지, 이용자 전용 시스템 등을 통해 이를 통지할 수 있습니다. 해당 이용정책은 본 약관의 일부를 구성합니다. 3. 본 약관은 회사가 수시로 개정할 수 있는 이용정책을 포함하며, 이용자는 본 약관, 이용정책에 동의합니다. 본 약관, 이용정책에 동의하는 것은 양 당사자의 인감이 날인된 계약의 이행과 동일한 효력을 갖습니다. 4. 본 약관은 회사와 이용자 간의 서비스 이용 합의에 대한 기본 조건이며, 회사는 특정 개별 서비스에 관한 사항을 별도의 약관에 정할 수 있습니다. 만약 회사가 해당 서비스 관련 웹페이지, 이용자 전용 시스템 등을 통해 개별 이용약관을 통지하고 이용자가 이에 동의하는 경우에는, 개별 이용약관은 본 약관 및 서비스 이용약관과 함께 서비스 이용 계약의 일부를 구성하게 됩니다. 5. 이용자가 동의한 경우, 개별 이용약관은 해당 개별 서비스에 관해서만 본 약관 및 서비스 이용약관에 우선합니다. 이 경우, 본 약관 및 서비스 이용약관은 보완적인 효력을 가집니다. 6. 만약 본 약관의 일부 조항이 회사에 의해 개정되는 경우, 모든 개정 조항은 본 약관의 현재 버전 및 개정안의 발효일, 개정이유와 함께 발효일 7일 전부터(단, 수정 내용이 이용자에게 불리한 경우에는 14일) 발효일 직전일까지 “클립” 웹페이지, 이용자 전용 시스템 등에 게시되거나 이메일 또는 기타 수단을 통하여 통지되어야 합니다. 7. 만약 회사가, 상기 제7항에 따라 본 약관의 개정안을 공개하거나 통지하는 동안, 7일(이용자에게 불리한 개정안의 경우에는 14일) 이내에 의사를 밝히지 않는 이용자는 의사를 밝힌 것으로 간주된다고 명확하게 알리거나 통지 하였음에도 불구하고, 이용자가 거부 의사를 명시적으로 나타내지 않는 경우에는, 이용자는 본 약관의 개정안에 동의하는 것으로 간주됩니다. 제 4조 (이용자에 대한 통지) 1. 회사는 이메일이나 기타 서면 등의 방법으로 이용자에게 통지할 수 있습니다. 2. 회사가 모든 이용자들에게 통지해야 하는 경우에는, 제1항에 따라 통지하는 대신에, 적어도 1주일 간 관련 웹페이지, 이용자 전용 시스템 등에 해당 통지내용을 게시할 수 있습니다. 제 5조 이용자 등록 1. “회사가 제공하는 서비스를 이용하고 이용자 등록을 신청하고자 하는 자(이하 “등록 신청자”)는 본 약관에 동의하고 회사가 제공하는 등록 신청서 양식에 필요한 정보 등을 등록해야 합니다. 이 경우, 회사는 등록 신청자에게 추가적인 정보의 제공을 요청할 수 있습니다. 2. 본 약관은 회사가 제1항에 따른 등록 신청을 수락하면 효력이 발생됩니다. 이 경우, 회사는 관련 웹페이지에서 제4조에 명시된 수락 의사를 통보하거나 공개할 것이며, 본 약관은 수락 의사가 등록신청자에게 전달되거나 공개된 시점에 양 당사자에 대해 유효하게 효력이 발생됩니다. 3. 만 19세 이상의 사업자(자연인 또는 법인 불문)는 상기 제1항의 등록 신청 자격이 있습니다. 등록 신청자는 실명으로 등록 신청을 해야 합니다. (법인인 경우, 법인의 이름으로 하여야 하며, 이하 본 조에서 동일하게 적용됩니다). 실명이 아닌 이름을 사용하거나 다른 사람의 정보를 도용하는 등록 신청자는 서비스 이용이 제한되거나 관련 법률 및 규정에 따라 처벌 받을 수 있습니다. 4. 회사는 등록신청자에게 신원 확인 절차를 요구할 수 있으며, 그러한 절차가 불가능할 경우에는 회사는 신원 확인을 위한 관련 자료를 제출하도록 등록 신청자에게 요구할 수 있습니다. 5. 회사는 다음의 경우에는 등록 신청을 거부할 수 있습니다. 가. 등록신청자가 회사와의 거래관계에서 계약 조건 및 관련 법률, 규정 등을 위반한 경우; 나. 등록신청자가 제공한 정보에 허위 정보, 정보 누락, 오타 등이 포함되어 있는 경우; 다. 등록신청자가 미성년자인 경우; 라. 등록신청자가 실명으로 등록 신청을 하지 않는 경우; 마. 성명, 주민등록번호, 사업자등록번호, 법인등록번호 및 기타 바. 주요 등록 정보가 이미 등록된 다른 이용자와 동일한 경우; 사. 본 약관 및 서비스 이용약관기존약관또는사용조건포함)의 해지/취소로부터 2개월 이내에 재등록 신청서가 제출된 경우; 아. 등록신청이 불법 또는 불공정한 것으로 밝혀진 경우. 6. 이용자는 등록정보에 변경이 있을 경우, 즉시 등록된 정보를 회사가 정한 방식으로 변경하거나 ,해당 변경 사실을 회사에 통지하여야 합니다. 7. 이용자는 회사에 정보를 제공하거나 등록정보를 변경할 때, 허위 정보를 제공해서는 아니 되며, 관련 자료를 즉시 제공하여야 합니다. 8. 이용자는이용자및제3자가회사에부정확한정보또는관련 자료를 제공함으로써(등록 정보의 업데이트를 하지 아니한 경우 포함) 이용자 및 제3자가 입은 손해에 대해 책임을 져야 하며, 그러한 손해에 대해 회사에게 배상하고 회사를 면책시켜야 합니다. 제 6조 (관련자료 제출 등) 1. “제5조 제1항,제4항 및 제7항에 따라 이용자가 제공 또는 등록한 정보의 정확성을 확인하기 위하여, 회사는 관련 법령 및 규정이 허용하는 한도 내에서 이용자에게 관련 자료의 제공을 요구할 수 있습니다. 2. 이용자가 정당한 사유없이 정보 및 관련 자료를 제공하지 않는 경우, 회사는 본 약관의 해지/취소, 서비스 사용 제한 또는 결제 금액의 지급 보류를 포함하여 필요한 조치를 취할 수 있습니다. 이 경우, 이용자는 모든 관련 위험 및 책임을 부담하여야 합니다. 제 7조 (서비스 이용 수수료) 1. 회사는 서비스의 성격, 제공 비용, 방법, 시장 조건, 사업 유형 및 이용자의 사용 패턴 등을 고려하여 서비스에 대한 서비스 이용 수수료를 결정합니다. 2. 회사는 이용 정책상 서비스 이용 수수료의 종류, 요율, 청구방법 및 지급 방법, 세금 계산서 발행 등에 관한 특정 조건을 명시하고, 이용자 전용 시스템, 서비스 관련 웹페이지 등을 통해 동일 내용을 통지하여야 합니다. 3. 회사는 필요에 따라 서비스 이용 수수료를 신규로 설정 또는 변경할 수 있으며, 서비스 유형별로 서비스 이용 수수료의 계산 및 지급 방법 등을 달리 정할 수 있습니다. 이 경우 회사는 상기 제2항의 방식에 따라 신규 설립된 서비스 이용 수수료 및 변경된 서비스 이용 수수료의 세부 사항을 통지하여야 합니다. 4. 상기 제3항에 따른 회사의 지급(결제) 방법에 신용카드 또는 추가적인 수수료가 부과되는 기타 다른 지급 수단이 포함되어 있는 경우에는, 해당 추가 수수료는 그 지급 수단을 이용하는 이용자에게 부과됩니다. 5. 회사는 서비스 유형 별로 지정된 날짜에 이용자에게 서비스 이용 수수료에 대한 세금계산서를 발행해야 합니다. 제 8조 (지급 정산 및 유예) 1. 이용자는 회사의 사이트를 통한 마케팅 활동에 대한 대가의 비용을 회사에 지급하여야 합니다. 단, 계약이 해지된 이후는 이를 적용치 아니한다. 2. 회사는 월말기준 해당월 거래 내역을 작성하여 익월 5일한 이용자에게 제공합니다. 3. 회사는 거래 내역을 근거로 정산, 세금계산서를 발행하여 비용을 이용자에게 매 월 7일한 청구하고 이용자는 10일한 회사에게 이를 지급한다. 4. 배송비, 포장비, 운영비 등을 사이트 운영 및 샘플관리와 관련한 모든 항목을 포함됩니다. 제 9조 (본 약관의 기간 및 해지) 1. “본 약관 및 개별서비스의 기간은 본 약관이 회사와 이용자 간에 효력이 발생된 때부터 시작하여 본 약관에서 명시된 대로 회사 또는 사용자에 의해 본 약관이 해지되는 시점에 종료됩니다. 달리 명시 되지 아니하는 한, 본 약관 및 다른 개별 서비스에 대한 이용자 약관은 개별 서비스의 종료 또는 중단으로 인해 종료되거나 중단되지 않습니다. 2. 회사는 이용자에게 이를 통지함으로써 본 약관 및 서비스 이용약관을 해지하거나 서비스를 중단할 수 있습니다. 3. 이용자는 회사가 정한 방식으로 해지 의사를 회사에 통지함으로써 어떠한 이유로든 본 약관 또는 서비스 이용약관을 해지할 수 있습니다. 이 경우, 해지 의사를 통지하기 전에, 이용자는 서비스 이용을 중단해야 하며, 이용자가 서비스를 이용하여 거래를 이행한 경우, 이용자는 해당 거래를 완료하고 해당 구매자와 회사에게 지급할 금액을 지급해야 합니다. 4. 본 조항에 의거하여 본 약관이 해지되는 경우, 회사는 이용자에게 부여된 모든 혜택을 철회할 수 있으며, 해지 사유 및 해당 사유의 해소 여부를 고려하여 이용자의 재신청을 거부할 수 있습니다. 5. 이용자는 본 조항에 의거하여 본 약관이 해지된 후에도, 구매자를 보호하기 위하여 해지일 현재 아직 처리되지 않은 주문에 관한 배송, 교환, 환불, 수리 등 필요한 조치를 취하여야 합니다. 6. 이용자가 판매한 상품으로 인해 발생하는 이용자의 의무 및 책임에 관한 제8조, 제10조, 제11조, 제12조, 제13조 및 제16조 및 기타 조항은 본 조항에 따라 본 약관이 해지된 이후에도 유효하게 존속됩니다. 제 10조 (회사 및 이용자 간 관계) 1. 회사와 이용자는 서로 독립적이며, 본 약관 및 서비스 이용약관은 회사와 이용자 간의 합작투자, 판매업자, 프랜차이즈, 대리인, 고용 또는 독점 관계를 구성하지 않습니다. 2. 이용자는 회사의 사전동의없이 회사의 명칭, 상표, 로고 등을 자신의 재량으로 사용할 수 없으며, 회사와 이용자 간의 관계를 표시, 홍보 또는 과장 해서는 안됩니다. 3. 본 약관 및 서비스 이용약관 전부는 회사와 이용자 간의 관계에서만 유효하며, 제3자는 본 약관 및 서비스 이용약관과 관련하여 어떠한 권리, 청구 등을 주장할 수 없습니다. 4. 이용자는 이용자를 대신하여 회사가 공급하는 상품 또는 용역 서비스의 샘플의 이용에 대하여 모든 책임을 부담합니다. 제 11조 (권리의 부여 및 합의) 1. 이용자는 회사에게, 지리적 및 시간적 제한 없이, 이용자가 회사에 등록 또는 제공하는 모든 정보, 자료 등을 사용, 복제, 구현, 공개, 배포, 변경, 수정, 공개 전송, 임대, 파생 상품 제작, 상업적 및 비상업적인 목적으로 사용할 로열티 없는 권리 및 라이선스를 부여해야 합니다. 단, 회사는 이용자가 제공한 양식에서 이용자 상표를 변경하지 않습니다. (상표의 상대적 비율이 동일하게 유지되는 한, 상표의 크기를 재조정하는 데 필요한 범위까지는 제외) 2. 회사에 등록 또는 제공되는 모든 정보, 자료 등이 항상 정확하고 완전하며 유효하다는 것을 보장하기 위해, 이용자는 필요한 경우 최신 정보, 자료 등을 즉시 제공하거나 등록해야 합니다. 3. 회사는 상표권자에 의한 특정 상표의 삭제 요청을 준수해야 합니다. 단, 회사가 상표권자로부터 해당 상표에 대한 권리 또는 라이선스를 취득하지 않고 해당 상표를 사용할 수 있도록 관련 법령에서 허용하는 경우에는(예를 들어, 저작권의 정당한 사용, 상표의 기술적 사용, 제3자가 부여한 유효한 권리 또는 라이선스 등), 회사는 그러하지 아니합니다. 4. 이용자는 서비스 이용과 관련하여 생산된 모든 정보가 회사의 자산이며 회사의 재량으로 회사가 수집하여 사용할 수 있음을 인정하고 이에 동의합니다. 5. 이용자는 “클립” 서비스와 관련하여 이용자가 제공한 제안, 의견, 아이디어, 개선사항 또는 기타 대응이나 자료(관련 기술 포함)를 회사의 재량으로 공개, 재생산, 수정, 배포 및 사용할 수 있음을 인정하고 이에 동의합니다. 6. 본 조항에 따른 의무는 본 약관 및 개별 서비스의 종료 후에도 회사 및 이용자에 대하여 유효하게 존속됩니다. 제 12조 (이용자의 보증) 1. 이용자는 (i) 관련 법률 및 규정에 따라 합법적이고 완전한 자격을 갖추고 본 약관 및 서비스 이용약관에 따라 권리, 라이선스 및 권한을 부여하는 데 필요한 모든 권리 및 권한을 보유하고 있으며, (ii) 이용자가 회사에 제공하거나 회사가 사용할 수 있는 모든 정보 및 자료는 항상 정확하고 완전, 유효하며, (iii) 이용자는 본 약관 및 서비스 이용약관에 따른 자신의 의무를 완전히 이행하여야 하고 관련 법령 및 규정을 준수함을 진술 및 보증합니다. 2. 이용자는 “국제상거래에있어서외국공무원에대한뇌물방지법”, “부정청탁및 금품등수수의금지에관한법률” 등 국내 부패방지 관련 법령 및 미국 해외부패방지법 (FCPA), 영국 뇌물방지법 (Bribery Act) 등 해외 부패방지 관련 법령을 위반하지 아니하였음을 진술 및 보증하며, 향후에도 위 법령들을 위반하거나 회사가 위 법령들을 위반하게 되는 원인이 될 어떠한 행위도 하지 아니함을 진술 및 보증합니다. 3. 이용자는 이용자 혹은 이용자를 직간접적으로 50% 이상 소유하고 있는 법인이 국제제재 적용 대상이 아니함을 진술 및 보증합니다. 4. 이용자는 본 약관 및. 서비스에 따른 의무 이행 및 거래수행, 그의 상품, 자료 등으로 인하여 회사와 그 임직원에게 발생한 청구, 소송, 조사, 벌금, 검사, 행정적 조치 및 그에 따른 책임, 보상, 손해, 비용 등으로부터 회사와 임직원을 면책시키고 방어하며 보상해야 합니다. 5. 청구, 소송, 조사, 벌금, 검사, 행정적 조치 등이 회사에 악영향을 미칠 가능성이 있다고 판단되는 경우, 회사는 자신의 비용으로 이에 대응하거나 이에 개입할 수 있습니다. 이 경우, 이용자는 회사의 사전 서면 동의 없이(해당 동의는 합리적 이유 없이 보류되어서는 안됨), 어떠한 절차에 연루되거나 어떠한 주장에 동의할 수 없습니다. 6. 본 조항에 따른 의무는 본 계약 및 개별 서비스의 종료 후에도 회사와 이용자에 대하여 유효하게 존속됩니다. 제 13조 (비밀 유지) 1. 이용자는 서비스 사용중 자신이 인지하거나 취득한 회사 또는 서비스에 관한 어떠한 정보(서비스 이용 정보, 직접 또는 간접적으로 취득한 기술 및 사업 정보, 고객 정보 및 문서, 전자 파일 등과 같은 형식을 취하는 기타 그 밖의 정보, 본 약관에서 명시된 당사자들의 권리 의무에 관한 세부사항 등을 포함하나 이에 제한되지 않음, 이하 “기밀정보”)도 본 약관의 이행, 서비스의 사용, 서비스를 통한 상품의 구매자와의 거래 수행 등을 위한 목적 이외의 목적으로 사용해서는 안됩니다. 2. 이용자는 모든 기밀정보가 회사 소유이며 자산가치를 지니고 있음을 인정하고, 본 약관 및 서비스 이용약관에서 달리 명시되지 아니하는 한, 기밀 정보 보호를 위해 합리적인 조치를 취해야 합니다. 3. 이용자는 회사의 사전 서면동의없이 기밀정보를 복사, 복제또는 가공하거나 제3자에게 제공, 판매, 홍보 또는 공개할 수 없으며, 고의 또는 과실로 인한 제3자에 대한 기밀 정보 유출에 대하여 모든 책임을 부담합니다(제3자에 대한 손해 및 복구를 포함하나 이에 제한되지 않음). 4. 본조항에 따른 의무는 본 약관 및. 개별 서비스의 종료 후에도 회사와 이용자에 대하여 유효하게 존속됩니다. 제 14조  (ID 및 비밀번호 관리) 1. ID 및 비밀번호는 서비스를 이용하기 위해 이용자 전용 시스템(또는 회사가 제공하는 다른 툴)에 접속하기 위한 기간 동안에만 사용될 수 있습니다. 2. 이용자는 회사의 귀책사유가 아닌 사유로 인하여 발생한 ID 또는 비밀번호의 유출, 양도 또는 대여로 인해 발생하는 모든 손실 및 손해에 대하여 책임을 부담합니다. 3. 이용자가 자신의 ID나 비밀번호가 도난 당하거나 권한 없는 제3자에 의해 사용되었다는 것을 인지한 경우, 이용자는 즉시 이를 회사에 통지하여야 합니다. 이 경우, 회사는 신속하게 해당 문제를 해결하기 위해 최선을 다합니다. 제 15조 (이용자 개인정보 보호) 1. 회사는 이용자가 동의한 서비스 운영 이외의 목적으로 이용자가 서비스 이용을 위해 제공한 개인정보를 이용하지 않습니다. 회사가 그러한 정보를 새로운 목적으로 사용하거나 제3자에게 제공하고자 하는 경우에는, 그러한 사용 또는 제공의 목적 등을 이용자에게 통지하고, 해당 사용 또는 제공 시점에 이용자로부터 별도의 동의를 얻어야 합니다. 단, 관련 법령 및 규정에서 달리 정하고 있는 경우에는 그러하지 아니합니다. 2. 회사는 이용자가 개인정보의 수집, 이용 및 제공에 대한 동의를 거부할 경우 이용이 제한되는 서비스를 특정하여야 하며, 회사는 필수적이지 않은 개인정보의 수집, 이용 및 제공에 대한 동의를 거부한 이용자에 대해서 서비스 이용 약관을 제한하거나 거부해서는 안됩니다. 3. 이용자의 개인정보를 제3자에게 제공할 필요가 있는 경우, 이용자의 개인정보를 보호하기 위하여 회사는 관련 법령이 정하는 바에 따라 이용자의 동의를 얻어야 하며, 회사가 이용자의 개인정보 처리를 제3자에게 위탁하는 경우, 회사는 “이용자 개인정보보호 정책(필요한 경우, 본 정책은 서비스 유형에 따라 다를 수 있음)”을 통해 위탁 관련 세부 사항을 공개해야 합니다. 제 16조 (양도의 금지 등) 1. 이용자는 회사의 사전 서면 동의없이 본 약관 및 서비스 이용약관에 따른 권리 및 의무를 제3자에게 양도할 수 없습니다. 2. 본 약관 및 서비스 이용약관은 이용자 및 이용자의 승계인 및 양수인에 대하여 법적으로 구속력을 가집니다. 제 17조 (윤리규정 준수) 1. 회사와 이용자는 공정하고 투명한 윤리경영을 추진하여 상호간의 신뢰를 구축하고 지속 가능한 발전을 위해 다음의 의무사항을 준수해야 합니다. 가. 회사는 이용자 및 관계자 혹은 제3자와 거래시 어떠한 경우에도 금품, 선물, 향응, 편의 또는 접대를 요구하거나 받는 등의 행위를 하지 않습니다. 나. 이용자는 회사와의 계약 이행과정에서 불공정행위를 하거나 금품, 선물, 향응, 편의 또는 접대 등을 요구하거나 제공하지 않습니다. 다. 이용자는 회사의 임직원 및 관계자 혹은 제3자가 대가를 요구하면서 고의적으로 업무를 지연하거나 불이익을 제공하는 등 부도덕한 행위를 하는 경우에는 회사의 윤리경영 담당부서로 즉시 신고하여야 합니다. 2. 회사와 이용자는 본약관, 회사와 이용자 간의 제반 약정사항 및 법령을 준수하며, 이용자는 회사의 임직원, 기타 관련자 및 이해관계자와 부정한 목적으로 본 약관에 따른 서비스를 악용하지 않을 책임을 부담합니다. 3. 회사 및 이용자가 제1항의 의무를 위반한 경우 위반 당사자는 상대방 당사자에 대하여 위반내용에 따른 거래 중지, 계약 해지 등의 책임을 부과합니다. 4. 제 3항에 의하여 거래중지, 계약해지 등의 거래제한 조치를 받은 당사자는 거래 제한 조치를 취한 당사자에 대하여 손해배상청구 및 기타 민.형사상의 책임, 행정상의 책임의 일체의 이의를 제기하지 않습니다. 제 18조  (손해배상) 1. 일방 당사자가 자신의 귀책사유로 인해 본 서비스의 사용 및 본 약관의 이행과 관련하여 상대방 당사자에게 손해를 초래한 경우, 상대방 당사자가 입은 손해에 대해 배상하여야 합니다. 2. 이용자의 관련 법령 및 규정, 본 약관, 서비스 이용약관, 이용자 정책 등 위반으로 인하여 회사의 명예훼손을 포함한 유무상의 손해가 당사에게 발생한 경우, 이용자는 회사가 입은 해당 손해에 대하여 전액 배상하여야 합니다. 이와 관련하여, 회사가 제 3자에게 발생한 손해에 대한 배상 책임이 있는 경우에는, 이용자는 회사가 지급해야 하는 손해 및 기타 관련 우발 지출(이자, 변호사 비용 및 기타 방어 비용 포함)에 대하여 전적으로 책임을 부담합니다. 제 19조 (회사의 권한 및 면책) 1. 일방 당사자가 자신의 귀책사유로 인해 본 서비스의 사용 및 본 약관의 이행과 관련하여 상대방 당사자에게 손해를 초래한 경우, 상대방 당사자가 입은 손해에 대해 배상하여야 합니다. 2. 회사는 “클립” 서비스의 내용, 외관, 디자인, 기능 및 기타 양상을 결정할 수 있습니다. 3. 회사는 본 약관 및 서비스 이용약관에서 명시된 제한된 목적을 위해 필요한 경우가 아니면 이용자 및 회원의 대리인으로 행동하지 않습니다. 4. 회사는 합리적인 통제를 넘어 발생하는 사유, 사건등으로 인해 본 약관 및 서비스에 따른 의무 이행의 지연 또는 불이행에 대해 책임을 지지 않습니다. 5. 회사는 관련 법령이 허용하는 한도 내에서 본 약관 및. 서비스로 인해 발생하는 투자 손실, 이익 손실, 사업 기회 손실 등에 대해 어떠한 보증도 제공하지 않으며, 회사는 이에 대해 책임 지지 않습니다. 또한, 본 약관이나 특정 거래와 관련하여 발생하는 회사의 총 책임은 해당 청구를 유발한 특정 서비스와 관련하여 이용자가 회사에 지난 6개월 동안 지급한 총 금액을 초과하지 않습니다. 제 20조  (준거법 및 관할) 1. 본 약관 및 서비스 이용약관에 대한 회사와 이용자 간의 해석차이로 인하여 발생하는 모든 분쟁은 대한민국 법에 따라 규율됩니다. 2. 본 약관 및 서비스 이용으로 인하여 회사 및 이용자 간에 발생하는 모든 분쟁/소송은 서울 중앙지방법원에 관할권이 있습니다. [부칙] 본 약관은  2020년 12월 1일부터 적용합니다.\n    </Text>\n    <Footer/>\n    </div>\n\n  )\n\n\n};\n\nexport default PrivacyPolicy;","/Users/bernardahn/Documents/GitHub/clip/src/components/BrandsDropDown.js",["410","411","412","413","414","415","416","417","418","419","420","421","422","423","424"],"/Users/bernardahn/Documents/GitHub/clip/src/components/CategoryDropDown.js",["425","426","427","428","429","430","431","432","433","434","435","436","437","438"],"/Users/bernardahn/Documents/GitHub/clip/src/components/SearchPage.js",["439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528"],"/Users/bernardahn/Documents/GitHub/clip/src/components/UseDropDown.js",["529","530","531","532","533","534","535","536","537","538","539","540","541"],"/Users/bernardahn/Documents/GitHub/clip/src/components/Pagination.js",["542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562"],"import fetch from 'node-fetch';\nimport React,{useEffect} from 'react';\nimport {TouchableOpacity,Text,View,Modal,Image,TouchableHighlight,Linking,Dimensions} from 'react-native';\nimport xIcon from '../assets/x.png'\nconst queryString = require('query-string');\n\nfunction Pagination(props) {\n    const[currentPage,setCurrentPage]=React.useState(1)\n    const[endPage,setEndPage]=React.useState(0)\n    const[pageNeighbours,setPageNeighbours]=React.useState(2)\n    const[betweenPages,setBetweenPages]=React.useState([])\n    // useEffect(() => {\n    // },[])\n    useEffect(() => {\n        setCurrentPage(props.currentPage)\n        setEndPage(props.endPage)\n        var array=[]\n        for(var i= props.currentPage-2;i<props.currentPage+3;i++){\n            array.push(i)\n        }\n        if(array.indexOf(1)!=-1){\n            for(var i=0;i<array.indexOf(1)+1;i++){\n                array.push(array[array.length-1]+1)\n            }\n            array=array.splice(array.indexOf(1)+1)\n        }\n        if(array.indexOf(props.endPage)!=-1){\n            for(var i=0;i<array.length-array.indexOf(props.endPage);i++){\n                if(array[0]-1>1){\n                    array.unshift(array[0]-1)\n                } \n            }\n            array.splice(array.indexOf(props.endPage))\n        }\n        setBetweenPages(array.slice())\n\n\n    },[props.currentPage,props.endPage])\n    // useEffect(()=>{\n        \n    // },[props.endPage])\n    const handleMoveLeft = function(){\n        setCurrentPage(currentPage-(pageNeighbours*2-1))\n    }\n    const handleMoveRight = function(){\n        setCurrentPage(currentPage+(pageNeighbours*2-1))\n    }\n    if(endPage!=1){\n        return(\n            <div\n                style={{\n                    position:'relative',\n                    display:'flex',\n                    flexDirection:'row',\n                    backgroundColor:'transparent',\n                    padding:'15px'\n                }}\n            >\n                <TouchableOpacity\n                onPress={()=>{\n                    props.currentPageTo(1)\n                }}\n                style={{\n                    backgroundColor:1==currentPage?'rgb(255,123,88)':'transparent',\n                    // border:'1px solid rgb(255,123,88)',\n                    width:'30px',\n                    height:'30px',\n                    justifyContent:'center',\n                    alignItems:'center',\n                    textAlign:'center',\n                    padding:'auto'\n                }}\n                \n                >\n                    <Text\n                        \n                    >\n                        1\n                    </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                    style={{\n                        backgroundColor:'transparent',\n                        // border:'1px solid rgb(255,123,88)',\n                        width:'30px',\n                        height:'30px',\n                        justifyContent:'center',\n                        alignItems:'center',\n                        textAlign:'center',\n\n                    }}\n                    onPress={()=>{\n                    props.leftPageJump()\n                }}>\n                    <Text>\n                        &lt;\n                    </Text>\n                </TouchableOpacity>\n\n                {betweenPages.map((pageNumber,index)=>\n                    <TouchableOpacity\n                    onPress={()=>{\n                        props.currentPageTo(pageNumber)\n                        }}\n                        style={{\n                        backgroundColor:pageNumber==currentPage?'rgb(255,123,88)':'transparent',\n                        // border:'1px solid rgb(255,123,88)',\n                        width:'30px',\n                        height:'30px',\n                        justifyContent:'center',\n                        alignItems:'center',\n                        textAlign:'center',\n                        padding:'auto'\n                    }}\n                        \n                        >\n                        <Text>\n                            {pageNumber}\n                        </Text>\n                    </TouchableOpacity>\n                )}\n\n                <TouchableOpacity\n                    style={{\n                        backgroundColor:'transparent',\n                        // border:'1px solid rgb(255,123,88)',\n                        width:'30px',\n                        height:'30px',\n                        justifyContent:'center',\n                        alignItems:'center',\n                        textAlign:'center',\n\n                    }}\n                    onPress={()=>{\n                        props.rightPageJump()\n                    }}>\n                    <Text>\n                        &gt;\n                    </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                    style={{\n                        backgroundColor:endPage==currentPage?'rgb(255,123,88)':'transparent',\n                        // border:'1px solid rgb(255,123,88)',\n                        width:'30px',\n                        height:'30px',\n                        justifyContent:'center',\n                        alignItems:'center',\n                        textAlign:'center',\n\n                    }}\n                    onPress={()=>{\n                    props.currentPageTo(endPage)\n                }}\n                >\n                    <Text>\n                        {endPage}\n                    </Text>\n                </TouchableOpacity>\n            </div>\n\n        )\n    }\n    else{\n        return(\n            <TouchableOpacity\n                onPress={()=>{\n                    props.currentPageTo(1)\n                }}\n                style={{\n                    backgroundColor:1==currentPage?'rgb(255,123,88)':'transparent',\n                    // border:'1px solid rgb(255,123,88)',\n                    width:'30px',\n                    height:'30px',\n                    justifyContent:'center',\n                    alignItems:'center',\n                    textAlign:'center',\n                    padding:'auto'\n                }}\n                \n                >\n                    <Text\n                        \n                    >\n                        1\n                    </Text>\n                </TouchableOpacity>\n        )\n        \n    }\n}\nexport default Pagination;",["563","564"],"/Users/bernardahn/Documents/GitHub/clip/src/components/PartDetail.js",["565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592"],"/Users/bernardahn/Documents/GitHub/clip/src/components/ClipBoard.js",["593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620"],"/Users/bernardahn/Documents/GitHub/clip/src/components/MoodboardDetail.js",["621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647"],"/Users/bernardahn/Documents/GitHub/clip/src/components/MoodClipBoard.js",["648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675"],"import React,{useEffect} from 'react';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport NavBarFiller from './NavBarFiller';\nimport Pagination from './Pagination';\nimport {TouchableOpacity,Text,View,Modal,Image,TouchableHighlight,Linking,Dimensions,textInput} from 'react-native';\nimport xIcon from '../assets/x.png';\nconst queryString = require('query-string');\n\nfunction MoodClipBoard(props){\n    const [height,setHeight]=React.useState(Dimensions.get('window').height)\n    const [width,setWidth]=React.useState(Dimensions.get('window').width)\n    const [clipBoardData,setClipBoardData]=React.useState([])\n    const [checkButtonChecked,setCheckButtonChecked]=React.useState([])\n    // const[clipBoardDataDetail,setClipBoardDataDetail]=React.useState([])\n    const [boardBuilding,setBoardBuilding]=React.useState(false)\n    const [refresh,setRefresh]=React.useState(0)\n    const [newBoard,setNewBoard]=React.useState(false)\n    const [inputValue,setInputValue]=React.useState(\"\")\n    const [makeButtonEnable,setMakeButtonEnable]=React.useState(false)\n    const onChange=()=>{\n        setHeight(Dimensions.get('window').height)\n        setWidth(Dimensions.get('window').width)\n        // console.log(height+\" : \"+width)\n      }\n    const clipBoardInfo=(qStr)=>{\n    // console.log(qStr)\n    fetch('/clipboardInfo?'+qStr\n    )\n    .then(res=>res.json())\n    .then((incomingData)=>{\n        console.log(incomingData)\n        setClipBoardData(incomingData.sort(function(a,b){\n            var textA = a.cb_name.toUpperCase()\n            var textB = b.cb_name.toUpperCase()\n            return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n        }))\n        })\n    .catch(err=>{\n        console.log(err)\n    })\n    }\n    // const clipBoardDetailInfo=(qStr)=>{\n    //     // console.log(qStr)\n    //     fetch('/clipboardDetailInfo?'+qStr\n    //     )\n    //     .then(res=>res.json())\n    //     .then((incomingData)=>{\n    //         console.log(incomingData)\n    //         setClipBoardDataDetail([...clipBoardDataDetail,...incomingData])\n    //         })\n    //     .catch(err=>{\n    //         console.log(err)\n    //     })\n    //     }\n    const checkboxClicked=(index,e,cb_no,details)=>{\n        console.log('clicked')\n        console.log(details.cb_no)\n        console.log(props.moodboard_num)\n        var mem_no=undefined\n        if(localStorage.login!=undefined){\n            mem_no=JSON.parse(localStorage.login).message.split('_')[0]\n            //parsed.mem_no=mem_no \n            console.log(mem_no)\n        }\n        else{\n            mem_no=\"\"\n        }\n        fetch('/ScrapClipboard?'+\n            queryString.stringify({\n                    mem_no:mem_no,\n                    cb_no:details.cb_no,\n                    ce_type:\"MOODBOARD\",\n                    ce_detail:props.moodboard_num\n                })\n        )\n        .then(res=>res.json())\n        .then((incomingData)=>{\n            console.log(incomingData)\n            setRefresh(refresh+1)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n        \n\n\n        \n        \n      }\n      const updateInputValue=(e)=>{\n          setInputValue(e.target.value)\n          if(e.target.value!=\"\"){\n              setMakeButtonEnable(true)\n          }\n          else{\n              setMakeButtonEnable(false)\n          }\n      }\n      const addClipboard=(cb_name)=>{\n        var mem_no=undefined\n        if(localStorage.login!=undefined){\n            mem_no=JSON.parse(localStorage.login).message.split('_')[0]\n        }\n        else{\n            mem_no=\"\"\n        }\n        console.log({mem_no:mem_no,cb_name:cb_name})\n        fetch('/AddClipboard?'+\n            queryString.stringify({\n                    mem_no:mem_no,\n                    cb_name:cb_name\n                })\n        )\n        .then(res=>res.json())\n        .then((incomingData)=>{\n            console.log(incomingData)\n            //setNewBoard(!newBoard)\n            //setRefresh(refresh+1)\n            window.location.reload()\n        })\n        .catch(err=>{\n            console.log(err)\n        })       \n      }\n    const materialNumberMatch=(materialNumber,object)=>{\n        var value=false\n        for(var i=0; i<object.detail.list_material.length; i++){\n            // console.log(object.detail.list_material[i].mt_no)\n            // console.log(materialNumber)\n            // console.log(object.detail.list_material[i].mt_no==materialNumber)\n            if(object.detail.list_material[i].mt_no==materialNumber){\n                value=true\n            }\n        }\n        console.log('number match = '+value)\n        return value\n    }\n    useEffect(() => {\n        Dimensions.addEventListener('change',onChange)\n        // const parsed = queryString.parse(props.location.search);\n        var parsed = {}\n        //console.log(localStorage.login==undefined)\n        if(localStorage.login!=undefined){\n            var mem_no=undefined\n            mem_no=JSON.parse(localStorage.login).message.split('_')[0]\n            parsed.mem_no=mem_no \n        }\n        else{\n            parsed.mem_no=\"\"\n        }\n        parsed.cb_type='INDIV'\n        console.log(parsed)\n        clipBoardInfo(queryString.stringify(parsed)) \n        console.log('q = '+JSON.stringify(parsed))\n\n        \n      },[])\n      useEffect(() => {\n        var parsed = {}\n        // console.log(localStorage.login==undefined)\n        if(localStorage.login!=undefined){\n            var mem_no=undefined\n            mem_no=JSON.parse(localStorage.login).message.split('_')[0]\n            parsed.mem_no=mem_no \n        }\n        else{\n            parsed.mem_no=\"\"\n        }\n        parsed.cb_type='INDIV'\n        console.log(parsed)\n        clipBoardInfo(queryString.stringify(parsed)) \n  \n      },[props.refresh,refresh])\n    useEffect(()=>{\n        // console.log(\"clipboard length \")\n        // console.log(clipBoardData.length == 0)\n        // if(clipBoardData.length!=0){\n        //     for(var i=0;i<clipBoardData.length;i++){\n        //         console.log(clipBoardData[i].cb_no)\n        //         clipBoardDetailInfo(queryString.stringify({cb_no:clipBoardData[i].cb_no}))\n        //     }\n        // }\n        // console.log(clipBoardData)\n        console.log(clipBoardData)\n        if(clipBoardData.length!=0){\n            var temp=checkButtonChecked.slice()\n            // console.log(clipBoardData)\n            for(var i=0;i<clipBoardData.length;i++){\n                //console.log(clipBoardData[i].detail.list_material)\n                var checked=false\n\n                for(var j=0; j<clipBoardData[i].detail.list_moodboard.length;j++){\n                    if(props.moodboard_num==clipBoardData[i].detail.list_moodboard[j].mb_no){\n                        checked=true\n                    }\n                }\n                temp[i]=checked\n            }\n            console.log(temp)\n            setCheckButtonChecked(temp)\n            //setRefresh(refresh+1)\n        }\n        \n        \n    },[clipBoardData])\n    // useEffect(()=>{\n    //     console.log(clipBoardDataDetail)\n    // })\n    if(newBoard){\n        return (\n            <div\n            style={{\n            position:'fixed',\n            height:'100vh',\n            width:'100vw',\n            top:0,\n            left:0,\n            backgroundColor:'rgba(0,0,0,0.5)',\n            display:'block',\n        //   padding:'160px',\n            zIndex:101\n            }}\n        >\n        <div\n        style={{\n            paddingTop:'100px',\n            paddingLeft:'65px',\n            paddingRight:'65px'\n        }}\n        >\n            <div\n            style={{\n                textAlign:'left',\n                // margin:'25pt'\n                paddingLeft:'0px',\n                paddingRight:'0px',\n                backgroundColor:'transparent'\n            }}\n            >\n            \n            \n            \n            \n            </div>\n\n\n            <div\n            style={{\n            borderRadius:'10px',\n            backgroundColor:'white',\n            width:'100%',\n            height:'300px',\n            paddingTop:'15px',\n            // columnCount:3,\n            // flexwrap:'wrap',\n            // flexDirection:'column',\n            // display: 'grid',\n            // gridTemplateColumns: 'auto auto',\n            // // padding:'100px',\n            overflowY: 'scroll',\n            }}\n            >\n                <div\n                style={{\n                height:'25px',\n                width:'25px',\n                backgroundColor:'transparent',\n                position: 'absolute',\n                top:'110px',\n                left:'75px',\n                zIndex:102,\n                }}\n            >\n                <TouchableOpacity\n                onPress={()=>{\n                    // console.log(detailedCategoryData)\n                    props.toggleClipBoard()\n                    setNewBoard(false)\n                }}\n                >\n                <img\n                src={xIcon}\n                style={{\n                    height:'25px',\n                    width:'25px',\n                }}\n                >\n                </img>\n                </TouchableOpacity>\n            </div>\n            \n                <View\n                style={{\n                    backgroundColor:'white',\n                    height:'298px',\n                    width:'100%',\n                    borderBottomLeftRadius:'10px',\n                    borderBottomRightRadius:'10px'\n\n                }}\n                >\n                    <View\n                        style={{\n                            position:'relative',\n                            top:0,\n                            height:'30px',\n                            width:'100%',\n                            backgroundColor:'white',\n                            borderTopLeftRadius:'10px',\n                            borderTopRightRadius:'10px',\n                            borderBottom:'1px solid rgb(221,221,221)'\n                        }}\n                    >\n                    <Text\n                        style={{\n                            fontWeight:700,\n                        }}\n                    >새로운 클립보드 생성</Text>\n                    </View>\n\n                <div\n                    style={{\n                    display: 'block',\n                    textAlign:'left',\n                    padding:'15px',\n                    overflowY:'scroll',\n                    backgroundColor:'white',\n                    height:'100%'\n                }} \n                >\n                    <Text\n                        style={{\n                            fontWeight:700\n                        }}\n                    >보드명</Text>\n                    <div>\n                        <input \n                            style={{\n                                overflow:'hidden', \n                                width:'100%',\n                                height:'40px',\n                                padding:'12px 20px',\n                                margin:\"8px 0\",\n                                border:\"1px solid #ccc\",\n                                borderRadius:'4px',\n                                boxSizing:'border-box'\n                            }}\n                            value={inputValue} \n                            onChange={updateInputValue}\n                            placeholder={'입력'}\n                        />\n                    </div>\n                </div>\n                <div>\n                <TouchableOpacity\n                    style={{\n                        position:'absolute',\n                        bottom:0,\n                        height:'50px',\n                        width:'100%',\n                        backgroundColor:'transparent',\n                        borderBottomLeftRadius:'10px',\n                        borderBottomRightRadius:'10px',\n                        zIndex:100\n                    }}\n                    onPress={()=>{\n                        console.log('make a new board')\n                        //setNewBoard(!newBoard)\n                        \n                        addClipboard(inputValue)\n                        // setRefresh(refresh+1)\n                        // setInputValue('')\n                        \n                    }}\n                    disabled={\n                        !makeButtonEnable\n                    }\n                >\n                    <View\n                        style={{\n                            backgroundColor:makeButtonEnable==true ? 'white':'silver',\n                            borderTop:'1px solid rgb(221,221,221)',\n                            zIndex:200\n                        }}\n                    >\n                    <Text\n                        style={{\n                            lineHeight:'50px',\n                            fontWeight:700,\n                            color:makeButtonEnable==false ? 'grey':'black'\n                        }}\n                    >\n                        새로 만들기\n                    </Text>\n                    </View>\n                </TouchableOpacity>\n                </div>\n                </View>\n                {/* <Text>{props.material_num}</Text> */}\n            </div>\n        </div>\n    </div>\n        );\n    }\n    else{\n        return (\n            <div\n            style={{\n            position:'fixed',\n            height:'100vh',\n            width:'100vw',\n            top:0,\n            left:0,\n            backgroundColor:'rgba(0,0,0,0.5)',\n            display:'block',\n        //   padding:'160px',\n            zIndex:101\n            }}\n        >\n        <div\n        style={{\n            paddingTop:'100px',\n            paddingLeft:'65px',\n            paddingRight:'65px'\n        }}\n        >\n            <div\n            style={{\n                textAlign:'left',\n                // margin:'25pt'\n                paddingLeft:'0px',\n                paddingRight:'0px',\n                backgroundColor:'transparent'\n            }}\n            >\n            \n            \n            \n            \n            </div>\n    \n    \n            <div\n            style={{\n            borderRadius:'10px',\n            backgroundColor:'white',\n            width:'100%',\n            height:'300px',\n            paddingTop:'15px',\n            // columnCount:3,\n            // flexwrap:'wrap',\n            // flexDirection:'column',\n            // display: 'grid',\n            // gridTemplateColumns: 'auto auto',\n            // // padding:'100px',\n            overflowY: 'scroll',\n            }}\n            >\n                <div\n                style={{\n                height:'25px',\n                width:'25px',\n                backgroundColor:'transparent',\n                position: 'absolute',\n                top:'110px',\n                left:'75px',\n                zIndex:102,\n                }}\n            >\n                <TouchableOpacity\n                onPress={()=>{\n                    // console.log(detailedCategoryData)\n                    props.toggleClipBoard()\n                    setRefresh(refresh+1)\n                }}\n                >\n                <img\n                src={xIcon}\n                style={{\n                    height:'25px',\n                    width:'25px',\n                }}\n                >\n                </img>\n                </TouchableOpacity>\n            </div>\n            \n                <View\n                style={{\n                    backgroundColor:'white',\n                    height:'298px',\n                    width:'100%',\n                    borderBottomLeftRadius:'10px',\n                    borderBottomRightRadius:'10px'\n    \n                }}\n                >\n                    <View\n                        style={{\n                            position:'relative',\n                            top:0,\n                            height:'30px',\n                            width:'100%',\n                            backgroundColor:'white',\n                            borderTopLeftRadius:'10px',\n                            borderTopRightRadius:'10px',\n                            borderBottom:'1px solid rgb(221,221,221)'\n                        }}\n                    >\n                    <Text\n                        style={{\n                            fontWeight:700,\n                        }}\n                    >클립하기</Text>\n                    </View>\n                <View\n                    style={{\n                        display: clipBoardData.length==0 ? 'block':'none',\n                        textAlign:'left',\n                        padding:'15px'\n                    }}\n                >\n                    <Text\n                    style={{\n                        fontWeight:700,\n                    }}\n                    >\n                        생성된 보드가 아직 없습니다.\n                    </Text>\n                    <br></br>\n                    <Text>\n                        진행하고 있는 프로젝트에 필요한 자재를 클립할 보드를 만들어보세요.\n                    </Text>\n                </View>\n                <div\n                    style={{\n                    display: clipBoardData.length==0 ? 'none':'block',\n                    textAlign:'left',\n                    padding:'15px',\n                    overflowY:'scroll',\n                    backgroundColor:'transparent'\n                }} \n                >\n                {clipBoardData.map((clipboard,index)=>\n                            \n                    <div\n                        style={{\n                            display:'flex',\n                            flexDirection:'row',\n                            backgroundColor:'transparent',\n                            paddingLeft:'15px',\n                            paddingRight:'15px',\n                            justifyContent:'space-between'\n                        }}\n                    >\n                        <div\n                            style={{\n                                display:'flex',\n                                flexDirection:'row',\n                                backgroundColor:'transparent',\n                                padding:'15px',\n                            }}\n                        >\n                        <div\n                            style={{\n                                borderRadius:'10px',\n                                backgroundColor:'grey',\n                                height:'50px',\n                                width:'50px',\n                                display:'flex',\n                                flexDirection:'column',\n                            }}\n                        >\n                            <div\n                                style={{\n                                    display:'flex',\n                                    flexDirection:'row',\n                                    height:'25px',\n                                    width:'50px'\n                                }}\n                            >\n                                <div\n                                    style={{\n                                        height:'25px',\n                                        width:'25px',\n                                        backgroundColor:'grey',\n                                        borderTopLeftRadius:'10px'\n                                    }}\n                                >\n                                    <Image\n                                        style={{\n                                        display:'block',\n                                        height:'25px',\n                                        width:'25px',\n                                        // borderTopLeftRadius:10,\n                                        // borderTopRightRadius:10,\n                                        borderTopLeftRadius:'10px',\n                                        pointerEvents:'none',\n                                        marginLeft:'0px',\n                                        marginRight:'0px',\n                                        position:'relative',\n                                        left:'0px'\n                                        // transform:[{\n                                        //     translateX:'0px',\n                                        //     translateY:'0px'\n                                        // }]\n                                        }}\n                        \n                                        source={{\n                                            uri:\n                                                clipboard.cb_images[0]\n                                        }}\n    \n                                        >\n                                        </Image>\n                                </div>\n                                <div\n                                    style={{\n                                        height:'25px',\n                                        width:'25px',\n                                        backgroundColor:'grey',\n                                        borderTopRightRadius:'10px'\n                                    }}\n                                >\n                                    <Image\n                                        style={{\n                                        display:'block',\n                                        height:'25px',\n                                        width:'25px',\n                                        // borderTopLeftRadius:10,\n                                        // borderTopRightRadius:10,\n                                        borderTopRightRadius:'10px',\n                                        pointerEvents:'none',\n                                        marginLeft:'0px',\n                                        marginRight:'0px',\n                                        position:'relative',\n                                        left:'0px'\n                                        // transform:[{\n                                        //     translateX:'0px',\n                                        //     translateY:'0px'\n                                        // }]\n                                        }}\n                        \n                                        source={{\n                                            uri:\n                                                clipboard.cb_images[1]\n                                        }}\n    \n                                        >\n                                        </Image>\n                                </div>\n                            </div>\n                            <div\n                                style={{\n                                    display:'flex',\n                                    flexDirection:'row',\n                                    height:'25px',\n                                    width:'50px'\n                                }}\n                            >\n                                <div\n                                    style={{\n                                        height:'25px',\n                                        width:'25px',\n                                        backgroundColor:'grey',\n                                        borderBottomLeftRadius:'10px'\n                                    }}\n                                >\n                                    <Image\n                                        style={{\n                                        display:'block',\n                                        height:'25px',\n                                        width:'25px',\n                                        // borderTopLeftRadius:10,\n                                        // borderTopRightRadius:10,\n                                        borderBottomLeftRadius:'10px',\n                                        pointerEvents:'none',\n                                        marginLeft:'0px',\n                                        marginRight:'0px',\n                                        position:'relative',\n                                        left:'0px'\n                                        // transform:[{\n                                        //     translateX:'0px',\n                                        //     translateY:'0px'\n                                        // }]\n                                        }}\n                        \n                                        source={{\n                                            uri:\n                                                clipboard.cb_images[2]\n                                        }}\n    \n                                        >\n                                        </Image>\n                                </div>\n                                <div\n                                    style={{\n                                        height:'25px',\n                                        width:'25px',\n                                        backgroundColor:'grey',\n                                        borderBottomRightRadius:'10px'\n                                    }}\n                                >\n                                    <Image\n                                        style={{\n                                        display:'block',\n                                        height:'25px',\n                                        width:'25px',\n                                        // borderTopLeftRadius:10,\n                                        // borderTopRightRadius:10,\n                                        borderBottomRightRadius:'10px',\n                                        pointerEvents:'none',\n                                        marginLeft:'0px',\n                                        marginRight:'0px',\n                                        position:'relative',\n                                        left:'0px'\n                                        // transform:[{\n                                        //     translateX:'0px',\n                                        //     translateY:'0px'\n                                        // }]\n                                        }}\n                        \n                                        source={{\n                                            uri:\n                                                clipboard.cb_images[3]\n                                        }}\n    \n                                        >\n                                        </Image>\n                                </div>\n                            </div>\n    \n                        </div>\n                        <div\n                            style={{\n                                display:'flex',\n                                flexDirection:'column',\n                                backgroundColor:'transparent',\n                                padding:'0px' \n                            }}\n                        >\n                        <div\n                            style={{\n                                backgroundColor:'transparent',\n                                height:'25px',\n                                width:'165px',\n                                // display:'inline-block',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                textAlign:'left',\n                                // paddingTop:'11px',\n                                paddingLeft:'5px',\n                                lineHeight:'20px'\n                            }}\n                        >\n                            <Text\n                            style={{\n                                display:'inline-block',\n                                lineHeight:'25px',\n                                fontWeight:700\n                            }}\n                        >{clipboard.cb_name}</Text>\n                        </div>\n                        <div\n                            style={{\n                                backgroundColor:'transparent',\n                                height:'25px',\n                                width:'165px',\n                                // display:'inline-block',\n                                alignItems:'center',\n                                justifyContent:'center',\n                                textAlign:'left',\n                                paddingTop:'0px',\n                                paddingLeft:'5px',\n                                lineHeight:'15px'\n                            }}\n                        >\n                            <Text\n                            style={{\n                                display:'inline-block',\n                                color:'grey',\n                                fontSize:'10px',\n                                lineHeight:'25px'\n                            }}\n                        >클립된 항목 {clipboard.cb_num_element}개\n                        </Text>\n                        </div>\n                        </div>\n                        </div>\n    \n                        <div\n                            className='checkContainer'\n                            style={{\n                                // position:'absolute',\n                                right:'0px',\n                                //top:'5px',\n                                marginTop:'10px',\n                                backgroundColor:'transparent',\n                                height:'50px',\n                                width:'50px',\n                                // display:'inline-block',\n                                paddingTop:\"5px\",\n                                // marginTop:\"5px\",\n                                // transform:[{\n                                //         translateX:'0px',\n                                //         translateY:'15px'\n                                //     }]\n                                alignItems:'center',\n                                justifyContent:'center',\n                                zIndex:98\n    \n                            }}\n                        >   \n                            <div\n                                style={{\n                                    display:'flex',\n                                    alignItems:'center',\n                                    justifyContent:'center',\n                                    marginTop:'15px'\n                                }}\n                            >\n                            <input \n                                className='checkbox'\n                                type=\"checkbox\" \n                                id={clipboard.cb_no}\n                                style={{\n                                    height:'20px',\n                                    width:'20px',\n                                    margin:'auto',\n                                    zIndex:99,\n                                    // flex:1,\n                                    //left:0,\n                                    // backgroundColor: 'orange'\n                                    \n                                }}\n                                // checked={true}\n                                //defaultChecked={materialNumberMatch(props.material_num,clipboard)}\n                                //defaultChecked={checkButtonChecked[index]}\n                                checked={checkButtonChecked[index]}\n                                onClick={(e)=>\n                                    // checkboxClicked(index,e,category.code_name,category.code_text)\n                                    checkboxClicked(index,e,clipboard.cb_no,clipboard.detail)\n                                    \n                                    // console.log(e)\n                                }\n    \n                        \n                        ></input>\n                        </div>\n                        </div>\n                    </div>\n                )}\n                    <div\n                        style={{\n                            height:'50px',\n                            width:'100%',\n                        }}\n                    >\n                    </div>\n                </div>\n                <div>\n                <TouchableOpacity\n                    style={{\n                        position:'absolute',\n                        bottom:0,\n                        height:'50px',\n                        width:'100%',\n                        backgroundColor:'white',\n                        borderBottomLeftRadius:'10px',\n                        borderBottomRightRadius:'10px',\n                        zIndex:100\n                    }}\n                    onPress={()=>{\n                        console.log('make a new board')\n                        setNewBoard(!newBoard)\n                        setRefresh(refresh+1)\n                    }}\n                >\n                    <View\n                        style={{\n                            backgroundColor:'white',\n                            borderTop:'1px solid rgb(221,221,221)',\n                            zIndex:200\n                        }}\n                    >\n                    <Text\n                        style={{\n                            lineHeight:'50px',\n                            fontWeight:700,\n                        }}\n                    >\n                        새로운 보드 생성\n                    </Text>\n                    </View>\n                </TouchableOpacity>\n                </div>\n                </View>\n                {/* <Text>{props.material_num}</Text> */}\n            </div>\n        </div>\n    </div>\n        );\n    }\n}\nexport default MoodClipBoard","/Users/bernardahn/Documents/GitHub/clip/src/components/AddToShoppingCart.js",["676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705"],"import React,{useEffect} from 'react';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport NavBarFiller from './NavBarFiller';\nimport Pagination from './Pagination';\nimport {TouchableOpacity,Text,View,Modal,Image,TouchableHighlight,Linking,Dimensions,textInput} from 'react-native';\nimport xIcon from '../assets/x.png';\nimport { RadioButton } from 'react-native-paper';\n// import DatePicker from 'react-native-date-picker'\n//import DateTimePicker from '@react-native-community/datetimepicker'\n//import DatePicker from \"react-datepicker\"\nimport DatePicker from 'react-date-picker';\n\nconst queryString = require('query-string');\n\nfunction AddToShoppingCart(props){\n    const [height,setHeight]=React.useState(Dimensions.get('window').height)\n    const [width,setWidth]=React.useState(Dimensions.get('window').width)\n    const[clipBoardData,setClipBoardData]=React.useState([])\n    const [checkButtonChecked,setCheckButtonChecked]=React.useState([])\n    // const[clipBoardDataDetail,setClipBoardDataDetail]=React.useState([])\n    const [boardBuilding,setBoardBuilding]=React.useState(false)\n    const [refresh,setRefresh]=React.useState(0)\n    const [newBoard,setNewBoard]=React.useState(false)\n    const [inputValue,setInputValue]=React.useState(\"\")\n    const [makeButtonEnable,setMakeButtonEnable]=React.useState(false)\n    const [projectInfo,setProjectInfo]=React.useState([])\n    const [projectListShow,setProjectListShow]=React.useState(false)\n    const [selectedProject,setSelectedProject]=React.useState(null)\n    const [projectName,setProjectName]=React.useState('프로젝트를 선택하세요')\n    const [addProjectShow,setAddProjectShow]=React.useState(false)\n    const [date,setDate]=React.useState(new Date())\n    const [newProjectName,setNewProjectName]=React.useState('')\n    const [newProjectSize,setNewProjectSize]=React.useState('')\n    const [newProjectDescription,setNewProjectDescription]=React.useState('')\n    const [projectCategoryList,setProjectCategoryList]=React.useState([])\n    const [selectedCategory,setSelectedCategory]=React.useState('')\n    const onChange=()=>{\n        setHeight(Dimensions.get('window').height)\n        setWidth(Dimensions.get('window').width)\n        // console.log(height+\" : \"+width)\n      }\n    const getProjectInfo=(qStr)=>{\n        console.log(qStr)\n        fetch('/projectInfo?'+qStr\n        )\n        .then(res=>res.json())\n        .then((incomingData)=>{\n            console.log(incomingData)\n            // setProjectInfo(incomingData)\n            setProjectInfo(incomingData.sort(function(a,b){\n                var textA = a.prj_name.toUpperCase()\n                var textB = b.prj_name.toUpperCase()\n                return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n            }))\n            })\n        .catch(err=>{\n            console.log(err)\n        })  \n    }\n    const AddToCart=(qStr)=>{\n        console.log(qStr)\n        fetch('/AddToCart?'+qStr\n        )\n        .then(res=>res.json())\n        .then((incomingData)=>{\n            console.log(incomingData)\n            })\n        .catch(err=>{\n            console.log(err)\n        })  \n    }\n    const dateChange = (event, selectedDate)=>{\n        const currentDate=selectedDate||date;\n        setDate(currentDate)\n    }\n    const updateNewProjectName=(e)=>{\n        setNewProjectName(e.target.value)\n    //     if(e.target.value!=\"\"){\n    //       // setMakeButtonEnable(true)\n    //       setSearchTermEnable(true)\n    //   }\n    //   else{\n    //       // setMakeButtonEnable(false)\n    //       setSearchTermEnable(false)\n    //   }\n    }\n    const updateNewProjectSize=(e)=>{\n        setNewProjectSize(e.target.value)\n    //     if(e.target.value!=\"\"){\n    //       // setMakeButtonEnable(true)\n    //       setSearchTermEnable(true)\n    //   }\n    //   else{\n    //       // setMakeButtonEnable(false)\n    //       setSearchTermEnable(false)\n    //   }\n    }\n    // const AddToCart=(jsonObj)=>{\n    //     fetch('http://clip.partners/api/mobile/AddToCart',{\n    //     method: 'post',\n    //     headers: {'Content-Type':'application/json'},\n    //     body:JSON.stringify(jsonObj)\n    //     })\n    //     .then(res=>res.json())\n    //     .then(data=>{\n    //         console.log(data)\n    //     })\n    //     .catch(err=>{\n    //         console.log(err)\n    //     })\n    // }\n    const updateNewProjectDescription=(e)=>{\n        setNewProjectDescription(e.target.value)\n    //     if(e.target.value!=\"\"){\n    //       // setMakeButtonEnable(true)\n    //       setSearchTermEnable(true)\n    //   }\n    //   else{\n    //       // setMakeButtonEnable(false)\n    //       setSearchTermEnable(false)\n    //   }\n    }\n    const getProjectCategoryList=()=>{\n        fetch('/getProjectCategoryList'\n        )\n        .then(res=>res.json())\n        .then((incomingData)=>{\n            console.log(incomingData)\n            setProjectCategoryList(incomingData)\n            })\n        .catch(err=>{\n            console.log(err)\n        }) \n    }\n    const AddProject=(jsonObj)=>{\n        fetch('/AddProject?'+queryString.stringify(jsonObj)\n        )\n        .then(res=>res.json())\n        .then((incomingData)=>{\n            console.log(incomingData)\n            })\n        .catch(err=>{\n            console.log(err)\n        }) \n    }\n    \n    useEffect(()=>{\n        console.log('hello world')\n        console.log(props.material_data)\n        // const parsed = queryString.parse(props.location.search);\n        const parsed = {};\n        var mem_no=undefined\n        if(localStorage.login!=undefined){\n            if(JSON.parse(localStorage.login).result!=\"FAILURE\"){\n                mem_no=JSON.parse(localStorage.login).message.split('_')[0]\n                parsed.mem_no=mem_no \n            \n            }\n            else{\n                parsed.mem_no=\"\"\n            }\n        }\n        else{\n            parsed.mem_no=\"\"\n        }\n        parsed.type=\"LIST\"\n        console.log(parsed)\n        getProjectInfo(queryString.stringify(parsed))\n        getProjectCategoryList()\n    },[])\n    useEffect(()=>{\n        console.log(projectInfo)\n    },[projectInfo])\n        if(projectListShow==false)\n            {\n                return (\n                    <div\n                    style={{\n                    position:'fixed',\n                    height:'100vh',\n                    width:'100vw',\n                    top:0,\n                    left:0,\n                    backgroundColor:'rgba(0,0,0,0.5)',\n                    display:'block',\n                //   padding:'160px',\n                    zIndex:101\n                    }}\n                >\n                <div\n                style={{\n                    paddingTop:'100px',\n                    paddingLeft:'65px',\n                    paddingRight:'65px'\n                }}\n                >\n                    <div\n                    style={{\n                        textAlign:'left',\n                        // margin:'25pt'\n                        paddingLeft:'0px',\n                        paddingRight:'0px',\n                        backgroundColor:'transparent',\n                        \n                    }}\n                    >\n                    \n                    \n                    \n                    \n                    </div>\n            \n            \n                    <div\n                    style={{\n                    borderRadius:'10px',\n                    backgroundColor:'white',\n                    width:'100%',\n                    height:'300px',\n                    paddingTop:'15px',\n                    // columnCount:3,\n                    // flexwrap:'wrap',\n                    // flexDirection:'column',\n                    // display: 'grid',\n                    // gridTemplateColumns: 'auto auto',\n                    // // padding:'100px',\n                    overflowX:'hidden',\n                    overflowY: 'scroll',\n                    }}\n                    >\n                        <div\n                        style={{\n                        height:'25px',\n                        width:'25px',\n                        backgroundColor:'transparent',\n                        position: 'absolute',\n                        top:'110px',\n                        left:'75px',\n                        zIndex:102,\n                        }}\n                    >\n                        <TouchableOpacity\n                        onPress={()=>{\n                            // console.log(detailedCategoryData)\n                            props.toggleShoppingCart()\n                            setRefresh(refresh+1)\n                        }}\n                        >\n                        <img\n                        src={xIcon}\n                        style={{\n                            height:'25px',\n                            width:'25px',\n                        }}\n                        >\n                        </img>\n                        </TouchableOpacity>\n                    </div>\n                    \n                        <View\n                        style={{\n                            backgroundColor:'white',\n                            height:'298px',\n                            width:'100%',\n                            borderBottomLeftRadius:'10px',\n                            borderBottomRightRadius:'10px'\n                            \n                        }}\n                        >\n                            <View\n                                style={{\n                                    position:'relative',\n                                    top:0,\n                                    height:'30px',\n                                    width:'100%',\n                                    backgroundColor:'white',\n                                    borderTopLeftRadius:'10px',\n                                    borderTopRightRadius:'10px',\n                                    borderBottom:'1px solid rgb(221,221,221)'\n                                }}\n                            >\n                            <Text\n                                style={{\n                                    fontWeight:700,\n                                }}\n                            >샘플을 장바구니에 추가하기</Text>\n                            </View>\n                        <View\n                            style={{\n                                // display: clipBoardData.length==0 ? 'block':'none',\n                                textAlign:'left',\n                                padding:'15px',\n                            }}\n                        >\n                            <Image\n                            style={{\n                                display:'block',\n                                height:'70px',\n                                width:'70px',\n                                // borderTopLeftRadius:10,\n                                // borderTopRightRadius:10,\n                                borderRadius:'10px',\n                                pointerEvents:'none',\n                                marginLeft:'auto',\n                                marginRight:'auto',\n                                position:'absolute',\n                                top:'15px',\n                                left:'15px',\n                                // transform:[{\n                                //     translateX:'0px',\n                                //     translateY:'0px'\n                                // }]\n                            }}\n            \n                            source={{\n                                uri:\n                                    props.material_data.mt_feature_img_url\n                            }}\n\n                            >\n                            </Image>\n\n                        </View>\n                        <div\n                            style={{\n                                transform:'translate(100px,-2px)',\n                                display:'flex',\n                                flexDirection:'column',\n                                textAlign:'left',\n\n                            }}\n                        >\n                            <Text\n                                style={{\n                                    fontWeight:700,\n                                    fontSize:'12px',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                }}\n                            >\n                                \n                                {props.material_data.brd_name_eng}\n                            </Text>\n                            <Text \n                                style={{\n                                    fontWeight:700,\n                                    fontSize:'12px',\n                                    whiteSpace:'nowrap',\n                                }}\n                            >\n                                \n                                {props.material_data.brd_name_kor}\n                            </Text>\n                            <Text \n                                style={{\n                                    fontWeight:500,\n                                    fontSize:'12px',\n                                    whiteSpace:'nowrap',\n                                    color:'rgb(109,114,120)'\n                                }}\n                            >\n                            \n                                {props.material_data.mt_subname}\n                            </Text>\n                        </div>\n                        <div\n                            style={{\n                            // display: clipBoardData.length==0 ? 'none':'block',\n                            marginTop:'10px',\n                            textAlign:'left',\n                            paddingLeft:'15px',\n                            paddingRight:'15px',\n                            overflowY:'scroll',\n                            backgroundColor:'transparent'\n                        }} \n                        >\n\n                            <div\n                                style={{\n                                    backgroundColor:'transparent',\n                                    height:'25px',\n                                    width:'100%',\n                                    marginTop:'15px',\n                                }}\n                            >\n                                <Text\n                                    style={{\n                                        fontWeight:600,\n                                    }}\n                                >\n                                    프로젝트 선택\n                                </Text>\n                            </div>\n                            <div\n                            style={{\n                                backgroundColor:'transparent',\n                                height:'47px',\n                                width:'100%',\n                                paddingTop:'7px'\n                            }}\n                            >\n                                <TouchableOpacity\n                                    onPress={()=>{\n                                        console.log('open project list')\n                                        setProjectListShow(true)\n                                    }}\n                                >\n                                    <View\n                                        style={{\n                                            backgroundColor:'transparent',\n                                            height:'40px',\n                                            width:'100%',\n                                            borderRadius:'10px',\n                                            border:'2px solid black',\n                                            textAlign:'left',\n                                            justifyContent:'center',\n                                            lineHeight:'40px',\n                                            padding:'15px'\n                                            // alignItems:'center'\n                                        }}\n                                    >\n                                    <Text\n                                    \n                                    >\n                                        {projectName}\n                                    </Text>\n                                    <Text\n                                        style={{\n                                            position:'fixed',\n                                            right:'100px'\n                                        }}\n                                    >\n                                        &gt;\n                                    </Text>\n                                    </View>\n                                </TouchableOpacity>\n                            </div>\n                        </div>\n                        <div>\n                        <TouchableOpacity\n                            style={{\n                                position:'absolute',\n                                bottom:0,\n                                height:'50px',\n                                width:'100%',\n                                backgroundColor:'transparent',\n                                borderBottomLeftRadius:'10px',\n                                borderBottomRightRadius:'10px',\n                                zIndex:100\n                            }}\n                            onPress={()=>{\n                                console.log('make a new board')\n                                setNewBoard(!newBoard)\n                                setRefresh(refresh+1)\n                                const parsed = {};\n                                var mem_no=undefined\n                                if(localStorage.login!=undefined){\n                                    if(JSON.parse(localStorage.login).result!=\"FAILURE\"){\n                                        mem_no=JSON.parse(localStorage.login).message.split('_')[0]\n                                        parsed.mem_no=mem_no \n                                    \n                                    }\n                                    else{\n                                        parsed.mem_no=\"\"\n                                    }\n                                }\n                                else{\n                                    parsed.mem_no=\"\"\n                                }\n                                // parsed.list_material=[\n                                //     {\n                                //         vd_no:props.material_data.vd_no,\n                                //         brd_no:props.material_data.brd_no,\n                                //         mt_no:props.material_data.mt_no,\n                                //         prj_no:selectedProject,\n                                //         mt_shipfrom:props.material_data.mt_shipfrom\n                                //     }\n                                // ]\n                                parsed.list_material=[\n                                    \n                                        [props.material_data.vd_no],\n                                        [props.material_data.brd_no],\n                                        [props.material_data.mt_no],\n                                        [selectedProject],\n                                        [props.material_data.mt_shipfrom]\n                                ]\n                                console.log(parsed)\n                                AddToCart(queryString.stringify(parsed))\n                                // AddToCart(parsed)\n                                }}\n                        >\n                            <View\n                                style={{\n                                    backgroundColor:'white',\n                                    borderTop:'1px solid rgb(221,221,221)',\n                                    zIndex:200\n                                }}\n                            >\n                            <Text\n                                style={{\n                                    lineHeight:'50px',\n                                    fontWeight:700,\n                                }}\n                            >\n                                장바구니에 샘플 담기\n                            </Text>\n                            </View>\n                        </TouchableOpacity>\n                        </div>\n                        </View>\n                        {/* <Text>{props.material_num}</Text> */}\n                    </div>\n                </div>\n            </div>\n                );\n            }\n        else{\n            if(addProjectShow==false)\n            {\n                return (\n                    <div\n                    style={{\n                    position:'fixed',\n                    height:'100vh',\n                    width:'100vw',\n                    top:0,\n                    left:0,\n                    backgroundColor:'rgba(0,0,0,0.5)',\n                    display:'block',\n                //   padding:'160px',\n                    zIndex:101\n                    }}\n                >\n                <div\n                style={{\n                    paddingTop:'100px',\n                    paddingLeft:'65px',\n                    paddingRight:'65px'\n                }}\n                >\n                    <div\n                    style={{\n                        textAlign:'left',\n                        // margin:'25pt'\n                        paddingLeft:'0px',\n                        paddingRight:'0px',\n                        backgroundColor:'transparent',\n                        \n                    }}\n                    >\n                    \n                    \n                    \n                    \n                    </div>\n            \n            \n                    <div\n                    style={{\n                    borderRadius:'10px',\n                    backgroundColor:'white',\n                    width:'100%',\n                    height:'400px',\n                    paddingTop:'15px',\n                    // columnCount:3,\n                    // flexwrap:'wrap',\n                    // flexDirection:'column',\n                    // display: 'grid',\n                    // gridTemplateColumns: 'auto auto',\n                    // // padding:'100px',\n                    overflowX:'hidden',\n                    overflowY: 'scroll',\n                    }}\n                    >\n                        <div\n                        style={{\n                        height:'25px',\n                        width:'25px',\n                        backgroundColor:'transparent',\n                        position: 'absolute',\n                        top:'110px',\n                        left:'75px',\n                        zIndex:102,\n                        }}\n                    >\n                        <TouchableOpacity\n                                    onPress={()=>{\n                                        console.log('close project list')\n                                        setProjectListShow(false)\n                                    }}\n                                >\n                                    <View\n                                        style={{\n                                            backgroundColor:'transparent',\n                                            height:'25px',\n                                            width:'100%',\n                                            borderRadius:'10px',\n                                            // border:'2px solid black',\n                                            textAlign:'left',\n                                            justifyContent:'center',\n                                            lineHeight:'25px',\n                                            padding:'15px',\n                                            alignItems:'center',\n                                            transform:'translate(0px,-5px)'\n                                        }}\n                                    >\n                                    \n                                    <Text\n                                        style={{\n                                            // position:'fixed',\n                                            // right:'100px'\n                                        }}\n                                    >\n                                        &lt;\n                                    </Text>\n                                    </View>\n                                </TouchableOpacity>\n                    </div>\n                    \n                        <View\n                        style={{\n                            backgroundColor:'transparent',\n                            height:'395px',\n                            width:'100%',\n                            borderBottomLeftRadius:'10px',\n                            borderBottomRightRadius:'10px'\n                            \n                        }}\n                        >\n                            <View\n                                style={{\n                                    position:'relative',\n                                    top:0,\n                                    height:'30px',\n                                    width:'100%',\n                                    backgroundColor:'white',\n                                    borderTopLeftRadius:'10px',\n                                    borderTopRightRadius:'10px',\n                                    borderBottom:'1px solid rgb(221,221,221)'\n                                }}\n                            >\n                            <Text\n                                style={{\n                                    fontWeight:700,\n                                }}\n                            >프로젝트 선택</Text>\n                            <TouchableOpacity\n                                    onPress={()=>{\n                                        console.log('make new project ')\n                                        // setProjectListShow(true)\n                                        setAddProjectShow(true)\n                                    }}\n                                >\n                                    <View\n                                        style={{\n                                            position:'fixed',\n                                            right:'70px',\n                                            backgroundColor:'transparent',\n                                            height:'25px',\n                                            width:'120px',\n                                            borderRadius:'10px',\n                                            // border:'2px solid black',\n                                            textAlign:'left',\n                                            justifyContent:'center',\n                                            lineHeight:'25px',\n                                            padding:'15px',\n                                            alignItems:'center',\n                                            transform:'translate(0px,-25px)'\n                                        }}\n                                    >\n                                    \n                                    <Text\n                                        style={{\n                                            // position:'fixed',\n                                            // right:'100px'\n                                            color:'rgb(109,114,120)'\n                                        }}\n                                    >\n                                        프로젝트 추가\n                                    </Text>\n                                    </View>\n                                </TouchableOpacity>\n                            </View>\n                        <View\n                            style={{\n                                // display: clipBoardData.length==0 ? 'block':'none',\n                                textAlign:'left',\n                                // padding:'15px',\n                            }}\n                        >\n                            \n                        \n                        </View>\n                        <div\n                            style={{\n                            // display: clipBoardData.length==0 ? 'none':'block',\n                            marginTop:'10px',\n                            textAlign:'left',\n                            paddingLeft:'15px',\n                            paddingRight:'15px',\n                            overflowY:'scroll',\n                            overflowX:'scroll',\n                            backgroundColor:'transparent'\n                        }} \n                        >\n                        {projectInfo.map((oneProject,index)=>{\n                            // console.log(oneProject)\n                        return( \n                            <div\n                                style={{\n                                    display:'flex',\n                                    flexDirection:'row'\n                                }}\n                            > \n                            <div\n                                style={{\n                                    backgroundColor:'transparent',\n                                    height:'50px',\n                                    width:'50px',\n                                    borderRadius:10,\n                                    transform:'translate(0px,3px)',\n                                    // border:'2px solid black',\n                                }}\n                            >\n                            {/* <Image\n                                style={{\n                                    display:'block',\n                                    height:'50px',\n                                    width:'50px',\n                                    // borderTopLeftRadius:10,\n                                    // borderTopRightRadius:10,\n                                    borderRadius:'10px',\n                                    pointerEvents:'none',\n                                    // marginLeft:'auto',\n                                    // marginRight:'auto',\n                                    // position:'absolute',\n                                    // top:'15px',\n                                    // left:'15px',\n                                    // transform:[{\n                                    //     translateX:'0px',\n                                    //     translateY:'0px'\n                                    // }]\n                                }}\n                \n                                source={{\n                                    uri:\n                                        oneProject.detail.pictures_project[0].pic_url\n                                }}\n\n                                >\n                                </Image> */}\n                                {/* <div\n                                style={{\n                                    borderRadius:'10px',\n                                    backgroundColor:'grey',\n                                    height:'50px',\n                                    width:'50px',\n                                    display:'flex',\n                                    flexDirection:'column',\n                                }}\n                            >\n                                <div\n                                    style={{\n                                        display:'flex',\n                                        flexDirection:'row',\n                                        height:'25px',\n                                        width:'50px'\n                                    }}\n                                >\n                                    <div\n                                        style={{\n                                            height:'25px',\n                                            width:'25px',\n                                            backgroundColor:'grey',\n                                            borderTopLeftRadius:'10px'\n                                        }}\n                                    >\n                                        <Image\n                                            style={{\n                                            display:'block',\n                                            height:'25px',\n                                            width:'25px',\n                                            // borderTopLeftRadius:10,\n                                            // borderTopRightRadius:10,\n                                            borderTopLeftRadius:'10px',\n                                            pointerEvents:'none',\n                                            marginLeft:'0px',\n                                            marginRight:'0px',\n                                            position:'relative',\n                                            left:'0px'\n                                            // transform:[{\n                                            //     translateX:'0px',\n                                            //     translateY:'0px'\n                                            // }]\n                                            }}\n                            \n                                            source={{\n                                                uri:\n                                                oneProject.detail.pictures_project[0].pic_url\n                                            }}\n        \n                                            >\n                                            </Image>\n                                    </div>\n                                    <div\n                                        style={{\n                                            height:'25px',\n                                            width:'25px',\n                                            backgroundColor:'grey',\n                                            borderTopRightRadius:'10px'\n                                        }}\n                                    >\n                                        \n                                        <Image\n                                            style={{\n                                            display:oneProject.detail.pictures_project[1]==undefined?'none':'block',\n                                            height:'25px',\n                                            width:'25px',\n                                            // borderTopLeftRadius:10,\n                                            // borderTopRightRadius:10,\n                                            borderTopRightRadius:'10px',\n                                            pointerEvents:'none',\n                                            marginLeft:'0px',\n                                            marginRight:'0px',\n                                            position:'relative',\n                                            left:'0px'\n                                            // transform:[{\n                                            //     translateX:'0px',\n                                            //     translateY:'0px'\n                                            // }]\n                                            }}\n                            \n                                            source={{\n                                                uri:\n                                                oneProject.detail.pictures_project[1].pic_url\n                                            }}\n        \n                                            >\n                                            </Image>\n                                    </div>\n                                </div>\n                                <div\n                                    style={{\n                                        display:'flex',\n                                        flexDirection:'row',\n                                        height:'25px',\n                                        width:'50px'\n                                    }}\n                                >\n                                    <div\n                                        style={{\n                                            height:'25px',\n                                            width:'25px',\n                                            backgroundColor:'grey',\n                                            borderBottomLeftRadius:'10px'\n                                        }}\n                                    >\n                                        <Image\n                                            style={{\n                                            display:'block',\n                                            height:'25px',\n                                            width:'25px',\n                                            // borderTopLeftRadius:10,\n                                            // borderTopRightRadius:10,\n                                            borderBottomLeftRadius:'10px',\n                                            pointerEvents:'none',\n                                            marginLeft:'0px',\n                                            marginRight:'0px',\n                                            position:'relative',\n                                            left:'0px'\n                                            // transform:[{\n                                            //     translateX:'0px',\n                                            //     translateY:'0px'\n                                            // }]\n                                            }}\n                            \n                                            source={{\n                                                uri:\n                                                    oneProject.detail.pictures_project[2].pic_url\n                                            }}\n        \n                                            >\n                                            </Image>\n                                    </div>\n                                    <div\n                                        style={{\n                                            height:'25px',\n                                            width:'25px',\n                                            backgroundColor:'grey',\n                                            borderBottomRightRadius:'10px'\n                                        }}\n                                    >\n                                        <Image\n                                            style={{\n                                            display:'block',\n                                            height:'25px',\n                                            width:'25px',\n                                            // borderTopLeftRadius:10,\n                                            // borderTopRightRadius:10,\n                                            borderBottomRightRadius:'10px',\n                                            pointerEvents:'none',\n                                            marginLeft:'0px',\n                                            marginRight:'0px',\n                                            position:'relative',\n                                            left:'0px'\n                                            // transform:[{\n                                            //     translateX:'0px',\n                                            //     translateY:'0px'\n                                            // }]\n                                            }}\n                            \n                                            source={{\n                                                uri:\n                                                    oneProject.detail.pictures_project[3].pic_url\n                                            }}\n        \n                                            >\n                                            </Image>\n                                    </div>\n                                </div>\n        \n                            </div>\n                            */}\n                            </div>\n                            <div\n                                style={{\n                                    display:'flex',\n                                    flexDirection:'row',\n                                    textAlign:'left',\n                                    justifyContent:'space-between',\n                                    backgroundColor:'transparent',\n                                    width:'100%'\n                                }}\n                            >\n                            <div\n                            style={{\n                                transform:'translate(15px,3px)',\n                                display:'flex',\n                                flexDirection:'column',\n                                textAlign:'left',\n                                backgroundColor:'transparent',\n                                width:'300px'\n                            }}\n                        >\n                            <Text\n                                style={{\n                                    fontWeight:700,\n                                    fontSize:'12px',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                }}\n                            >\n                                \n                                {/* {props.material_data.brd_name_eng} */}\n                                {oneProject.prj_name}\n                            </Text>\n                            <Text \n                                style={{\n                                    fontWeight:700,\n                                    fontSize:'12px',\n                                    whiteSpace:'nowrap',\n                                    color:'rgb(109,114,120)'\n                                }}\n                            >\n                                \n                            프로젝트 부문: {oneProject.prj_category_text}\n                            </Text>\n                            <Text \n                                style={{\n                                    fontWeight:500,\n                                    fontSize:'12px',\n                                    whiteSpace:'nowrap',\n                                    color:'rgb(109,114,120)',\n                                    marginBottom:'15px'\n                                }}\n                            >\n                            \n                            프로젝트 규모: {oneProject.prj_size}\n                            </Text>\n                        </div>\n                        <div\n                            style={{\n                                width:'100%',\n                                backgroundColor:'transparent',\n                                alignItems:'center',\n                                // justifyContent:'center',\n                                flexDirection:'row',\n                                display:'flex'\n                            }}\n                        >\n                            <div\n                                    style={{\n                                        height:'25px',\n                                        // marginRight:'15px',\n                                        width:'100%',\n                                        backgroundColor:'transparent'\n\n                                    }}\n                                >\n                            </div>\n                            <div\n                                style={{\n                                    position:'relative',\n                                    // right:width-400+\"px\",\n                                    height:'25px',\n                                    width:'28px',\n                                    alignItems:'center',\n                                    justifyContent:'center',\n                                    backgroundColor:'transparent',\n                                    // paddingRight:'5px',\n                                    // paddingBottom:'5px',\n                                    display:'flex',\n                                    verticalAlign:'top',\n                                    marginRight:'15px'\n                                    \n                                }}\n                            >\n                                \n                                <RadioButton\n                                    \n                                    value={oneProject.prj_no}\n                                    // status={ checked === 'first' ? 'checked' : 'unchecked' }\n                                    // onPress={() => setChecked('first')}\n                                    status={ selectedProject === oneProject.prj_no ? 'checked' : 'unchecked' }\n                                    onPress={() => {\n                                        setSelectedProject(oneProject.prj_no)\n                                        setProjectName(oneProject.prj_name)\n                                    }}\n                                    color=\"rgb(255,123,88)\"\n                                />\n                                \n                            </div>\n                            </div>\n                            </div>\n                        </div>\n                        )\n                        })}\n                        <div\n                        style={{\n                            height:'50px',\n                            width:'100%',\n                            backgroundColor:'transparent',\n                            zIndex:99\n                        }}\n                        >\n                            \n                        </div>\n                        </div>\n                        <div>\n                        <TouchableOpacity\n                            style={{\n                                position:'absolute',\n                                bottom:0,\n                                height:'50px',\n                                width:'100%',\n                                backgroundColor:'transparent',\n                                borderBottomLeftRadius:'10px',\n                                borderBottomRightRadius:'10px',\n                                zIndex:100\n                            }}\n                            onPress={()=>{\n                                console.log('confirm')\n                                setNewBoard(!newBoard)\n                                setRefresh(refresh+1)\n                                \n                                setProjectListShow(false)\n                            }}\n                        >\n                            <View\n                                style={{\n                                    backgroundColor:'white',\n                                    borderTop:'1px solid rgb(221,221,221)',\n                                    zIndex:200\n                                }}\n                            >\n                            <Text\n                                style={{\n                                    lineHeight:'50px',\n                                    fontWeight:700,\n                                }}\n                            >\n                                확인\n                            </Text>\n                            </View>\n                        </TouchableOpacity>\n                        </div>\n                        </View>\n                        {/* <Text>{props.material_num}</Text> */}\n                    </div>\n                </div>\n            </div>\n                );\n            }\n            else{\n                return(\n                    <div\n                    style={{\n                    position:'fixed',\n                    height:'100vh',\n                    width:'100vw',\n                    top:0,\n                    left:0,\n                    backgroundColor:'rgba(0,0,0,0.5)',\n                    display:'block',\n                //   padding:'160px',\n                    zIndex:101\n                    }}\n                >\n                <div\n                style={{\n                    paddingTop:'100px',\n                    paddingLeft:'65px',\n                    paddingRight:'65px'\n                }}\n                >\n                    <div\n                    style={{\n                        textAlign:'left',\n                        // margin:'25pt'\n                        paddingLeft:'0px',\n                        paddingRight:'0px',\n                        backgroundColor:'transparent',\n                        \n                    }}\n                    >\n                    \n                    \n                    \n                    \n                    </div>\n            \n            \n                    <div\n                    style={{\n                    borderRadius:'10px',\n                    backgroundColor:'white',\n                    width:'100%',\n                    height:'400px',\n                    paddingTop:'15px',\n                    // columnCount:3,\n                    // flexwrap:'wrap',\n                    // flexDirection:'column',\n                    // display: 'grid',\n                    // gridTemplateColumns: 'auto auto',\n                    // // padding:'100px',\n                    overflowX:'hidden',\n                    overflowY: 'scroll',\n                    }}\n                    >\n                        \n                    \n                        <View\n                        style={{\n                            backgroundColor:'transparent',\n                            height:'395px',\n                            width:'100%',\n                            borderBottomLeftRadius:'10px',\n                            borderBottomRightRadius:'10px'\n                            \n                        }}\n                        >\n                            \n                            <View\n                                style={{\n                                    position:'relative',\n                                    top:0,\n                                    height:'30px',\n                                    width:'100%',\n                                    backgroundColor:'white',\n                                    borderTopLeftRadius:'10px',\n                                    borderTopRightRadius:'10px',\n                                    borderBottom:'1px solid rgb(221,221,221)'\n                                }}\n                            >\n                                <div\n                        style={{\n                        height:'25px',\n                        width:'25px',\n                        backgroundColor:'transparent',\n                        // position: 'absolute',\n                        top:'110px',\n                        left:'75px',\n                        zIndex:102,\n                        }}\n                    >\n                        <TouchableOpacity\n                                    onPress={()=>{\n                                        console.log('close project list')\n                                        // setProjectListShow(false)\n                                        setAddProjectShow(false)\n                                    }}\n                                >\n                                    <View\n                                        style={{\n                                            backgroundColor:'transparent',\n                                            height:'25px',\n                                            width:'100%',\n                                            borderRadius:'10px',\n                                            // border:'2px solid black',\n                                            textAlign:'left',\n                                            justifyContent:'center',\n                                            lineHeight:'25px',\n                                            padding:'15px',\n                                            alignItems:'center',\n                                            transform:'translate(10px,-10px)'\n                                        }}\n                                    >\n                                    \n                                    <Text\n                                        style={{\n                                            // position:'fixed',\n                                            // right:'100px'\n                                        }}\n                                    >\n                                        &lt;\n                                    </Text>\n                                    </View>\n                                </TouchableOpacity>\n                    </div>\n                    <View\n                        style={{\n                            transform:'translate(0px,-25px)'\n                        }}\n                    >\n                            <Text\n                                style={{\n                                    fontWeight:700,\n                                }}\n                            >프로젝트 추가</Text>\n                    </View>    \n                            </View>\n                        <View\n                            style={{\n                                // display: clipBoardData.length==0 ? 'block':'none',\n                                textAlign:'left',\n                                padding:'15px',\n                                \n                            }}\n                        >\n                            <Text\n                                style={{\n                                    fontWeight:700,\n                                }}\n                            >\n                                프로젝트명\n                            </Text>\n                            <input \n                                style={{\n                                    overflow:'hidden', \n                                    width:'100%',\n                                    height:'30px',\n                                    padding:'12px 12px',\n                                    margin:\"8px 0\",\n                                    border:\"1px solid black\",\n                                    borderRadius:'0px',\n                                    boxSizing:'border-box',\n                                    // position:'fixed',\n                                    // top:20,\n                                    // right:280\n                                }}\n                                value={newProjectName} \n                                onChange={updateNewProjectName}\n                                placeholder={'프로젝트명 입력'}\n                            />\n                            <Text\n                                style={{\n                                    fontWeight:700,\n                                    marginBottom:'10px'\n                                }}\n                            >\n                                프로젝트 부문\n                            </Text>\n                            <select value={selectedCategory}\n                                onChange={(e)=>{\n                                    console.log(e.target.value)\n                                    setSelectedCategory(e.target.value)\n                                }}\n                                style={{\n                                    width:'100%',\n                                    padding:'5px 12px',\n                                    border: '1px solid black',\n                                    appearance:'none'\n                                }}\n                            >\n                                <option key='선택' value='선택' selected hidden\n                                    style={{\n                                        color: 'grey'\n                                    }}\n                                >\n                                    선택\n                                </option>\n                                {projectCategoryList.map((option)=>{\n                                    // console.log(option)\n                                    return(\n                                        <option key={option.code_text} value={option.code_name}>\n                                            {option.code_text}\n                                        </option>\n                                        )\n                                })}\n\n                            </select>\n                            <Text\n                                style={{\n                                    marginTop:'10px',\n                                    fontWeight:700,\n                                }}\n                            >\n                                프로젝트 규모\n                            </Text>\n                            <input \n                                style={{\n                                    overflow:'hidden', \n                                    width:'100%',\n                                    height:'30px',\n                                    padding:'12px 12px',\n                                    margin:\"8px 0\",\n                                    border:\"1px solid black\",\n                                    borderRadius:'0px',\n                                    boxSizing:'border-box',\n                                    // position:'fixed',\n                                    // top:20,\n                                    // right:280\n                                }}\n                                value={newProjectSize} \n                                onChange={updateNewProjectSize}\n                                placeholder={'프로젝트 규모 입력'}\n                            />\n                            {/* <DatePicker\n                            date={date}\n                            onDateChange={setDate}\n                            /> */}\n                            {/* <DateTimePicker\n                            testID=\"dateTimePicker\"\n                            value={date}\n                            mode='date'\n                            is24Hour={true}\n                            display=\"default\"\n                            onChange={onChange}\n                            /> */}\n                            {/* <DatePicker selected={date} onChange={date => setDate(date)} /> */}\n                            <Text\n                                style={{\n                                    fontWeight:700,\n                                    marginTop:'0px',\n                                    marginBottom:'10px'\n                                }}\n                            >\n                                자재 필요시기\n                            </Text>\n                            <DatePicker\n                                onChange={(data)=>{\n                                    console.log(data.getFullYear())\n                                    console.log(data.getMonth()+1)\n                                    console.log(data.getDate())\n                                    setDate(data)\n                                }}\n                                value={date}\n                                style={{\n                                    padding:'5px 12px'\n                                }}\n                            />\n                            <Text\n                                style={{\n                                    marginTop:'10px',\n                                    fontWeight:700,\n                                }}\n                            >\n                                프로젝트 내용\n                            </Text>\n                            <Text\n                                style={{\n                                    // marginTop:'10px',\n                                    fontWeight:500,\n                                }}\n                            >\n                                주문하시는 자재샘플이 첨부된 도면 또는 렌더링 이미지에 어떤방식으로 적용될지 설명해주세요\n                            </Text>\n                            <div\n                            style={{\n                                backgroundColor:'transparent',\n                                marginRight:'26px'\n                            }}>\n                            <textarea \n                                style={{\n                                    // overflow:'hidden', \n                                    width:'100%',\n                                    height:'100px',\n                                    padding:'12px 12px',\n                                    // margin:\"8px 0\",\n                                    border:\"1px solid black\",\n                                    borderRadius:'0px',\n                                    // boxSizing:'border-box',\n                                    // // position:'fixed',\n                                    // // top:20,\n                                    // // right:280\n                                    marginRight:'7px'\n                                }}\n                                value={newProjectDescription} \n                                onChange={updateNewProjectDescription}\n                                placeholder={'메시지를 남겨주세요'}\n                            />\n                            </div>\n                        </View>\n                        <div\n                            style={{\n                            // display: clipBoardData.length==0 ? 'none':'block',\n                            marginTop:'10px',\n                            textAlign:'left',\n                            paddingLeft:'15px',\n                            paddingRight:'15px',\n                            overflowY:'scroll',\n                            overflowX:'scroll',\n                            backgroundColor:'transparent'\n                        }} \n                        >\n                        \n                        \n                        </div>\n                        <div>\n                        <TouchableOpacity\n                            style={{\n                                // position:'absolute',\n                                // bottom:0,\n                                height:'50px',\n                                width:'100%',\n                                backgroundColor:'transparent',\n                                borderBottomLeftRadius:'10px',\n                                borderBottomRightRadius:'10px',\n                                zIndex:100\n                            }}\n                            onPress={()=>{\n                                console.log('confirm')\n                                // setNewBoard(!newBoard)\n                                // setRefresh(refresh+1)\n                                setAddProjectShow(false)\n                                setProjectListShow(false)\n\n                                var obj={}\n                                obj.mem_no=JSON.parse(localStorage.login).message.split('_')[0]\n                                obj.prj_name=newProjectName\n                                obj.prj_category=selectedCategory\n                                obj.prj_size=newProjectSize\n                                obj.prj_date= date.getFullYear()+'년 '+(Number(date.getMonth())+1)+'월'\n                                obj.prj_description=newProjectDescription\n                                console.log(obj)\n                                AddProject(obj)\n                                window.location.reload()\n                            }}\n                        >\n                            <View\n                                style={{\n                                    backgroundColor:'white',\n                                    borderTop:'1px solid rgb(221,221,221)',\n                                    zIndex:200\n                                }}\n                            >\n                            <Text\n                                style={{\n                                    lineHeight:'50px',\n                                    fontWeight:700,\n                                }}\n                            >\n                                추가하기\n                            </Text>\n                            </View>\n                        </TouchableOpacity>\n                        </div>\n                        </View>\n                        {/* <Text>{props.material_num}</Text> */}\n                    </div>\n                </div>\n            </div>\n                )\n            }\n        }\n    \n}\nexport default AddToShoppingCart",["706","707"],"/Users/bernardahn/Documents/GitHub/clip/src/components/LogOut.js",["708","709","710","711","712","713","714","715","716","717","718","719","720"],"/Users/bernardahn/Documents/GitHub/clip/src/components/LogIn.js",["721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769"],"/Users/bernardahn/Documents/GitHub/clip/src/components/WrongLogIn.js",["770","771","772","773","774","775","776","777","778","779","780","781"],"import React,{useEffect} from 'react';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport NavBarFiller from './NavBarFiller';\nimport Pagination from './Pagination';\nimport {TouchableOpacity,Text,View,Modal,Image,Linking,Dimensions,TextInput} from 'react-native';\nimport xIcon from '../assets/x.png';\nimport './Login.css'\nconst queryString = require('query-string');\n\nfunction WrongLogIn(props){\n    const [height,setHeight]=React.useState(Dimensions.get('window').height)\n    const [width,setWidth]=React.useState(Dimensions.get('window').width)\n\n    const onChange=()=>{\n        setHeight(Dimensions.get('window').height)\n        setWidth(Dimensions.get('window').width)\n        // console.log(height+\" : \"+width)\n      }\n    \n    useEffect(() => {\n        Dimensions.addEventListener('change',onChange) \n      },[])\n\n   \n\n   \n        return (\n            <div\n            style={{\n            position:'fixed',\n            height:'100vh',\n            width:'100vw',\n            top:0,\n            left:0,\n            backgroundColor:'rgba(0,0,0,0.5)',\n            display:'block',\n        //   padding:'160px',\n            zIndex:103\n            }}\n        >\n        <div\n        style={{\n            paddingTop:'100px',\n            paddingLeft:'100px',\n            paddingRight:'100px'\n        }}\n        >\n            <div\n            style={{\n                textAlign:'left',\n                // margin:'25pt'\n                paddingLeft:'0px',\n                paddingRight:'0px',\n                backgroundColor:'transparent'\n            }}\n            >\n            </div>\n\n\n            <div\n            style={{\n            borderRadius:'10px',\n            backgroundColor:'white',\n            width:'100%',\n            height:'200px',\n            paddingTop:'15px',\n            // columnCount:3,\n            // flexwrap:'wrap',\n            // flexDirection:'column',\n            // display: 'grid',\n            // gridTemplateColumns: 'auto auto',\n            // // padding:'100px',\n            overflowY: 'scroll',\n            }}\n            >\n                <div\n                style={{\n                height:'25px',\n                width:'25px',\n                backgroundColor:'transparent',\n                position: 'absolute',\n                top:'110px',\n                left:'110px',\n                zIndex:102,\n                }}\n            >\n                <TouchableOpacity\n                onPress={()=>{\n                    props.toggleWrongLogInShow()\n                }}\n                >\n                <img\n                src={xIcon}\n                style={{\n                    height:'25px',\n                    width:'25px',\n                }}\n                >\n                </img>\n                </TouchableOpacity>\n            </div>\n            \n                <View\n                style={{\n                    backgroundColor:'white',\n                    height:'198px',\n                    width:'100%',\n                    borderBottomLeftRadius:'10px',\n                    borderBottomRightRadius:'10px'\n\n                }}\n                >\n                    <View\n                        style={{\n                            position:'relative',\n                            top:0,\n                            height:'30px',\n                            width:'100%',\n                            backgroundColor:'white',\n                            borderTopLeftRadius:'10px',\n                            borderTopRightRadius:'10px',\n                            borderBottom:'1px solid rgb(221,221,221)'\n                        }}\n                    >\n                    <Text\n                        style={{\n                            fontWeight:700,\n                        }}\n                    >로그인</Text>\n                    </View>\n\n                <div\n                    style={{\n                    display: 'block',\n                    textAlign:'left',\n                    padding:'15px',\n                    overflowY:'scroll',\n                    backgroundColor:'white',\n                    height:'100%'\n                }} \n                >\n                    <Text>로그인에 실패했습니다. 비밀번호를 다시 확인해 주세요.</Text>\n                    \n                    \n                    \n                    \n                </div>\n                <div\n                        style={{\n                            \n                            borderTop:'1px solid rgb(221,221,221)',\n                            paddingLeft:'15px',\n                            paddingRight:'15px',\n                            paddingBottom:'15px'\n                        }}\n                    >\n                   <TouchableOpacity\n                        style={{\n                            marginTop:'15px',\n                            backgroundColor:'rgb(255,123,88)',\n                            borderRadius:\"10px\",\n                            height:'40px',\n                            textAlign:'center',\n                            justifyContent:'center'\n                        }}\n                        onPress={()=>{\n                            props.toggleWrongLogInShow()\n                        }}\n                    >\n                        <Text\n                            style={{\n                                color:'white'\n                            }}\n                        >\n                            확인\n                        </Text>\n                    </TouchableOpacity>\n                    </div>\n                </View>\n                {/* <Text>{props.material_num}</Text> */}\n            </div>\n        </div>\n    </div>\n        );\n    \n\n}\nexport default WrongLogIn","/Users/bernardahn/Documents/GitHub/clip/src/components/KakaoAuth.js",["782","783","784","785","786","787","788","789","790"],"import KakaoLogin from \"react-kakao-login\";\nimport { useState } from \"react\";\nimport {TouchableOpacity,Text,View,Modal,Image,Linking,Dimensions,TextInput} from 'react-native';\n// import { token } from \"./Secrets\";\n// Secrets.js is gitignored until i find a way to handle secrets\n// cafe24 doesn't have ENV interface. hardcoding it in.\n\nconst KakaoAuth = (props) => {\n  const [profile, setProfile] = useState(null);\n\n  // Does this need to be async? or even useState?\n  const responseKaKao = (res) => {\n    // setProfile({data: res});\n    // const data = res;\n    props.setUserEmail(res.profile.kakao_account.email)\n    props.setSNSID(res.profile.id)\n    const loginBody = {\n      mem_jointype: \"KAKAO\",\n      mem_email: res.profile.kakao_account.email,\n      mem_snsid: res.profile.id,\n      mem_token: null,\n    };\n\n    console.log(loginBody);\n    props.logInFunction(loginBody)\n  };\n\n  return (\n    <div>\n      <KakaoLogin\n        // token={token}\n        token='8c08c2009696a8de772e1b1990dc4521'\n        onSuccess={responseKaKao}\n        onFail={console.error}\n        onLogout={console.log}\n        getProfile={true}\n        style={{\n          height:'40px',\n          width:'100%',\n          alignItems:'center',\n          justifyContent:'center',\n          textAlign:'center',\n          backgroundColor:'white',\n          borderRadius:'10px',\n          border:\"1px solid black\",\n          marginBottom:'15px'\n        }}\n      >\n        <div style={{\n          height:'40px',\n          width:'100%',\n          lineHeight:'40px'\n        }}>\n          <Text>\n            카카오로 시작하기\n          </Text>\n        </div>\n      </KakaoLogin>\n    </div>\n  );\n};\n\nexport default KakaoAuth;\n",["791","792"],"/Users/bernardahn/Documents/GitHub/clip/src/components/NoExistMember.js",["793","794","795","796","797","798","799","800","801","802","803","804"],"import React,{useEffect} from 'react';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport NavBarFiller from './NavBarFiller';\nimport Pagination from './Pagination';\nimport {TouchableOpacity,Text,View,Modal,Image,Linking,Dimensions,TextInput} from 'react-native';\nimport xIcon from '../assets/x.png';\nimport './Login.css'\nconst queryString = require('query-string');\n\nfunction NoExistMember(props){\n    const [height,setHeight]=React.useState(Dimensions.get('window').height)\n    const [width,setWidth]=React.useState(Dimensions.get('window').width)\n\n    const onChange=()=>{\n        setHeight(Dimensions.get('window').height)\n        setWidth(Dimensions.get('window').width)\n        // console.log(height+\" : \"+width)\n      }\n    \n    useEffect(() => {\n        Dimensions.addEventListener('change',onChange) \n      },[])\n\n   \n\n   \n        return (\n            <div\n            style={{\n            position:'fixed',\n            height:'100vh',\n            width:'100vw',\n            top:0,\n            left:0,\n            backgroundColor:'rgba(0,0,0,0.5)',\n            display:'block',\n        //   padding:'160px',\n            zIndex:103\n            }}\n        >\n        <div\n        style={{\n            paddingTop:'100px',\n            paddingLeft:'100px',\n            paddingRight:'100px'\n        }}\n        >\n            <div\n            style={{\n                textAlign:'left',\n                // margin:'25pt'\n                paddingLeft:'0px',\n                paddingRight:'0px',\n                backgroundColor:'transparent'\n            }}\n            >\n            </div>\n\n\n            <div\n            style={{\n            borderRadius:'10px',\n            backgroundColor:'white',\n            width:'100%',\n            height:'200px',\n            paddingTop:'15px',\n            // columnCount:3,\n            // flexwrap:'wrap',\n            // flexDirection:'column',\n            // display: 'grid',\n            // gridTemplateColumns: 'auto auto',\n            // // padding:'100px',\n            overflowY: 'scroll',\n            }}\n            >\n                <div\n                style={{\n                height:'25px',\n                width:'25px',\n                backgroundColor:'transparent',\n                position: 'absolute',\n                top:'110px',\n                left:'110px',\n                zIndex:102,\n                }}\n            >\n                <TouchableOpacity\n                onPress={()=>{\n                    props.toggleNoExistMemberShow()\n                }}\n                >\n                <img\n                src={xIcon}\n                style={{\n                    height:'25px',\n                    width:'25px',\n                }}\n                >\n                </img>\n                </TouchableOpacity>\n            </div>\n            \n                <View\n                style={{\n                    backgroundColor:'white',\n                    height:'198px',\n                    width:'100%',\n                    borderBottomLeftRadius:'10px',\n                    borderBottomRightRadius:'10px'\n\n                }}\n                >\n                    <View\n                        style={{\n                            position:'relative',\n                            top:0,\n                            height:'30px',\n                            width:'100%',\n                            backgroundColor:'white',\n                            borderTopLeftRadius:'10px',\n                            borderTopRightRadius:'10px',\n                            borderBottom:'1px solid rgb(221,221,221)'\n                        }}\n                    >\n                    <Text\n                        style={{\n                            fontWeight:700,\n                        }}\n                    >오류</Text>\n                    </View>\n\n                <div\n                    style={{\n                    display: 'block',\n                    textAlign:'left',\n                    padding:'15px',\n                    overflowY:'scroll',\n                    backgroundColor:'white',\n                    height:'100%'\n                }} \n                >\n                    <Text>가입되지 않은 번호입니다. 휴대폰 번호를 확인해주세요</Text>\n                    \n                    \n                    \n                    \n                </div>\n                <div\n                        style={{\n                            \n                            borderTop:'1px solid rgb(221,221,221)',\n                            paddingLeft:'15px',\n                            paddingRight:'15px',\n                            paddingBottom:'15px'\n                        }}\n                    >\n                   <TouchableOpacity\n                        style={{\n                            marginTop:'15px',\n                            backgroundColor:'rgb(255,123,88)',\n                            borderRadius:\"10px\",\n                            height:'40px',\n                            textAlign:'center',\n                            justifyContent:'center'\n                        }}\n                        onPress={()=>{\n                            props.toggleNoExistMemberShow()\n                        }}\n                    >\n                        <Text\n                            style={{\n                                color:'white'\n                            }}\n                        >\n                            확인\n                        </Text>\n                    </TouchableOpacity>\n                    </div>\n                </View>\n                {/* <Text>{props.material_num}</Text> */}\n            </div>\n        </div>\n    </div>\n        );\n    \n\n}\nexport default NoExistMember","/Users/bernardahn/Documents/GitHub/clip/src/components/SentMessage.js",["805","806","807","808","809","810","811","812","813","814","815","816"],"import React,{useEffect} from 'react';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport NavBarFiller from './NavBarFiller';\nimport Pagination from './Pagination';\nimport {TouchableOpacity,Text,View,Modal,Image,Linking,Dimensions,TextInput} from 'react-native';\nimport xIcon from '../assets/x.png';\nimport './Login.css'\nconst queryString = require('query-string');\n\nfunction SentMessage(props){\n    const [height,setHeight]=React.useState(Dimensions.get('window').height)\n    const [width,setWidth]=React.useState(Dimensions.get('window').width)\n\n    const onChange=()=>{\n        setHeight(Dimensions.get('window').height)\n        setWidth(Dimensions.get('window').width)\n        // console.log(height+\" : \"+width)\n      }\n    \n    useEffect(() => {\n        Dimensions.addEventListener('change',onChange) \n      },[])\n\n   \n\n   \n        return (\n            <div\n            style={{\n            position:'fixed',\n            height:'100vh',\n            width:'100vw',\n            top:0,\n            left:0,\n            backgroundColor:'rgba(0,0,0,0.5)',\n            display:'block',\n        //   padding:'160px',\n            zIndex:103\n            }}\n        >\n        <div\n        style={{\n            paddingTop:'100px',\n            paddingLeft:'100px',\n            paddingRight:'100px'\n        }}\n        >\n            <div\n            style={{\n                textAlign:'left',\n                // margin:'25pt'\n                paddingLeft:'0px',\n                paddingRight:'0px',\n                backgroundColor:'transparent'\n            }}\n            >\n            </div>\n\n\n            <div\n            style={{\n            borderRadius:'10px',\n            backgroundColor:'white',\n            width:'100%',\n            height:'200px',\n            paddingTop:'15px',\n            // columnCount:3,\n            // flexwrap:'wrap',\n            // flexDirection:'column',\n            // display: 'grid',\n            // gridTemplateColumns: 'auto auto',\n            // // padding:'100px',\n            overflowY: 'scroll',\n            }}\n            >\n                <div\n                style={{\n                height:'25px',\n                width:'25px',\n                backgroundColor:'transparent',\n                position: 'absolute',\n                top:'110px',\n                left:'110px',\n                zIndex:102,\n                }}\n            >\n                <TouchableOpacity\n                onPress={()=>{\n                    props.toggleSentMessageShow()\n                }}\n                >\n                <img\n                src={xIcon}\n                style={{\n                    height:'25px',\n                    width:'25px',\n                }}\n                >\n                </img>\n                </TouchableOpacity>\n            </div>\n            \n                <View\n                style={{\n                    backgroundColor:'white',\n                    height:'198px',\n                    width:'100%',\n                    borderBottomLeftRadius:'10px',\n                    borderBottomRightRadius:'10px'\n\n                }}\n                >\n                    <View\n                        style={{\n                            position:'relative',\n                            top:0,\n                            height:'30px',\n                            width:'100%',\n                            backgroundColor:'white',\n                            borderTopLeftRadius:'10px',\n                            borderTopRightRadius:'10px',\n                            borderBottom:'1px solid rgb(221,221,221)'\n                        }}\n                    >\n                    <Text\n                        style={{\n                            fontWeight:700,\n                        }}\n                    >임시번호 발신</Text>\n                    </View>\n\n                <div\n                    style={{\n                    display: 'block',\n                    textAlign:'left',\n                    padding:'15px',\n                    overflowY:'scroll',\n                    backgroundColor:'white',\n                    height:'100%'\n                }} \n                >\n                    <Text>등록된 번호로 비밀번호 변경 안내 메시지가 발송되었습니다. 카카오톡 메시지를 확인해 주세요.</Text>\n                    \n                    \n                    \n                    \n                </div>\n                <div\n                        style={{\n                            \n                            borderTop:'1px solid rgb(221,221,221)',\n                            paddingLeft:'15px',\n                            paddingRight:'15px',\n                            paddingBottom:'15px'\n                        }}\n                    >\n                   <TouchableOpacity\n                        style={{\n                            marginTop:'15px',\n                            backgroundColor:'rgb(255,123,88)',\n                            borderRadius:\"10px\",\n                            height:'40px',\n                            textAlign:'center',\n                            justifyContent:'center'\n                        }}\n                        onPress={()=>{\n                            props.toggleSentMessageShow()\n                        }}\n                    >\n                        <Text\n                            style={{\n                                color:'white'\n                            }}\n                        >\n                            확인\n                        </Text>\n                    </TouchableOpacity>\n                    </div>\n                </View>\n                {/* <Text>{props.material_num}</Text> */}\n            </div>\n        </div>\n    </div>\n        );\n    \n\n}\nexport default SentMessage","/Users/bernardahn/Documents/GitHub/clip/src/components/TermsOfServicePopUp.js",["817","818","819","820","821","822","823","824","825","826","827","828"],"import React,{useEffect} from 'react';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport NavBarFiller from './NavBarFiller';\nimport Pagination from './Pagination';\nimport {TouchableOpacity,Text,View,Modal,Image,Linking,Dimensions,TextInput} from 'react-native';\nimport xIcon from '../assets/x.png';\nimport './Login.css'\nconst queryString = require('query-string');\n\nfunction TermsOfServicePopUp(props){\n    const [height,setHeight]=React.useState(Dimensions.get('window').height)\n    const [width,setWidth]=React.useState(Dimensions.get('window').width)\n\n    const onChange=()=>{\n        setHeight(Dimensions.get('window').height)\n        setWidth(Dimensions.get('window').width)\n        // console.log(height+\" : \"+width)\n      }\n    \n    useEffect(() => {\n        Dimensions.addEventListener('change',onChange) \n      },[])\n\n   \n\n   \n        return (\n            <div\n            style={{\n            position:'fixed',\n            height:'100vh',\n            width:'100vw',\n            top:0,\n            left:0,\n            backgroundColor:'rgba(0,0,0,0)',\n            display:'block',\n        //   padding:'160px',\n            zIndex:103\n            }}\n        >\n        <div\n        style={{\n            paddingTop:'100px',\n            // paddingLeft:'65px',\n            // paddingRight:'65px'\n        }}\n        >\n            <div\n            style={{\n                textAlign:'left',\n                // margin:'25pt'\n                paddingLeft:'0px',\n                paddingRight:'0px',\n                backgroundColor:'transparent'\n            }}\n            >\n            </div>\n\n\n            <div\n            style={{\n            borderRadius:'10px',\n            backgroundColor:'white',\n            width:'500px',\n            height:'500px',\n            paddingTop:'15px',\n            // columnCount:3,\n            // flexwrap:'wrap',\n            // flexDirection:'column',\n            // display: 'grid',\n            // gridTemplateColumns: 'auto auto',\n            // // padding:'100px',\n            overflowY: 'scroll',\n            marginLeft:'auto',\n            marginRight:'auto'\n            }}\n            >\n                \n            \n                <View\n                style={{\n                    backgroundColor:'white',\n                    height:'498px',\n                    width:'100%',\n                    borderBottomLeftRadius:'10px',\n                    borderBottomRightRadius:'10px'\n\n                }}\n                >\n                    <View\n                        style={{\n                            position:'relative',\n                            top:0,\n                            height:'30px',\n                            width:'100%',\n                            backgroundColor:'white',\n                            borderTopLeftRadius:'10px',\n                            borderTopRightRadius:'10px',\n                            borderBottom:'1px solid rgb(221,221,221)'\n                        }}\n                    >\n                    <div\n                        style={{\n                        height:'25px',\n                        width:'25px',\n                        backgroundColor:'transparent',\n                        position: 'relative',\n                        top:'15px',\n                        left:'15px',\n                        zIndex:102,\n                        transform:\"translate(0px,-20px)\"\n                        }}\n                    >\n                        <TouchableOpacity\n                        onPress={()=>{\n                            props.toggleTermsOfServicePopUpShow()\n                        }}\n                        >\n                        <img\n                        src={xIcon}\n                        style={{\n                            height:'25px',\n                            width:'25px',\n                        }}\n                        >\n                        </img>\n                        </TouchableOpacity>\n                    </div>\n                    <Text\n                        style={{\n                            fontWeight:700,\n                            transform:\"translate(0px,-23px)\"\n                        }}\n                    >서비스 이용 약관</Text>\n                    </View>\n\n                <div\n                    style={{\n                    display: 'block',\n                    textAlign:'left',\n                    padding:'15px',\n                    overflowY:'scroll',\n                    backgroundColor:'white',\n                    height:'100%'\n                }} \n                >\n                   <Text>\n                       이용약관 ​ 회원 이용약관 제1조 (목적) 본 약관은 (주)쿼키 (이하 “회사”)가 제공하는 관련 서비스 (이하 “서비스”)를 이용함에 있어 회사와 회원의 권리, 의무 및 책임사항을 규정함을 그 목적으로 합니다. ​ 제2조 (용어의 정의) 본 약관에서 사용된 용어의 의미는 다음과 같습니다. 1. “사이트”란 “회사”가 운영하고 있는 인터넷 웹사이트인 clip.style을 의미합니다. 2. “회원”이란 회사와 서비스 이용계약을 체결하여 회원등록을 하고 회사가 제공하는 서비스를 이용하는 개인 또는 기업을 의미합니다. 3. “서비스\"란 “회사”가 “사이트”를 통해 제공하는 모든 컨텐츠와 “회원”이 “회사”에 요청하고, 제공받는 물리적 서비스 및 이와 관련한 모든 부대서비스를 말합니다. 4. “이용자 아이디\" 또는 \"회원 아이디\"라 함은 회원의 식별과 회원의 서비스 이용을 위하여 회원이 선정하고 회사가 부여하는 문자와 숫자의 조합을 말합니다. 5. \"비밀번호\"라 함은 회사의 서비스를 이용하려는 사람이 이용자 아이디를 부여 받은 자와 동일인 임을 확인하고 회원의 권익을 보호하기 위하여 회원이 선정한 문자와 숫자의 조합을 말합니다. 6. “콘텐츠”란 회사가 제작 또는 회원이 제작하여 사이트에 등록한 모든 정보를 의미하며, 부호, 문자, 음성, 이미지 또는 동영상 등으로 표현된 자료 또는 정보를 의미합니다. 제3조 (이용 약관의 효력 및 적용과 변경) 1. 회사는 본 약관을 “사이트\"에 게시하여 서비스를 이용하고자 하는 자 및 이용자가 본 약관의 내용을 확인할 수 있도록 하여야 합니다. 2. 이 약관에 동의하고 회원 가입을 한 회원은 약관에 동의한 시점부터 동의한 약관의 적용을 받고 약관의 변경이 있을 경우에는 변경의 효력이 발생한 시점부터 변경된 약관의 적용을 받습니다. 이 약관에 동의하는 것은 정기적으로 홈페이지를 방문하여 약관의 변경 사항을 확인하는 것에 동의하는 것을 의미합니다. 3. 회사는 본 약관에 명시 되지 아니한 서비스 이용에 대한 특정 조건을 이용정책에 포함시킬 수 있습니다. 본 약관의 일부 조항이 회사에 의해 개정되는 경우, 모든 개정 조항은 본 약관의 현재 버전 및 개정안의 발효일, 개정이유와 함께 발효일 7일 전부터(단, 수정 내용이 이용자에게 불리한 경우에는 14일) 발효일 직전일까지 “사이트”에 게시되거나 이메일 또는 기타 수단을 통하여 통지되어야 합니다.해당 이용정책은 본 약관의 일부를 구성합니다. 4. 회원은 변경된 약관에 대해 거부할 권리가 있습니다. 본 약관의 변경에 대해 이의가 있는 회원은 서비스 이용을 중단하고 회원 탈퇴를 할 수 있습니다. 회원이 변경된 이용 약관의 시행일 이후에도 서비스를 계속 이용하는 경우에는 변경된 약관에 동의한 것으로 봅니다. 제4조 (약관 외 준칙) 1. 이 약관에서 규정하지 않은 사항에 관해서는 약관의 규제 등에 관한 법률, 전기통신 기본법, 전기통신 사업법, 정보통신망 이용촉진 등에 관한 법률 등의 관계법령에 따릅니다. 2. 회원이 회사와 개별 계약을 체결하여 서비스를 이용하는 경우에는 개별 계약이 우선합니다. 제5조 (이용 계약의 성립) 1. 회사의 서비스 이용 계약(이하 “이용 계약”이라 한다)은 서비스를 이용하고자 하는 자의 본 약관과 개인정보 처리 방침의 내용에 대한 동의 및 이용 신청(회원 가입 신청)에 대하여 회사가 승낙함으로써 성립합니다. 2. 서비스를 이용하고자 하는 자가 이용 신청 당시 웹 상의 \"동의함\"에 체크 후 회원 인증 과정을 완료 시 본 약관 및 개인정보 처리 방침에 대하여 동의한 것으로 간주합니다. 3. 제1항의 승낙은 이용 신청자의 본 약관에 대한 동의를 확인하고 웹 상의 안내 및 전자 메일로 통지함으로써 이루어지고 이러한 승낙의 통지가 이용 신청자에게 도달하면 이용 계약이 성립합니다. 4. 회사가 다른 회사와의 협력, 계약을 통해 제공하는 서비스에 대한 내용, 제3자 회사의 의무, 이용자의 권리와 의무 등 상세 사항은 해당 서비스에 대하여 제3자가 제공하는 별도 약관, 운영 정책 등에서 정하는 바에 따릅니다. 이용자가 해당 서비스를 이용할 경우, 제3자가 제공하는 서비스 이용 약관에 대한 동의가 필요할 수 있습니다. 제6조 (서비스 이용 신청) 1. 회원으로 가입하여 본 서비스를 이용하고자 하는 이용 고객은 회사에서 요청하는 제반 정보(이름, 회사명, 생년월일, 전화번호, 전자메일 주소 등)를 제공하여야 합니다 2. 실명으로 등록하지 않거나 허위정보를 제공한 사용자는 일체의 권리를 주장할 수 없습니다. 3. 타인의 명의를 도용하여 이용 신청을 한 회원의 모든 아이디는 삭제 되며, 관계 법령에 따라 처벌을 받을 수 있습니다. 제7조 (이용 신청의 승낙과 제한) 1. 회사는 이용 고객의 회원 신청에 대하여 업무상 또는 기술상의 문제가 없는 경우 서비스 이용을 승낙함을 원칙으로 합니다. 2. 회사는 아래 사항에 해당하는 경우에 대해서는 이용 신청을 승낙하지 아니합니다. 가. 실명이 아니거나 타인의 명의를 이용하여 신청한 경우 나. 이용계약 신청서의 내용을 허위로 기재한 경우 다. 가입신청자가 이 약관에 의하여 이전에 회원자격을 상실한 적이 있는 경우 3. 회사는 아래 사항에 해당하는 경우에는 그 신청에 대하여 승낙 제한 사유가 해소될 때까지 승낙을 유보할 수 있습니다. 가. 회사가 설비의 여유가 없는 경우 나. 회사의 기술상 지장이 있는 경우 다. 회사가 제시하는 회원 가입 절차를 완료하지 않은 경우 라. 기타 회원으로서 부적절한 행위를 할 우려가 있다고 인정되는 경우7 제8조 (서비스의 이용 및 내용) 1. 서비스의 이용은 회사의 업무상 또는 기술상 지장이 없는 한 1일 24시간, 연중무휴로 운영됩니다. 2. 회원은 사이트에 아이디로 접속한 후 별도의 접속 절차 없이 자유롭게 사이트를 이용할 수 있습니다. 3. 사이트는 정보통신 시스템 등의 정기 점검, 보수, 교체, 고장, 통신 두절 등의 사유가 발생한 경우에는 서비스의 제공을 일시 중단할 수 있으며, 사이트에서 공지 또는 전자메일을 통해 회원에게 알립니다. 4. 통제할 수 없는 사유로 인해 발생하는 서비스의 수정, 정지 또는 중단에 대해 회사는 어떠한 방식으로도 책임을 지지않습니다. 5. 회사가 자체 제작한 저작물에 대한 저작권, 기타 지적 재산권은 회사에 귀속합니다. 6. 회원은 사이트를 이용함으로써 얻은 정보를 회사의 사전 승낙 없이 복제, 송신, 출판, 배포, 방송, 기타 방법에 의하여 영리 목적으로 이용하거나 제3자에게 이용하게 하여서는 안 됩니다. 제9조 (서비스에 대한 약관 및 이용 조건) 1. 서비스 이용 자격, 서비스 등록 및 사용제한 가. 서비스는 건축, 인테리어 및 전문 디자이너 회원을 위해 제공되며, 건축, 인테리어 디자인 회사 및 제조업체 또는 관련업종 종사자/회사로 이용 자격이 제한됩니다. 나. 서비스는 국내에 위치한 국내 주소 또는 IP주소를 가진 사용자를 위해 제공되며, 제공불가 지역에서의 서비스 이용신청은 제한됩니다. 다. 서비스 이용을 위해 제출하는 모든 정보는 거짓이 없고, 정확하여야 하며 변경사항 발생 시 항상 최신으로 유지하여야 합니다. 라. 서비스는 회원이 소속된 회사, 업체, 업종의 사업 또는 상업적 목적을 위해 제공 되는 것이며, 단순히 회원 개인의 사용 목적으로 제공되지 않습니다. 마. 제조업체 또는 이와 관련된 회원의 경우, 본 서비스를 경쟁 업체의 샘플을 획득하는 용도로 사용하지 말아야 합니다. 2. 등록 수락 및 제한 가. 회사는 귀하가 서비스 이용 신청을 위해 제공한 정보에 따라 귀하가 회원으로 수락될 것인지 여부를 결정할 권리가 있습니다. 나. 회사는 등록 정보 및 기타 요소(건축 / 인테리어 디자이너 여부 또는 관련 업종 종사자/회사 인지 여부 등) 을 검토하는데 걸리는 시간에 따라 즉시 수락되거나 며칠이 소요 될 수 있습니다. 다. 귀하는 회사의 판단에 따라 서비스 회원으로 수락되지않을 수도 있음을 회원 신청 단계에서 고려하여야 합니다. 3. 비밀번호 및 계정 관리 가. 회원 등록이 수락되는 경우, 회원 계정에 액세스 하려면 비밀번호가 필요합니다. 나. 등록 계정과 관련하여 발생하는 모든 활동에 대한 책임은 회원에게 있으므로 회원은 비밀번호가 노출되지 않도록 주의하여야 합니다. 다. 등록계정은 회원이 소속된 회사, 업체, 업종의 사업 또는 상업적 목적을 위해서만 사용하여야하며, 다른 사람에게 등록계정을 사용할 수 있도록 허가하거나 양도 할 수 없습니다. 라. 이메일 메시지를 포함한 등록 계정을 통해 게시 또는 표시되는 모든 콘텐츠와 샘플 주문 등 서비스 이용에 대한 책임은 회원에게 있습니다. 마. 회원은 등록계정의 비밀번호가 무단으로 사용되거나 노출된 경우, 회사에 즉시 알려야합니다. 또한 회사가 등록계정의 비밀번호가 더이상 안전하지 않다고 판단될 경우, 회원에게 비밀번호 변경을 요청할 수 있습니다. 바. 회원은 등록계정의 비밀번호를 제 3자에게 공개하거나 제 3자가 등록 계정에 액세스하도록 허용해서는 안됩니다. 또한 등록계정을 판매하거나 양도 할 수 없습니다. 4. 회원은 회원이 소속된 회사, 업체, 업종의 사업 또는 상업적 목적(샘플링된 재료의 구매여부 결정)을 위해 샘플을 주문하는 것 이외에 다른 목적으로 샘플을 주문할 수 없습니다. 5. 서비스에 대한 회사의 책임 가. 회사가 제공하는 컨텐츠 또는 샘플은 회사가 소유하거나 판매하는 것이 아니며, 회사는 회원과 제조업체 간의 중개자 역할을 하며 제조업체를 대신하여 회원에게 컨텐츠 및 샘플을 제공하는 에이전트 역할을 합니다. 나. 회원과 제조업체는 회사가 회원과 제조업체 간에 생성된 계약의 당사자가 아니라는 것에 동의합니다. 다. 회사는 단순히 회원과 제조업체를 연결하는 사이트 및 서비스를 운영합니다. 라. 서비스를 통해 연결된 회원과 제조업체 간의 소통 및 계약, 구매결정 여부는 회원의 책임입니다. 마. 회사가 제공하는 샘플 및 콘텐츠에 관한 모든 정보는 제조업체로부터 제공받은 정보를 기반으로 합니다. 따라서 회사는 정보가 정확하다는 것을 보증할 수 없으며, 정보의 오류나 누락에 대해 책임지지 않습니다. 바. 회원은 샘플 신청 이후, 필요한 정보 등에 대해 개별적으로 검토하고, 필요한 경우 제조업체에 직접 정보를 요청해야합니다. 사. 회사는 회원과 제조업체 간에 체결되는 계약과 관련하여 어떠한 책임도 지지 않습니다. 6. 서비스요금 가. 회사는 일반적으로 서비스에 대한 수수료를 회원에게 청구하지 않습니다. 나. 회사는 서비스에 대한 요금을 변경할 권리가 있습니다. 회사가 요금을 변경하는 경우, 회사는 먼저 영향을 받는 당사자에게 이를 고지하고 지불 확인을 요청해야합니다. 7. 주문관련 가. 회원이 플랫폼을 통해 샘플을 요청하거나 주문을 하면, 회사는 회원에게 연락하여 샘플 주문 내용을 확인하고, 이와 관련한 추가 제안을 할 수 있습니다. 나. 회사는 월-목요일 주문 기준 다음 영업일 배송을 원칙으로 하며, 샘플 주문이 배송마감 시간 이후에 이루어진 경우, 2번째 영업일 이내에 샘플을 수령 할 수 있도록 합니다. 다. 주문물품 배송 및 배송가능 지역은 운송업체에 따라 달라지며, 천재지변등의 통제할 수 없는 이유로 인해 배송이 중단 될 수 있습니다. 라. 주문물품이 회원에게 도착하지 않은 경우, 어떠한 경우에도 회사는 책임지지 않습니다. 8. 커뮤니케이션 - 회사는 회원이 요청한 샘플을 제조업체가 제공할 수 있도록 회원의 동의에 따라 회원의 연락처 정보를 포함한 프로젝트 정보를 제조업체와 공유합니다. 제조업체는 회원에게 제공된 샘플과 관련된 프로모션, 제안 및 관련 정보를 제공합니다. - 회사는 제조업체가 회원에게 직접 제공하는 프로모션, 제안 및 정보가 제품 대한 책임이 없습니다. - 회사는 회원의 동의에 따라 회사(또는 회원의 요청에 따라 샘플 및 제품정보를 제공하는 모든제조업체)가 요청한 샘플에 대한 후속 조치 목적, 특정 제품 또는 서비스 소개 및 기타 판촉 목적으로 SMS 문자메시지 및 이메일을 발송할 수 있습니다. - 샘플의 사용 목적과 프로젝트 또는 이용 정보등 제조업체와의 네트워킹 및 리드 생성에 필요한 정보를 요구할 수 있으며, 해당 데이터를 제조업체에 전달할 수 있습니다. 제10조 (서비스 콘텐츠에 대한 저작권의 귀속 및 제한) 1. 회사 및 공급 업체 (라이센스 제공자 포함)는 플랫폼 및 서비스에 대한 모든 소유권을 보유하고 있습니다. 플랫폼에는 회사 및 공급업체 및 라이센스 제공자의 저작권이있는 자료, 상표 및 기타 독점 콘텐츠 및 정보가 포함됩니다. 2. 오디오, 비디오, 로고, 정보, 데이터, 소프트웨어, 문서, 서비스, 다운로드 또는 플랫폼에 포함 된 기타 유사한 자료 (“콘텐츠\")는 저작권 및 기타 지적 재산권 법, 국제 협약 및 기타 지적 재산권에 의해 보호됩니다. 3. 회원은 본 이용약관으로 인하여 서비스를 소유하거나 서비스에 관한 저작권을 보유하게 되는 것이 아니라, 회사로부터 서비스의 이용을 허락 받게 되는 바, 서비스는 정보 취득 또는 개인 용도로만 제공되는 형태로 회원이 이용할 수 있습니다.개인 용도 및 단순정보 용으로 콘텐츠를 다운로드할 때에는 다음 사항을 준수하여야 합니다. 가. 다운로드한 콘텐츠를 수정하지 않음 나. 다운로드한 콘텐츠에 포함 된 모든 저작권 및 소유권 정보를 포함하여 보관 다. 다운로드한 콘텐츠에 대한 제한 또는 사용 요구 사항을 준수 라. 단, 단순 다운로드 이외에 플랫폼에서 콘텐츠 데이터를 스크래핑하는 행위 금지 4. 회원은 회사를 이용함으로써 얻은 정보 중 회사에게 지적 재산권이 귀속된 정보를 회사의 사전 승낙 없이 복제, 송신, 출판, 배포, 방송, 기타 방법에 의하여 다음과 같은 용도로 사용하여서는 안됩니다. 가. 콘텐츠 재생산 또는 판촉 용도 나. 상업적 판매, 재판매 또는 배포 목적 (사전에 서면 허가를 받거나 플랫폼 이용 약관에 명시된 특정 권한이 제공된 정보 제외) 다. 본 이용 약관의 어떠한 내용도 여기 또는 플랫폼의 다른 곳에서 명시 적으로 제공된 경우를 제외하고 MB 콘텐츠를 포함하여 플랫폼 또는 플랫폼에 포함 된 모든 자료를 사용할 수있는 라이센스 또는 권리를 부여하는 것으로 해석되지 않습니다. 5. 회원은 콘텐츠의 오류가 있을 경우 이의를 제기 할 수 있습니다. 단,  회사는 회원의 견해를 반드시 반영 할 필요는 없으며, 회사는 콘텐츠의 내용이나 자료에 대해 보증하지 않습니다. 제 11조(서비스의 제공 및 변경) 1. 회사는 이용 감소로 인한 원활한 서비스 제공의 곤란 및 수익성 악화, 기술적 사양 변경 및 불가피한 사정, 서비스 제공과 관련한 회사 정책의 변경 등 기타 상당한 이유가 있는 경우에 운영상, 기술상의 필요에 따라 제공하고 있는 전부 또는 일부 서비스를 변경 또는 중단할 수 있습니다. 이 경우에는 변경된 서비스의 내용을 공지합니다. 단, 회사는 불가피한 여건이나 사정이 있는 경우, 위 공지를 하지 않을 수 있습니다. 2. 회사는 무료로 제공되는 서비스의 일부 또는 전부를 회사의 정책 및 운영의 필요상 수정, 중단, 변경할 수 있으며, 이에 대하여 관련법에 특별한 규정이 없는 한 회원에게 별도의 보상을 하지 않습니다. 3. 서비스의 내용, 이용 방법, 이용 시간에 대하여 변경 또는 서비스 중단이 있는 경우에는 변경 또는 중단될 서비스의 내용 및 사유와 일자 등은 그 변경 또는 중단 전에 회사 사이트 또는 서비스 내 공지사항 화면 등 회원이 충분하게 인지할 수 있는 방법으로 30일의 기간을 두고 사전에 공지합니다. 제12조 (정보의 제공 및 광고의 게재) 1. 회사는 회원에게 서비스 이용에 필요가 있다고 인정되거나 서비스 개선 및 회원 대상의 서비스 소개 등의 목적으로 하는 각종 정보를 회원이 수신 동의한 경우, 전자메일, SMS(Short Message Service), MMS(Multimedia Message Service)로 제공할 수 있습니다. 2. 회사는 제공하는 서비스와 관련되는 정보 또는 광고를 서비스 화면, 홈페이지 등에 게재할 수 있으며, 회원들에게 전자메일 및 SMS, MMS를 통해 알릴 수 있습니다. 3. 회사는 서비스 상에 게재되어 있거나 본 서비스를 통한 광고주의 판촉 활동에 회원이 참여하거나 교신 또는 거래를 함으로써 발생하는 모든 손실과 손해에 대해 회사의 고의, 중과실로 인한 경우가 아닌 한 책임을 지지 않습니다. 4. 본 서비스의 회원은 서비스 이용 시 노출되는 광고 게재에 대해 동의하는 것으로 간주합니다. 제13조 (회사의 의무) 1. 회사는 본 약관에서 정한 바에 따라 계속적, 안정적으로 서비스를 제공할 수 있도록 최선의 노력을 다해야 합니다. 2. 회사는 회원이 안전하게 서비스를 이용할 수 있도록 회원의 개인 정보(신용 정보 포함)보호를 위해 보안 시스템을 갖추어야 하며 개인정보 취급 방침을 공시하고 준수합니다. 3. 회사는 서비스 이용과 관련하여 회원으로부터 제기된 의견이나 불만이 정당하다고 인정할 경우에는 이를 처리하여야 합니다. 회원이 제기한 의견이나 불만 사항에 대해서는 연락 가능한 수단을 통하여 회원에게 처리 과정 및 결과를 전달합니다. 4. 회사는 유료 결제와 관련한 결제 사항 정보를 상법 등 관련 법령의 규정에 의하여 5년 이상 보존합니다. 5. 천재지변 등 예측하지 못한 일이 발생하거나 시스템의 장애가 발생하여 서비스가 중단될 경우 이에 대한 손해에 대해서는 회사가 책임을 지지 않습니다. 다만 자료의 복구나 정상적인 서비스 지원이 되도록 최선을 다할 의무를 집니다. 6. 회사는 회원의 개인정보를 본인의 승낙 없이 타인에게 누설, 배포하지 않습니다. 단, 전기통신 관련 법령 등 관 법령에 의하여 관련 국가기관 등의 요구가 있는 경우에는 그러하지 아니합니다. 7. 회원이 등록한 자료로 인하여 사이트의 원활한 운영에 영향을 미친다고 판단될 시, 등록된 모든 자료를 회원의 사전 동의 없이 삭제할 수 있습니다. 제14조 (회원의 의무) 1. 회원은 관계 법령과 본 약관의 규정 및 기타 회사가 통지하는 사항을 준수하여야 하며, 기타 회사의 업무에 방해되는 행위를 해서는 안됩니다. 2. 회원은 서비스 이용 등록 시, 그리고 서비스 이용과정에서 회사에 제출하는 모든 등록 정보를 정확하고, 최신상태로 유지하여야 합니다. 3. 회원은 서비스를 이용하여 얻은 정보를 회사의 사전 동의 없이 복사, 복제, 번역, 출판, 방송 기타의 방법으로 사용하거나 이를 타인에게 제공할 수 없습니다. 4. 회원은 회사가 제공하는 서비스를 이용함에 있어 다음 각 호에 해당하는 내용을 목적으로 하거나 의도하는 행위를 하여서는 안됩니다. 가. 다른 회원의 아이디를 부정 사용하는 행위 나. 범죄 행위를 목적으로 하거나 기타 범죄 행위와 관련된 행위 다. 타인의 명예를 훼손하거나 모욕하는 행위 라. 타인의 지적 재산권 등의 권리를 침해하는 행위 마. 해킹 행위 또는 바이러스의 유포 행위 바. 타인의 의사에 반하여 광고성 정보 등 일정한 내용을 계속적으로 전송하는 행위 사. 서비스의 안정적인 운영에 지장을 주거나 줄 우려가 있다고 판단되는 행위 아.사이트의 정보 및 서비스를 이용한 영리 행위 자. 그 밖에 선량한 풍속, 기타 사회 질서를 해하거나 관계 법령에 위반하는 행위 제15조 (회원의 가입해지/서비스 중지/자료 삭제) 1. 회원은 언제든지 서비스 내 “탈퇴” 기능을 통하여 이용 계약 해지 신청을 할 수 있으며, 회사는 관련법 등이 정하는 바에 따라 이를 즉시 처리하여야 합니다. 2. 회원이 계약을 해지할 경우, 관련법 및 개인정보 처리 방침에 따라 회사가 회원정보를 보유하는 경우를 제외하고는 해지 즉시 회원의 모든 데이터는 소멸됩니다. 3. 다음의 사항에 해당하는 경우 회사는 사전 동의 없이 가입 해지나 서비스 중지 조치를 취할 수 있습니다. 가. 회원의 의무를 성실하게 이행하지 않은 경우 나. 타 이용자에게 심한 모욕을 주거나, 서비스 이용을 방해한 경우 다. 회사의 서비스 또는 사이트의 정보를 회사의 동의 없이 호스팅하거나 회사의 서버 또는 네트워크를 방해 또는 방해시도 하는 경우 라. 회사에 제공한 정보가 허위 또는 오도의 소지가 있거나 조작되었을 경우 마. 신원을 숨기려고 하거나, 공개할 권리가 없는 정보를 제공한 경우 바. 회원 자격 또는 회사의 서비스 또는 그 일부를 재판매하거나 재판매 시도하는 경우 사. 허가받지 않은 웹사이트 또는 웹페이지 링크로의 접근을 유도하는 경우 아. 정보통신 윤리위원회 등 관련 공공기관의 시정 요구가 있는 경우 자. 제3자의 지적재산권을 침해한 경우 차. 불법 콘텐츠인 경우 카. 부당한 방법으로 평점을 조작하거나 타인의 서비스 이용에 방해를 초래하는 경우 타. 회사의 동의나 허락, 승인 없이 홍보성 게시 글이나 광고를 게시하는 경우 파. 본 서비스 목적에 맞지 않는 분야에 정보를 활용하여 사회적 물의가 발생한 경우기타 본 서비스 명예를 훼손하였거나 회사가 판단하기에 적합하지 않은 목적으로 회원 가입을 하였을 경우 하. 회사는 회원 가입이 해제된 경우에 해당 회원의 정보를 임의로 삭제할 수 있습니다. 제16조 (휴면 아이디) 1. 회원이 12개월 (365일) 이상 로그인 하지 않은 경우 해당 회원의 아이디는 휴면아이디가 되어 회원 로그인을 비롯한 모든 서비스에 대한 이용이 정지되고, 회사는 회원이 서비스 사용을 위해 등록한 정보를 삭제할 수 있으며, 회사는 휴면아이디의 개인정보를 다른 아이디와 별도로 관리합니다. 2. 회사는 1항에 의한 서비스 이용 정지 30일 전 전자메일을 통하여 서비스 이용 정지에 대하여 안내하고, 서비스 이용 정지가 되는 경우 다시 전자메일을 통하여 서비스 이용 정지 사실에 대하여 고지합니다. 3. 회원은 서비스 이용 정지 이후에 사이트 상에서 직접 본인 확인을 거쳐 휴면 상태 해지 신청을 하는 즉시 다시 정상적으로 서비스를 이용할 수 있습니다. 제17조 (손해 배상) 회사는 회원에게 무료로 제공하는 서비스의 이용과 관련하여 개인정보 보호 정책에서 정하는 내용에 해당하지 않는 사항에 대하여는 어떠한 손해도 책임을 지지 않습니다. 제18조 (면책 조항) 1. 회사는 천재지변, 전쟁 및 기타 이에 준하는 불가항력으로 인하여 서비스를 제공할 수 없는 경우에는 서비스 제공에 대한 책임이 면제됩니다. 2. 회사는 기간 통신 사업자가 전기통신 서비스를 중지하거나 정상적으로 제공하지 아니하여 손해가 발생한 경우 책임이 면제됩니다. 3. 회사는 서비스용 설비의 보수, 교체, 정기점검, 공사 등 부득이한 사유로 발생한 손해에 대한 책임이 면제됩니다. 4. 회사는 회원의 귀책 사유로 인한 서비스 이용의 장애 또는 손해에 대하여 책임을 지지 않습니다. 5. 회사는 이용자의 컴퓨터 오류에 의해 손해가 발생한 경우, 또는 회원이 신상 정보 및 서비스 이용 관련하여 회사가 요청한 정보를 부실하게 기재하여 손해가 발생한 경우 책임을 지지 않습니다. 6. 회사는 회원이 서비스를 이용하여 기대하는 수익을 얻지 못하거나 상실한 것에 대하여 책임을 지지 않습니다. 7. 회사는 회원이 서비스를 이용하면서 얻은 자료로 인한 손해에 대하여 책임을 지지 않습니다. 또한 회사는 회원이 서비스를 이용하며 타 회원으로 인해 입게 되는 정신적 피해에 대하여 보상할 책임을 지지 않습니다. 8. 회사는 사이트에 게재한 각종 정보, 자료, 사실의 신뢰도, 정확성 등 내용에 대하여 책임을 지지 않습니다. 9. 회사는 이용자 상호간 및 이용자와 제 3자 상호 간에 서비스를 매개로 발생한 분쟁에 대해 개입할 의무가 없으며, 이로 인한 손해를 배상할 책임도 없습니다. 10. 회원이 서비스를 이용함에 있어 행한 불법 행위나 본 약관 위반 행위로 인하여 회사가 당해 회원 이외의 제3자로부터 손해 배상 청구 또는 소송을 비롯한 각종 이의 제기를 받는 경우 당해 회원은 자신의 책임과 비용으로 회사를 면책 시켜야 하며, 회사가 면책되지 못한 경우 당해 회원은 그로 인하여 회사에 발생한 모든 손해를 배상하여야 합니다. 11. 회사는 회원이 게재한 정보, 자료, 사실의 신뢰도, 정확성 등 내용에 관해서는 책임을 지지 않습니다. 12. 회원이 발송한 메일 내용에 대한 법적인 책임은 회원에게 있습니다. 13. 회사는 회원 간 또는 회원과 제3자 상호간에 서비스를 매개로 하여 거래 등을 한 경우에는 책임이 면제됩니다. 제19조 (회원의 개인정보 보호) 회사는 이용자의 개인정보 보호를 위하여 노력해야 합니다. 이용자의 개인정보 보호에 관해서는 정보통신망 이용 촉진 및 정보 보호 등에 관한 법률에 따르고, 사이트에 \"개인정보 처리 방침\"을 고지합니다. 제20조 (신용 정보의 제공 활용 동의) 회사가 회원 가입과 관련하여 취득한 회원의 개인 신용정보를 타인에게 제공하거나 활용하고자 할 때에는 신용정보의 이용 및 보호에 관한 법률 제32조의 규정에 따라 사전에 그 사유 및 해당 기관 또는 업체 명 등을 밝히고 해당 회원의 동의를 얻어야 합니다. 제21조 (분쟁 해결) 1. 회사는 이용자가 제기하는 정당한 의견이나 불만을 반영하고 그 피해를 최소화하기 위하여 노력합니다. 2. 회사는 이용자로부터 제출되는 불만 사항 및 의견은 우선적으로 그 사항을 처리합니다. 다만, 신속한 처리가 곤란한 경우에는 이용자에게 그 사유와 처리 일정을 즉시 통보해야 합니다. 3. 회사와 이용자 간에 발생한 전자상거래 분쟁과 관련하여 이용자의 피해 구제 신청이 있는 경우에는 공정거래 위원회 또는 시, 도지사가 의뢰하는 분쟁 조정 기관의 조정에 따를 수 있습니다. 제22조 (재판권 및 준거법) 1. 이 약관의 해석 및 회사와 회원 간의 분쟁에 대하여서는 대한민국의 법을 적용합니다. 2. 이 약관에 명시되지 않은 사항은 통신 심의 관련법 등 관계 법령과 상관습에 따릅니다. 3. 서비스 이용으로 발생한 분쟁에 대해 소송이 제기되는 경우 회사의 본사 소재지를 관할하는 법원을 관할 법원으로 합니다. [부칙] 본 약관은  2020년 12월 1일부터 적용합니다. 브랜드 파트너 이용약관 본 클립 서비스 이용 약관(이하 “본 약관”)은 (주)쿼키 (그 계열회사, 임직원 및 계약관계에 따른 이해당사자를 포함하며, 이하 총칭하여 “회사”)가 제공하는 서비스 이용에 대한 조건을 정하고 있으며, 서비스 이용자(그 계열회사, 임직원, 계약관계에 따른 이해관계인 및 이해당사자를 포함하며, 이하 총칭하여 “이용자”) 및 회사 간의 계약을 구성한다. 회사의 서비스를 이용하고자 하는 자는 서비스를 등록 및 사용함에 있어서 본 약관에 따라 본 약관, 서비스 약관, 이용정책 등에 구속되며 본 약관을 준수할 것에 동의한다. 제 1조 (목적) 본 약관의 목적은 회사와 이용자의 권리, 의무 및 책임, 서비스 이용 절차 및 기타 관련 사항을 정함으로써 상호 우호적인 거래관계에 기여하고 궁극적으로는 양 당사자의 이익을 증진시키고 상호 발전을 촉진시키는 데 있습니다. 제 2조 (정의) 본 약관에서 사용된 용어의 의미는 다음과 같습니다. 본 약관에서 정의되지 않은 용어는 일반 거래 관행에 따라 정의된 의미를 가집니다. 1. “클립”이란 이용자가 회사의 서비스를 이용할 수 있도록 정보통신 시설/장비/네트워크를 통해 회사가 제공하는 서비스 플랫폼을 의미합니다. 2. “서비스”란 회사가 제공한 모든 서비스 및 추가 서비스를 의미합니다. 3. “개별 서비스”란 회사가 제공하는 서비스로서 독립적인 서비스로 분류하는 서비스를 말하며, 해당 서비스와 관련하여 제공되는 추가 서비스, 자료 등을 포함하는 의미입니다 4. “이용정책”이란 “클립” 서비스에 대한 이용정책, 이용 약관, 규칙 및 지침 및 서비스 이용과 관련하여 회사가 설정한 기타 정책(향후 회사가 개정하는 내용 포함)을 의미합니다. 5. “이용자 전용 시스템”이란 회사가 관련 정보를 상호 교환하기 위해 이용자에게 제공하는 온라인 포털 사이트 및 툴을 의미하며, 이용자가 서비스를 이용하는 데 필요한 기능을 갖추고 있습니다. 6. “서비스 이용 수수료”란 서비스 이용 시 회사가 제공하는 다양한 서비스의 이용에 대하여 이용자가 회사에 지불하는 금액을 의미합니다. 7. “서비스 이용 정보”란 이용자가 회사로부터 취득하거나 본 약관, 본 약관·클립·이용자 전용 시스템의 이용에 따른 거래 및 서비스를 통해 취득 또는 생산된 모든 데이터, 정보, 자료 등을 의미합니다. 제 3조 (약관의 게시, 유효성 및 개정) 1. 회사는 본 약관을 클립 웹페이지 또는 이용자 전용 시스템에 게시하여 서비스를 이용하고자 하는 자 및 이용자가 본 약관의 내용을 확인할 수 있도록 하여야 합니다. 2. 회사는 본 약관에 명시 되지 아니한 서비스 이용에 대한 특정 조건을 이용정책에 포함시킬 수 있으며, 관련 서비스 웹페이지, 이용자 전용 시스템 등을 통해 이를 통지할 수 있습니다. 해당 이용정책은 본 약관의 일부를 구성합니다. 3. 본 약관은 회사가 수시로 개정할 수 있는 이용정책을 포함하며, 이용자는 본 약관, 이용정책에 동의합니다. 본 약관, 이용정책에 동의하는 것은 양 당사자의 인감이 날인된 계약의 이행과 동일한 효력을 갖습니다. 4. 본 약관은 회사와 이용자 간의 서비스 이용 합의에 대한 기본 조건이며, 회사는 특정 개별 서비스에 관한 사항을 별도의 약관에 정할 수 있습니다. 만약 회사가 해당 서비스 관련 웹페이지, 이용자 전용 시스템 등을 통해 개별 이용약관을 통지하고 이용자가 이에 동의하는 경우에는, 개별 이용약관은 본 약관 및 서비스 이용약관과 함께 서비스 이용 계약의 일부를 구성하게 됩니다. 5. 이용자가 동의한 경우, 개별 이용약관은 해당 개별 서비스에 관해서만 본 약관 및 서비스 이용약관에 우선합니다. 이 경우, 본 약관 및 서비스 이용약관은 보완적인 효력을 가집니다. 6. 만약 본 약관의 일부 조항이 회사에 의해 개정되는 경우, 모든 개정 조항은 본 약관의 현재 버전 및 개정안의 발효일, 개정이유와 함께 발효일 7일 전부터(단, 수정 내용이 이용자에게 불리한 경우에는 14일) 발효일 직전일까지 “클립” 웹페이지, 이용자 전용 시스템 등에 게시되거나 이메일 또는 기타 수단을 통하여 통지되어야 합니다. 7. 만약 회사가, 상기 제7항에 따라 본 약관의 개정안을 공개하거나 통지하는 동안, 7일(이용자에게 불리한 개정안의 경우에는 14일) 이내에 의사를 밝히지 않는 이용자는 의사를 밝힌 것으로 간주된다고 명확하게 알리거나 통지 하였음에도 불구하고, 이용자가 거부 의사를 명시적으로 나타내지 않는 경우에는, 이용자는 본 약관의 개정안에 동의하는 것으로 간주됩니다. 제 4조 (이용자에 대한 통지) 1. 회사는 이메일이나 기타 서면 등의 방법으로 이용자에게 통지할 수 있습니다. 2. 회사가 모든 이용자들에게 통지해야 하는 경우에는, 제1항에 따라 통지하는 대신에, 적어도 1주일 간 관련 웹페이지, 이용자 전용 시스템 등에 해당 통지내용을 게시할 수 있습니다. 제 5조 이용자 등록 1. “회사가 제공하는 서비스를 이용하고 이용자 등록을 신청하고자 하는 자(이하 “등록 신청자”)는 본 약관에 동의하고 회사가 제공하는 등록 신청서 양식에 필요한 정보 등을 등록해야 합니다. 이 경우, 회사는 등록 신청자에게 추가적인 정보의 제공을 요청할 수 있습니다. 2. 본 약관은 회사가 제1항에 따른 등록 신청을 수락하면 효력이 발생됩니다. 이 경우, 회사는 관련 웹페이지에서 제4조에 명시된 수락 의사를 통보하거나 공개할 것이며, 본 약관은 수락 의사가 등록신청자에게 전달되거나 공개된 시점에 양 당사자에 대해 유효하게 효력이 발생됩니다. 3. 만 19세 이상의 사업자(자연인 또는 법인 불문)는 상기 제1항의 등록 신청 자격이 있습니다. 등록 신청자는 실명으로 등록 신청을 해야 합니다. (법인인 경우, 법인의 이름으로 하여야 하며, 이하 본 조에서 동일하게 적용됩니다). 실명이 아닌 이름을 사용하거나 다른 사람의 정보를 도용하는 등록 신청자는 서비스 이용이 제한되거나 관련 법률 및 규정에 따라 처벌 받을 수 있습니다. 4. 회사는 등록신청자에게 신원 확인 절차를 요구할 수 있으며, 그러한 절차가 불가능할 경우에는 회사는 신원 확인을 위한 관련 자료를 제출하도록 등록 신청자에게 요구할 수 있습니다. 5. 회사는 다음의 경우에는 등록 신청을 거부할 수 있습니다. 가. 등록신청자가 회사와의 거래관계에서 계약 조건 및 관련 법률, 규정 등을 위반한 경우; 나. 등록신청자가 제공한 정보에 허위 정보, 정보 누락, 오타 등이 포함되어 있는 경우; 다. 등록신청자가 미성년자인 경우; 라. 등록신청자가 실명으로 등록 신청을 하지 않는 경우; 마. 성명, 주민등록번호, 사업자등록번호, 법인등록번호 및 기타 바. 주요 등록 정보가 이미 등록된 다른 이용자와 동일한 경우; 사. 본 약관 및 서비스 이용약관기존약관또는사용조건포함)의 해지/취소로부터 2개월 이내에 재등록 신청서가 제출된 경우; 아. 등록신청이 불법 또는 불공정한 것으로 밝혀진 경우. 6. 이용자는 등록정보에 변경이 있을 경우, 즉시 등록된 정보를 회사가 정한 방식으로 변경하거나 ,해당 변경 사실을 회사에 통지하여야 합니다. 7. 이용자는 회사에 정보를 제공하거나 등록정보를 변경할 때, 허위 정보를 제공해서는 아니 되며, 관련 자료를 즉시 제공하여야 합니다. 8. 이용자는이용자및제3자가회사에부정확한정보또는관련 자료를 제공함으로써(등록 정보의 업데이트를 하지 아니한 경우 포함) 이용자 및 제3자가 입은 손해에 대해 책임을 져야 하며, 그러한 손해에 대해 회사에게 배상하고 회사를 면책시켜야 합니다. 제 6조 (관련자료 제출 등) 1. “제5조 제1항,제4항 및 제7항에 따라 이용자가 제공 또는 등록한 정보의 정확성을 확인하기 위하여, 회사는 관련 법령 및 규정이 허용하는 한도 내에서 이용자에게 관련 자료의 제공을 요구할 수 있습니다. 2. 이용자가 정당한 사유없이 정보 및 관련 자료를 제공하지 않는 경우, 회사는 본 약관의 해지/취소, 서비스 사용 제한 또는 결제 금액의 지급 보류를 포함하여 필요한 조치를 취할 수 있습니다. 이 경우, 이용자는 모든 관련 위험 및 책임을 부담하여야 합니다. 제 7조 (서비스 이용 수수료) 1. 회사는 서비스의 성격, 제공 비용, 방법, 시장 조건, 사업 유형 및 이용자의 사용 패턴 등을 고려하여 서비스에 대한 서비스 이용 수수료를 결정합니다. 2. 회사는 이용 정책상 서비스 이용 수수료의 종류, 요율, 청구방법 및 지급 방법, 세금 계산서 발행 등에 관한 특정 조건을 명시하고, 이용자 전용 시스템, 서비스 관련 웹페이지 등을 통해 동일 내용을 통지하여야 합니다. 3. 회사는 필요에 따라 서비스 이용 수수료를 신규로 설정 또는 변경할 수 있으며, 서비스 유형별로 서비스 이용 수수료의 계산 및 지급 방법 등을 달리 정할 수 있습니다. 이 경우 회사는 상기 제2항의 방식에 따라 신규 설립된 서비스 이용 수수료 및 변경된 서비스 이용 수수료의 세부 사항을 통지하여야 합니다. 4. 상기 제3항에 따른 회사의 지급(결제) 방법에 신용카드 또는 추가적인 수수료가 부과되는 기타 다른 지급 수단이 포함되어 있는 경우에는, 해당 추가 수수료는 그 지급 수단을 이용하는 이용자에게 부과됩니다. 5. 회사는 서비스 유형 별로 지정된 날짜에 이용자에게 서비스 이용 수수료에 대한 세금계산서를 발행해야 합니다. 제 8조 (지급 정산 및 유예) 1. 이용자는 회사의 사이트를 통한 마케팅 활동에 대한 대가의 비용을 회사에 지급하여야 합니다. 단, 계약이 해지된 이후는 이를 적용치 아니한다. 2. 회사는 월말기준 해당월 거래 내역을 작성하여 익월 5일한 이용자에게 제공합니다. 3. 회사는 거래 내역을 근거로 정산, 세금계산서를 발행하여 비용을 이용자에게 매 월 7일한 청구하고 이용자는 10일한 회사에게 이를 지급한다. 4. 배송비, 포장비, 운영비 등을 사이트 운영 및 샘플관리와 관련한 모든 항목을 포함됩니다. 제 9조 (본 약관의 기간 및 해지) 1. “본 약관 및 개별서비스의 기간은 본 약관이 회사와 이용자 간에 효력이 발생된 때부터 시작하여 본 약관에서 명시된 대로 회사 또는 사용자에 의해 본 약관이 해지되는 시점에 종료됩니다. 달리 명시 되지 아니하는 한, 본 약관 및 다른 개별 서비스에 대한 이용자 약관은 개별 서비스의 종료 또는 중단으로 인해 종료되거나 중단되지 않습니다. 2. 회사는 이용자에게 이를 통지함으로써 본 약관 및 서비스 이용약관을 해지하거나 서비스를 중단할 수 있습니다. 3. 이용자는 회사가 정한 방식으로 해지 의사를 회사에 통지함으로써 어떠한 이유로든 본 약관 또는 서비스 이용약관을 해지할 수 있습니다. 이 경우, 해지 의사를 통지하기 전에, 이용자는 서비스 이용을 중단해야 하며, 이용자가 서비스를 이용하여 거래를 이행한 경우, 이용자는 해당 거래를 완료하고 해당 구매자와 회사에게 지급할 금액을 지급해야 합니다. 4. 본 조항에 의거하여 본 약관이 해지되는 경우, 회사는 이용자에게 부여된 모든 혜택을 철회할 수 있으며, 해지 사유 및 해당 사유의 해소 여부를 고려하여 이용자의 재신청을 거부할 수 있습니다. 5. 이용자는 본 조항에 의거하여 본 약관이 해지된 후에도, 구매자를 보호하기 위하여 해지일 현재 아직 처리되지 않은 주문에 관한 배송, 교환, 환불, 수리 등 필요한 조치를 취하여야 합니다. 6. 이용자가 판매한 상품으로 인해 발생하는 이용자의 의무 및 책임에 관한 제8조, 제10조, 제11조, 제12조, 제13조 및 제16조 및 기타 조항은 본 조항에 따라 본 약관이 해지된 이후에도 유효하게 존속됩니다. 제 10조 (회사 및 이용자 간 관계) 1. 회사와 이용자는 서로 독립적이며, 본 약관 및 서비스 이용약관은 회사와 이용자 간의 합작투자, 판매업자, 프랜차이즈, 대리인, 고용 또는 독점 관계를 구성하지 않습니다. 2. 이용자는 회사의 사전동의없이 회사의 명칭, 상표, 로고 등을 자신의 재량으로 사용할 수 없으며, 회사와 이용자 간의 관계를 표시, 홍보 또는 과장 해서는 안됩니다. 3. 본 약관 및 서비스 이용약관 전부는 회사와 이용자 간의 관계에서만 유효하며, 제3자는 본 약관 및 서비스 이용약관과 관련하여 어떠한 권리, 청구 등을 주장할 수 없습니다. 4. 이용자는 이용자를 대신하여 회사가 공급하는 상품 또는 용역 서비스의 샘플의 이용에 대하여 모든 책임을 부담합니다. 제 11조 (권리의 부여 및 합의) 1. 이용자는 회사에게, 지리적 및 시간적 제한 없이, 이용자가 회사에 등록 또는 제공하는 모든 정보, 자료 등을 사용, 복제, 구현, 공개, 배포, 변경, 수정, 공개 전송, 임대, 파생 상품 제작, 상업적 및 비상업적인 목적으로 사용할 로열티 없는 권리 및 라이선스를 부여해야 합니다. 단, 회사는 이용자가 제공한 양식에서 이용자 상표를 변경하지 않습니다. (상표의 상대적 비율이 동일하게 유지되는 한, 상표의 크기를 재조정하는 데 필요한 범위까지는 제외) 2. 회사에 등록 또는 제공되는 모든 정보, 자료 등이 항상 정확하고 완전하며 유효하다는 것을 보장하기 위해, 이용자는 필요한 경우 최신 정보, 자료 등을 즉시 제공하거나 등록해야 합니다. 3. 회사는 상표권자에 의한 특정 상표의 삭제 요청을 준수해야 합니다. 단, 회사가 상표권자로부터 해당 상표에 대한 권리 또는 라이선스를 취득하지 않고 해당 상표를 사용할 수 있도록 관련 법령에서 허용하는 경우에는(예를 들어, 저작권의 정당한 사용, 상표의 기술적 사용, 제3자가 부여한 유효한 권리 또는 라이선스 등), 회사는 그러하지 아니합니다. 4. 이용자는 서비스 이용과 관련하여 생산된 모든 정보가 회사의 자산이며 회사의 재량으로 회사가 수집하여 사용할 수 있음을 인정하고 이에 동의합니다. 5. 이용자는 “클립” 서비스와 관련하여 이용자가 제공한 제안, 의견, 아이디어, 개선사항 또는 기타 대응이나 자료(관련 기술 포함)를 회사의 재량으로 공개, 재생산, 수정, 배포 및 사용할 수 있음을 인정하고 이에 동의합니다. 6. 본 조항에 따른 의무는 본 약관 및 개별 서비스의 종료 후에도 회사 및 이용자에 대하여 유효하게 존속됩니다. 제 12조 (이용자의 보증) 1. 이용자는 (i) 관련 법률 및 규정에 따라 합법적이고 완전한 자격을 갖추고 본 약관 및 서비스 이용약관에 따라 권리, 라이선스 및 권한을 부여하는 데 필요한 모든 권리 및 권한을 보유하고 있으며, (ii) 이용자가 회사에 제공하거나 회사가 사용할 수 있는 모든 정보 및 자료는 항상 정확하고 완전, 유효하며, (iii) 이용자는 본 약관 및 서비스 이용약관에 따른 자신의 의무를 완전히 이행하여야 하고 관련 법령 및 규정을 준수함을 진술 및 보증합니다. 2. 이용자는 “국제상거래에있어서외국공무원에대한뇌물방지법”, “부정청탁및 금품등수수의금지에관한법률” 등 국내 부패방지 관련 법령 및 미국 해외부패방지법 (FCPA), 영국 뇌물방지법 (Bribery Act) 등 해외 부패방지 관련 법령을 위반하지 아니하였음을 진술 및 보증하며, 향후에도 위 법령들을 위반하거나 회사가 위 법령들을 위반하게 되는 원인이 될 어떠한 행위도 하지 아니함을 진술 및 보증합니다. 3. 이용자는 이용자 혹은 이용자를 직간접적으로 50% 이상 소유하고 있는 법인이 국제제재 적용 대상이 아니함을 진술 및 보증합니다. 4. 이용자는 본 약관 및. 서비스에 따른 의무 이행 및 거래수행, 그의 상품, 자료 등으로 인하여 회사와 그 임직원에게 발생한 청구, 소송, 조사, 벌금, 검사, 행정적 조치 및 그에 따른 책임, 보상, 손해, 비용 등으로부터 회사와 임직원을 면책시키고 방어하며 보상해야 합니다. 5. 청구, 소송, 조사, 벌금, 검사, 행정적 조치 등이 회사에 악영향을 미칠 가능성이 있다고 판단되는 경우, 회사는 자신의 비용으로 이에 대응하거나 이에 개입할 수 있습니다. 이 경우, 이용자는 회사의 사전 서면 동의 없이(해당 동의는 합리적 이유 없이 보류되어서는 안됨), 어떠한 절차에 연루되거나 어떠한 주장에 동의할 수 없습니다. 6. 본 조항에 따른 의무는 본 계약 및 개별 서비스의 종료 후에도 회사와 이용자에 대하여 유효하게 존속됩니다. 제 13조 (비밀 유지) 1. 이용자는 서비스 사용중 자신이 인지하거나 취득한 회사 또는 서비스에 관한 어떠한 정보(서비스 이용 정보, 직접 또는 간접적으로 취득한 기술 및 사업 정보, 고객 정보 및 문서, 전자 파일 등과 같은 형식을 취하는 기타 그 밖의 정보, 본 약관에서 명시된 당사자들의 권리 의무에 관한 세부사항 등을 포함하나 이에 제한되지 않음, 이하 “기밀정보”)도 본 약관의 이행, 서비스의 사용, 서비스를 통한 상품의 구매자와의 거래 수행 등을 위한 목적 이외의 목적으로 사용해서는 안됩니다. 2. 이용자는 모든 기밀정보가 회사 소유이며 자산가치를 지니고 있음을 인정하고, 본 약관 및 서비스 이용약관에서 달리 명시되지 아니하는 한, 기밀 정보 보호를 위해 합리적인 조치를 취해야 합니다. 3. 이용자는 회사의 사전 서면동의없이 기밀정보를 복사, 복제또는 가공하거나 제3자에게 제공, 판매, 홍보 또는 공개할 수 없으며, 고의 또는 과실로 인한 제3자에 대한 기밀 정보 유출에 대하여 모든 책임을 부담합니다(제3자에 대한 손해 및 복구를 포함하나 이에 제한되지 않음). 4. 본조항에 따른 의무는 본 약관 및. 개별 서비스의 종료 후에도 회사와 이용자에 대하여 유효하게 존속됩니다. 제 14조  (ID 및 비밀번호 관리) 1. ID 및 비밀번호는 서비스를 이용하기 위해 이용자 전용 시스템(또는 회사가 제공하는 다른 툴)에 접속하기 위한 기간 동안에만 사용될 수 있습니다. 2. 이용자는 회사의 귀책사유가 아닌 사유로 인하여 발생한 ID 또는 비밀번호의 유출, 양도 또는 대여로 인해 발생하는 모든 손실 및 손해에 대하여 책임을 부담합니다. 3. 이용자가 자신의 ID나 비밀번호가 도난 당하거나 권한 없는 제3자에 의해 사용되었다는 것을 인지한 경우, 이용자는 즉시 이를 회사에 통지하여야 합니다. 이 경우, 회사는 신속하게 해당 문제를 해결하기 위해 최선을 다합니다. 제 15조 (이용자 개인정보 보호) 1. 회사는 이용자가 동의한 서비스 운영 이외의 목적으로 이용자가 서비스 이용을 위해 제공한 개인정보를 이용하지 않습니다. 회사가 그러한 정보를 새로운 목적으로 사용하거나 제3자에게 제공하고자 하는 경우에는, 그러한 사용 또는 제공의 목적 등을 이용자에게 통지하고, 해당 사용 또는 제공 시점에 이용자로부터 별도의 동의를 얻어야 합니다. 단, 관련 법령 및 규정에서 달리 정하고 있는 경우에는 그러하지 아니합니다. 2. 회사는 이용자가 개인정보의 수집, 이용 및 제공에 대한 동의를 거부할 경우 이용이 제한되는 서비스를 특정하여야 하며, 회사는 필수적이지 않은 개인정보의 수집, 이용 및 제공에 대한 동의를 거부한 이용자에 대해서 서비스 이용 약관을 제한하거나 거부해서는 안됩니다. 3. 이용자의 개인정보를 제3자에게 제공할 필요가 있는 경우, 이용자의 개인정보를 보호하기 위하여 회사는 관련 법령이 정하는 바에 따라 이용자의 동의를 얻어야 하며, 회사가 이용자의 개인정보 처리를 제3자에게 위탁하는 경우, 회사는 “이용자 개인정보보호 정책(필요한 경우, 본 정책은 서비스 유형에 따라 다를 수 있음)”을 통해 위탁 관련 세부 사항을 공개해야 합니다. 제 16조 (양도의 금지 등) 1. 이용자는 회사의 사전 서면 동의없이 본 약관 및 서비스 이용약관에 따른 권리 및 의무를 제3자에게 양도할 수 없습니다. 2. 본 약관 및 서비스 이용약관은 이용자 및 이용자의 승계인 및 양수인에 대하여 법적으로 구속력을 가집니다. 제 17조 (윤리규정 준수) 1. 회사와 이용자는 공정하고 투명한 윤리경영을 추진하여 상호간의 신뢰를 구축하고 지속 가능한 발전을 위해 다음의 의무사항을 준수해야 합니다. 가. 회사는 이용자 및 관계자 혹은 제3자와 거래시 어떠한 경우에도 금품, 선물, 향응, 편의 또는 접대를 요구하거나 받는 등의 행위를 하지 않습니다. 나. 이용자는 회사와의 계약 이행과정에서 불공정행위를 하거나 금품, 선물, 향응, 편의 또는 접대 등을 요구하거나 제공하지 않습니다. 다. 이용자는 회사의 임직원 및 관계자 혹은 제3자가 대가를 요구하면서 고의적으로 업무를 지연하거나 불이익을 제공하는 등 부도덕한 행위를 하는 경우에는 회사의 윤리경영 담당부서로 즉시 신고하여야 합니다. 2. 회사와 이용자는 본약관, 회사와 이용자 간의 제반 약정사항 및 법령을 준수하며, 이용자는 회사의 임직원, 기타 관련자 및 이해관계자와 부정한 목적으로 본 약관에 따른 서비스를 악용하지 않을 책임을 부담합니다. 3. 회사 및 이용자가 제1항의 의무를 위반한 경우 위반 당사자는 상대방 당사자에 대하여 위반내용에 따른 거래 중지, 계약 해지 등의 책임을 부과합니다. 4. 제 3항에 의하여 거래중지, 계약해지 등의 거래제한 조치를 받은 당사자는 거래 제한 조치를 취한 당사자에 대하여 손해배상청구 및 기타 민.형사상의 책임, 행정상의 책임의 일체의 이의를 제기하지 않습니다. 제 18조  (손해배상) 1. 일방 당사자가 자신의 귀책사유로 인해 본 서비스의 사용 및 본 약관의 이행과 관련하여 상대방 당사자에게 손해를 초래한 경우, 상대방 당사자가 입은 손해에 대해 배상하여야 합니다. 2. 이용자의 관련 법령 및 규정, 본 약관, 서비스 이용약관, 이용자 정책 등 위반으로 인하여 회사의 명예훼손을 포함한 유무상의 손해가 당사에게 발생한 경우, 이용자는 회사가 입은 해당 손해에 대하여 전액 배상하여야 합니다. 이와 관련하여, 회사가 제 3자에게 발생한 손해에 대한 배상 책임이 있는 경우에는, 이용자는 회사가 지급해야 하는 손해 및 기타 관련 우발 지출(이자, 변호사 비용 및 기타 방어 비용 포함)에 대하여 전적으로 책임을 부담합니다. 제 19조 (회사의 권한 및 면책) 1. 일방 당사자가 자신의 귀책사유로 인해 본 서비스의 사용 및 본 약관의 이행과 관련하여 상대방 당사자에게 손해를 초래한 경우, 상대방 당사자가 입은 손해에 대해 배상하여야 합니다. 2. 회사는 “클립” 서비스의 내용, 외관, 디자인, 기능 및 기타 양상을 결정할 수 있습니다. 3. 회사는 본 약관 및 서비스 이용약관에서 명시된 제한된 목적을 위해 필요한 경우가 아니면 이용자 및 회원의 대리인으로 행동하지 않습니다. 4. 회사는 합리적인 통제를 넘어 발생하는 사유, 사건등으로 인해 본 약관 및 서비스에 따른 의무 이행의 지연 또는 불이행에 대해 책임을 지지 않습니다. 5. 회사는 관련 법령이 허용하는 한도 내에서 본 약관 및. 서비스로 인해 발생하는 투자 손실, 이익 손실, 사업 기회 손실 등에 대해 어떠한 보증도 제공하지 않으며, 회사는 이에 대해 책임 지지 않습니다. 또한, 본 약관이나 특정 거래와 관련하여 발생하는 회사의 총 책임은 해당 청구를 유발한 특정 서비스와 관련하여 이용자가 회사에 지난 6개월 동안 지급한 총 금액을 초과하지 않습니다. 제 20조  (준거법 및 관할) 1. 본 약관 및 서비스 이용약관에 대한 회사와 이용자 간의 해석차이로 인하여 발생하는 모든 분쟁은 대한민국 법에 따라 규율됩니다. 2. 본 약관 및 서비스 이용으로 인하여 회사 및 이용자 간에 발생하는 모든 분쟁/소송은 서울 중앙지방법원에 관할권이 있습니다. [부칙] 본 약관은  2020년 12월 1일부터 적용합니다.\n                   </Text>\n                    \n                    \n                </div>\n                <div\n                        style={{\n                            \n                            borderTop:'1px solid rgb(221,221,221)',\n                            paddingLeft:'15px',\n                            paddingRight:'15px',\n                            paddingBottom:'15px'\n                        }}\n                    >\n                   <TouchableOpacity\n                        style={{\n                            marginTop:'15px',\n                            backgroundColor:'rgb(255,123,88)',\n                            borderRadius:\"10px\",\n                            height:'40px',\n                            textAlign:'center',\n                            justifyContent:'center'\n                        }}\n                        onPress={()=>{\n                            props.toggleTermsOfServicePopUpShow()\n                        }}\n                    >\n                        <Text\n                            style={{\n                                color:'white'\n                            }}\n                        >\n                            확인\n                        </Text>\n                    </TouchableOpacity>\n                    </div>\n                </View>\n                {/* <Text>{props.material_num}</Text> */}\n            </div>\n        </div>\n    </div>\n        );\n    \n\n}\nexport default TermsOfServicePopUp","/Users/bernardahn/Documents/GitHub/clip/src/components/PrivacyPolicyPopUp.js",["829","830","831","832","833","834","835","836","837","838","839","840"],"import React,{useEffect} from 'react';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport NavBarFiller from './NavBarFiller';\nimport Pagination from './Pagination';\nimport {TouchableOpacity,Text,View,Modal,Image,Linking,Dimensions,TextInput} from 'react-native';\nimport xIcon from '../assets/x.png';\nimport './Login.css'\nconst queryString = require('query-string');\n\nfunction PrivacyPolicyPopUp(props){\n    const [height,setHeight]=React.useState(Dimensions.get('window').height)\n    const [width,setWidth]=React.useState(Dimensions.get('window').width)\n\n    const onChange=()=>{\n        setHeight(Dimensions.get('window').height)\n        setWidth(Dimensions.get('window').width)\n        // console.log(height+\" : \"+width)\n      }\n    \n    useEffect(() => {\n        Dimensions.addEventListener('change',onChange) \n      },[])\n\n   \n\n   \n        return (\n            <div\n            style={{\n            position:'fixed',\n            height:'100vh',\n            width:'100vw',\n            top:0,\n            left:0,\n            backgroundColor:'rgba(0,0,0,0)',\n            display:'block',\n        //   padding:'160px',\n            zIndex:103\n            }}\n        >\n        <div\n        style={{\n            paddingTop:'100px',\n            // paddingLeft:'65px',\n            // paddingRight:'65px'\n        }}\n        >\n            <div\n            style={{\n                textAlign:'left',\n                // margin:'25pt'\n                paddingLeft:'0px',\n                paddingRight:'0px',\n                backgroundColor:'transparent'\n            }}\n            >\n            </div>\n\n\n            <div\n            style={{\n            borderRadius:'10px',\n            backgroundColor:'white',\n            width:'500px',\n            height:'500px',\n            paddingTop:'15px',\n            // columnCount:3,\n            // flexwrap:'wrap',\n            // flexDirection:'column',\n            // display: 'grid',\n            // gridTemplateColumns: 'auto auto',\n            // // padding:'100px',\n            overflowY: 'scroll',\n            marginLeft:'auto',\n            marginRight:'auto',\n            }}\n            >\n                \n            \n                <View\n                style={{\n                    backgroundColor:'white',\n                    height:'498px',\n                    width:'100%',\n                    borderBottomLeftRadius:'10px',\n                    borderBottomRightRadius:'10px'\n\n                }}\n                >\n                    <View\n                        style={{\n                            position:'relative',\n                            top:0,\n                            height:'30px',\n                            width:'100%',\n                            backgroundColor:'white',\n                            borderTopLeftRadius:'10px',\n                            borderTopRightRadius:'10px',\n                            borderBottom:'1px solid rgb(221,221,221)'\n                        }}\n                    >\n                    <div\n                        style={{\n                        height:'25px',\n                        width:'25px',\n                        backgroundColor:'transparent',\n                        position: 'relative',\n                        top:'15px',\n                        left:'15px',\n                        zIndex:102,\n                        transform:'translate(0px,-20px)'\n                        }}\n                    >\n                        <TouchableOpacity\n                        onPress={()=>{\n                            props.togglePrivacyPolicyPopUpShow()\n                        }}\n                        >\n                        <img\n                        src={xIcon}\n                        style={{\n                            height:'25px',\n                            width:'25px',\n                        }}\n                        >\n                        </img>\n                        </TouchableOpacity>\n                    </div>\n                    <Text\n                        style={{\n                            fontWeight:700,\n                            transform:'translate(0px,-23px)'\n                        }}\n                    >개인정보 취급 방침</Text>\n                    </View>\n\n                <div\n                    style={{\n                    display: 'block',\n                    textAlign:'left',\n                    padding:'15px',\n                    overflowY:'scroll',\n                    backgroundColor:'white',\n                    height:'100%'\n                }} \n                >\n                   <Text>\n                    개인정보 처리방침 ​ (주)쿼키(이하 “회사”)는 통신비밀보호법, 전기통신사업법, 정보통신망 이용촉진 및 정보보호 등에 관한 법률 등 정보통신 서비스 제공자가 준수하여야 할 관련 법령 상의 개인정보 보호 규정을 준수하며, 관련 법령에 의거한 개인정보 취급 방침을 정하여 이용자 권익 보호에 최선을 다하고 있습니다. 본 개인정보 처리 방침은 회사가 제공하는 클립 (CLIP) 서비스에 적용되며 다음과 같은 내용을 포함하고 있습니다. ​ 1. 개인정보 수집 및 이용 현황 회사는 서비스 제공을 위한 최소한의 범위 내에서 이용자의 동의 하에 개인정보를 수집하며, 수집한 모든 개인정보는 고지한 목적 범위 내에서만 사용됩니다. 필수정보 - 수집 항목: 전자메일(아이디), 비밀번호, 이름, 회사명, 회사규모, 직종, 직책, 전화번호, 웹사이트,블로그 또는 SNS주소, 직종, 직책, 전문분야, 회사규모. - 수집 및 이용목적: 본인 확인 및 가입 의사 확인, 회원가입 승인여부 판단, 부정이용 확인∙방지, 상담 및 문의 처리, 회원 맞춤형 정보 제공. - 보유 및 이용기간: 회원 탈퇴 시 즉시 삭제함. 부정이용 방지를 위한 정보(ID, 불량 이용 기록)는 탈퇴DB에서 6개월 후 삭제함. 추가정보 - 수집 항목: 수취인정보(이름, 연락처, 주소), 프로젝트정보(프로젝트 이름, 유형, 규모, 시기 등), 샘플이용정보(적용부위, 시공여부 등), 통화가능 시간. - 수집 및 이용목적: 물품의 주문/배송/취소. 제품 안내 및 상담, 문의 처리, 샘플제공업체 마케팅 정보 제공 - 보유 및 이용기간: 재화 또는 서비스의 제공 목적이 달성된 후 파기(단, 관계법령에 정해진 규정에 따라 법정기간 동안 보관). 거래기록 보존을 위한 정보(ID, 계좌번호, 배송지 주소)는 5년간 보관함(전자상거래 등에서의 소비자보호에 관한 법률). 선택정보 - 수집 항목: 마케팅 정보 수신 동의(휴대폰 번호, 전자메일, SMS/MMS), 뉴스레터 수신 동의(전자메일). - 수집 및 이용목적: 신규 서비스 안내, 설문, 이벤트 관련 정보 및 참여 기회 제공, 광고 및 마케팅 정보 제공. - 보유 및 이용기간: 정보 삭제 또는 이용 정지 요청 및 회원 탈퇴 시 즉시 삭제 ※ 부정이용이란 회원 탈퇴 후 재가입, 허위정보를 통한 물품 주문, 물품 주문 후 구매취소 등을 반복적으로 행하는 등, 이용약관 등에서 금지하고 있는 행위, 명의도용 등의 불·편법 행위 등을 포함합니다. ※ 고객의 권리를 보장해 드리기 위하여 탈퇴 회원 또는 장기 미이용 회원에게 환불 또는 리콜 안내를 목적으로 구매정보를 이용하여 연락을 취할 수 있습니다. ※ 위의 정보는 서비스 이용에 따른 통계∙분석에 이용될 수 있습니다. 2. 개인정보의 공유 및 제공 회사는 “1. 개인정보 수집 및 이용 현황”에서 고지한 범위 내에서만 개인정보를 이용하며, 이용자의 사전 동의 없이는 동 범위를 초과하여 이용하지 않습니다. 물품 주문이 이루어진 경우, 상담 및 배송 등의 원활한 거래 이행을 위하여 관련된 정보를 필요한 범위 내에서 샘플제공업체(제3자)에게 전달합니다. 제공받는 자: 샘플제공 업체 제공 목적: 서비스 제공, 업체 직발송 물품 배송, 제품 안내, 홍보 및 상담, 문의 처리 제공 정보: 수취인정보(이름, 연락처, 주소), 프로젝트정보(프로젝트 이름, 유형, 규모, 시기 등), 샘플이용정보(적용부위, 시공여부 등), 통화가능 시간. 보유 및 이용기간: 재화 또는 서비스의 제공 목적이 달성된 후 파기(단, 관계법령에 정해진 규정에 따라 법정기간 동안 보관) ※ 동의 거부권 등에 대한 고지 개인정보 제공은 서비스 이용을 위해 꼭 필요합니다. 개인정보 제공을 거부하실 수 있으나, 이 경우 서비스 이용이 제한될 수 있습니다. 개인정보 제3자 제공은 샘플 주문시에만 이뤄지며, 명확한 내용은 주문 신청 시 안내하여 드립니다. 3. 개인정보의 파기 수집된 개인정보의 보유•이용기간은 서비스 이용계약 체결(회원가입)시부터 서비스 이용계약 해지(탈퇴신청, 직권탈퇴포함)시까지 입니다. 또한 동의 해지 시 고객의 개인정보를 상기 명시한 정보보유 사유에 따라 일정 기간 저장하는 자료를 제외하고는 지체 없이 파기합니다. 종이에 출력된 개인정보는 분쇄기로 분쇄하거나 소각 등을 통하여 파기하고, 전자적 파일형태로 저장된 개인정보는 기록을 재생할 수 없는 기술적 방법 또는 물리적 방법을 사용하여 파기합니다. 수집•이용목적이 달성된 개인정보의 경우 별도의 DB에 옮겨져 내부규정 및 관련 법령을 준수하여 안전하게 보관되며, 정해진 기간이 종료되었을 때 지체없이 파기됩니다. 이때, 별도의 DB로 옮겨진 개인정보는 회원이 동의한 목적을 초과하거나 혹은 법률이 정한 경우 외의 다른 목적으로 이용되지 않습니다. 4. 고객의 권리와 의무 4.1 고객의 권리 고객 및 법정대리인은 언제든지 수집 정보에 대하여 수정, 동의 철회, 삭제, 열람을 요청할 수 있습니다. 다만, 동의 철회, 삭제 시 서비스의 일부 또는 전부 이용이 제한될 수 있습니다. 회사가 수집한 개인정보는 CLIP 웹페이지에서 - 개인정보 확인 수정 / 주문목록 / 배송조회를 통해 확인할 수 있습니다. CLIP 웹을 통해 직접 확인하지 못하는 정보는 고객센터 help@clip.style에 요청하여 확인할 수 있습니다. 개인정보 동의 철회 및 삭제, 처리 정지를 요청하고자 하는 경우에는 고객센터 help@clip.style을 통해 요청할 수 있습니다. 또한, 고객은 언제든 회원탈퇴를 통해 개인정보의 수집 및 이용 동의를 철회할 수 있습니다. 이러한 요청 시, 서비스의 일부 또는 전부 이용이 제한될 수 있습니다. 또한 법률에 특별한 규정이 있거나 법령상 의무를 준수하기 위하여 불가피한 경우, 다른 사람의 생명·신체를 해할 우려가 있거나 다른사람의 재산과 그 밖의 이익을 부당하게 침해할 우려가 있는 경우, 개인정보를 처리하지 아니하면 정보 주체와 약정한 서비스를 제공하지 못하는 등 계약의 이행이 곤란한 경우로서 정보주체가 그 계약의 해지 의사를 명확하게 밝히지 아니한경우에는 동의 철회, 삭제, 처리 정지가 어려울 수 있습니다. 요청하신 처리가 완료될 때까지 해당 정보를 이용하거나 타인에게 제공하지 않습니다. 또한, 합리적인 사유로 잘못된 개인정보를 제3자에게 이미 제공한 경우, 그 결과를 지체 없이 제3자에게 통지하여 동의 철회, 삭제, 처리 정지하도록 조치합니다. 4.2. 고객의 의무 고객은 자신의 개인정보를 보호할 의무가 있으며, 회사의 귀책사유가 없이 ID(이메일 주소), 비밀번호, 접근매체 등의양도·대여·분실이나 로그인 상태에서 이석 등 고객 본인의 부주의나 관계법령에 의한 보안조치로 차단할 수 없는 방법이나 기술을 사용한 해킹 등 회사가 상당한 주의에도 불구하고 통제할 수 없는 인터넷상의 문제 등으로 개인정보가 유출되어 발생한 문제에 대해 회사는 책임을 지지 않습니다. 고객은 자신의 개인정보를 최신의 상태로 유지해야 하며, 고객의 부정확한 정보 입력으로 발생하는 문제의 책임은 고객 자신에게 있습니다. 타인의 개인정보를 도용한 회원가입 또는 ID등을 도용하여 결제 처리 시 고객 자격 상실과 함께 관계법령에 의거하여 처벌될 수 있습니다. 고객은 아이디, 비밀번호 등에 대해 보안을 유지할 책임이 있으며 제3자에게 이를 양도하거나 대여할 수 없습니다. 고객은 회사의 개인정보보호정책에 따라 보안을 위한 주기적인 활동에 협조할 의무가 있습니다. 5. 자동 수집되는 개인정보 및 거부에 관한 사항 회사는 이용자 맞춤서비스 등을 제공하기 위하여 쿠키(cookie)를 설치 및 운영합니다. 쿠키의 사용 목적과 거부에 관한 사항은 아래와 같습니다. 가. 쿠키란? 쿠키는 웹사이트를 운영하는데 이용되는 서버가 이용자의 브라우저에 보내는 아주 작은 텍스트 파일로서 이용자의 컴퓨터에 저장되어 운영됩니다. 나. 쿠키의 사용 목적 이용자들의 접속 관리, 이용자 별 사용 환경 제공, 이용자 활동 정보 파악, 이벤트 및 프로모션 통계 확인 등을 파악하여 최적화된 맞춤형 서비스를 제공하기 위해 사용합니다. 다. 쿠키의 설치·운영 및 거부 서비스를 이용함에 있어 이용자는 쿠키 설치에 대한 선택권을 가지고 있습니다. 이용자는 웹 브라우저에서 옵션을 설정함으로써 모든 쿠키를 허용 또는 거부 하거나, 쿠키가 저장될 때마다 확인을 거치도록 할 수 있습니다. 쿠키 설치 허용 여부를 지정하는 방법은 다음과 같습니다. Internet Explorer : 웹 브라우저 상단 도구 메뉴 > 인터넷 옵션 > 개인정보 > 개인정보처리 수준 설정Chrome : 웹 브라우저 우측 설정 메뉴 > 도구 > 인터넷 사용기록 삭제 6. 개인정보 보호책임자 및 담당자 안내 고객의 개인정보에 관한 업무를 총괄해서 책임지고, 개인정보와 관련된 불만처리 및 피해구제 등을 위하여 아래와 같이 개인정보 보호책임자 및 담당부서를 지정하여 운영하고 있습니다. 회사가 제공하는 서비스를 이용하면서 발생하는 개인정보 보호 관련 문의, 불만, 피해구제 등에 관한 사항은 아래로 연락하여 문의할 수 있습니다. 개인정보 보호책임자 성명: 부창용 이메일: help@clip.style 개인정보 민원처리 담당부서 부서명: (주)쿼키 고객센터 이메일: help@clip.style 기타 개인정보 침해에 대한 신고나 상담이 필요하신 경우에는 아래 기관에 문의하시기 바랍니다. 대검찰청 사이버범죄 수사단 (www.spo.go.kr / 국번없이 1301) 개인정보 침해 신고 센터 (privacy.kisa.or.kr / 국번없이 118) 경찰청 사이버안전국 (http://cyberbureau.police.go.kr / 국번없이 182) 7. 링크사이트 회사는 홈페이지에 다른 회사의 웹사이트 또는 자료에 대한 링크를 제공할 수 있습니다. 홈페이지에 링크되어 있는 다른 회사의 웹사이트로 옮겨갈 경우 해당 웹사이트의 개인정보처리방침이 적용됩니다. 8. 고지의 의무 이 개인정보 처리방침은 시행일로부터 적용됩니다. 고객의 개인정보 권리에 중요한 변경 사유가 발생하는 경우 최소 14일전에 공지사항을 통하여 고지합니다. 이 외의 다른 변경사항이 발생하는 경우에는 변경사항의 시행 최소 7일 전부터 공지사항을 통해 고지합니다. 현재 개인정보 처리방침 공고일자: 2020년   12월 1일 현재 개인정보 처리방침 시행일자: 2020년   12월 1일   \n                    </Text>\n                    \n                    \n                </div>\n                <div\n                        style={{\n                            \n                            borderTop:'1px solid rgb(221,221,221)',\n                            paddingLeft:'15px',\n                            paddingRight:'15px',\n                            paddingBottom:'15px'\n                        }}\n                    >\n                   <TouchableOpacity\n                        style={{\n                            marginTop:'15px',\n                            backgroundColor:'rgb(255,123,88)',\n                            borderRadius:\"10px\",\n                            height:'40px',\n                            textAlign:'center',\n                            justifyContent:'center'\n                        }}\n                        onPress={()=>{\n                            props.togglePrivacyPolicyPopUpShow()\n                        }}\n                    >\n                        <Text\n                            style={{\n                                color:'white'\n                            }}\n                        >\n                            확인\n                        </Text>\n                    </TouchableOpacity>\n                    </div>\n                </View>\n                {/* <Text>{props.material_num}</Text> */}\n            </div>\n        </div>\n    </div>\n        );\n    \n\n}\nexport default PrivacyPolicyPopUp","/Users/bernardahn/Documents/GitHub/clip/src/components/WrongPinCode.js",["841","842","843","844","845","846","847","848","849","850","851","852"],"import React,{useEffect} from 'react';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport NavBarFiller from './NavBarFiller';\nimport Pagination from './Pagination';\nimport {TouchableOpacity,Text,View,Modal,Image,Linking,Dimensions,TextInput} from 'react-native';\nimport xIcon from '../assets/x.png';\nimport './Login.css'\nconst queryString = require('query-string');\n\nfunction WrongPinCode(props){\n    const [height,setHeight]=React.useState(Dimensions.get('window').height)\n    const [width,setWidth]=React.useState(Dimensions.get('window').width)\n\n    const onChange=()=>{\n        setHeight(Dimensions.get('window').height)\n        setWidth(Dimensions.get('window').width)\n        // console.log(height+\" : \"+width)\n      }\n    \n    useEffect(() => {\n        Dimensions.addEventListener('change',onChange) \n      },[])\n\n   \n\n   \n        return (\n            <div\n            style={{\n            position:'fixed',\n            height:'100vh',\n            width:'100vw',\n            top:0,\n            left:0,\n            backgroundColor:'rgba(0,0,0,0.5)',\n            display:'block',\n        //   padding:'160px',\n            zIndex:103\n            }}\n        >\n        <div\n        style={{\n            paddingTop:'100px',\n            // paddingLeft:'100px',\n            // paddingRight:'100px'\n        }}\n        >\n            <div\n            style={{\n                textAlign:'left',\n                // margin:'25pt'\n                paddingLeft:'0px',\n                paddingRight:'0px',\n                backgroundColor:'transparent'\n            }}\n            >\n            </div>\n\n\n            <div\n            style={{\n            borderRadius:'10px',\n            backgroundColor:'white',\n            width:'500px',\n            height:'200px',\n            paddingTop:'15px',\n            // columnCount:3,\n            // flexwrap:'wrap',\n            // flexDirection:'column',\n            // display: 'grid',\n            // gridTemplateColumns: 'auto auto',\n            // // padding:'100px',\n            overflowY: 'scroll',\n            marginLeft:'auto',\n            marginRight:'auto'\n            }}\n            >\n                \n            \n                <View\n                style={{\n                    backgroundColor:'white',\n                    height:'198px',\n                    width:'100%',\n                    borderBottomLeftRadius:'10px',\n                    borderBottomRightRadius:'10px'\n\n                }}\n                >\n                    <View\n                        style={{\n                            position:'relative',\n                            top:0,\n                            height:'30px',\n                            width:'100%',\n                            backgroundColor:'white',\n                            borderTopLeftRadius:'10px',\n                            borderTopRightRadius:'10px',\n                            borderBottom:'1px solid rgb(221,221,221)'\n                        }}\n                    >\n                    <div\n                style={{\n                height:'25px',\n                width:'25px',\n                backgroundColor:'transparent',\n                position: 'relative',\n                top:'15px',\n                left:'15px',\n                zIndex:102,\n                transform:'translate(0px,-20px)'\n                }}\n            >\n                <TouchableOpacity\n                onPress={()=>{\n                    props.toggleWrongPinCodeShow()\n                }}\n                >\n                <img\n                src={xIcon}\n                style={{\n                    height:'25px',\n                    width:'25px',\n                }}\n                >\n                </img>\n                </TouchableOpacity>\n            </div>\n                    <Text\n                        style={{\n                            fontWeight:700,\n                            transform:'translate(0px,-23px)',\n                        }}\n                    >인증번호가 틀렸습니다</Text>\n                    </View>\n\n                <div\n                    style={{\n                    display: 'block',\n                    textAlign:'left',\n                    padding:'15px',\n                    overflowY:'scroll',\n                    backgroundColor:'white',\n                    height:'100%'\n                }} \n                >\n                    <Text>인증번호가 틀렸습니다. 인증번호 확인 후 다시 입력해주세요</Text>\n                    \n                    \n                    \n                    \n                </div>\n                <div\n                        style={{\n                            \n                            borderTop:'1px solid rgb(221,221,221)',\n                            paddingLeft:'15px',\n                            paddingRight:'15px',\n                            paddingBottom:'15px'\n                        }}\n                    >\n                   <TouchableOpacity\n                        style={{\n                            marginTop:'15px',\n                            backgroundColor:'rgb(255,123,88)',\n                            borderRadius:\"10px\",\n                            height:'40px',\n                            textAlign:'center',\n                            justifyContent:'center'\n                        }}\n                        onPress={()=>{\n                            props.toggleWrongPinCodeShow()\n                        }}\n                    >\n                        <Text\n                            style={{\n                                color:'white'\n                            }}\n                        >\n                            확인\n                        </Text>\n                    </TouchableOpacity>\n                    </div>\n                </View>\n                {/* <Text>{props.material_num}</Text> */}\n            </div>\n        </div>\n    </div>\n        );\n    \n\n}\nexport default WrongPinCode","/Users/bernardahn/Documents/GitHub/clip/src/components/RegistrationSuccess.js",["853","854","855","856","857","858","859","860","861","862","863","864"],"/Users/bernardahn/Documents/GitHub/clip/src/components/EmailAlreadyExists.js",["865","866","867","868","869","870","871","872","873","874","875","876"],"import React,{useEffect} from 'react';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport NavBarFiller from './NavBarFiller';\nimport Pagination from './Pagination';\nimport {TouchableOpacity,Text,View,Modal,Image,Linking,Dimensions,TextInput} from 'react-native';\nimport xIcon from '../assets/x.png';\nimport './Login.css'\nconst queryString = require('query-string');\n\nfunction RegistrationSuccess(props){\n    const [height,setHeight]=React.useState(Dimensions.get('window').height)\n    const [width,setWidth]=React.useState(Dimensions.get('window').width)\n\n    const onChange=()=>{\n        setHeight(Dimensions.get('window').height)\n        setWidth(Dimensions.get('window').width)\n        // console.log(height+\" : \"+width)\n      }\n    \n    useEffect(() => {\n        Dimensions.addEventListener('change',onChange) \n      },[])\n\n   \n\n   \n        return (\n            <div\n            style={{\n            position:'fixed',\n            height:'100vh',\n            width:'100vw',\n            top:0,\n            left:0,\n            backgroundColor:'rgba(0,0,0,0.5)',\n            display:'block',\n        //   padding:'160px',\n            zIndex:103\n            }}\n        >\n        <div\n        style={{\n            paddingTop:'100px',\n            paddingLeft:'100px',\n            paddingRight:'100px'\n        }}\n        >\n            <div\n            style={{\n                textAlign:'left',\n                // margin:'25pt'\n                paddingLeft:'0px',\n                paddingRight:'0px',\n                backgroundColor:'transparent'\n            }}\n            >\n            </div>\n\n\n            <div\n            style={{\n            borderRadius:'10px',\n            backgroundColor:'white',\n            width:'100%',\n            height:'300px',\n            paddingTop:'15px',\n            // columnCount:3,\n            // flexwrap:'wrap',\n            // flexDirection:'column',\n            // display: 'grid',\n            // gridTemplateColumns: 'auto auto',\n            // // padding:'100px',\n            overflowY: 'scroll',\n            }}\n            >\n                <div\n                style={{\n                height:'25px',\n                width:'25px',\n                backgroundColor:'transparent',\n                position: 'absolute',\n                top:'110px',\n                left:'110px',\n                zIndex:102,\n                }}\n            >\n                <TouchableOpacity\n                onPress={()=>{\n                    props.toggleEmailAlreadyExistsScreen()\n                }}\n                >\n                <img\n                src={xIcon}\n                style={{\n                    height:'25px',\n                    width:'25px',\n                }}\n                >\n                </img>\n                </TouchableOpacity>\n            </div>\n            \n                <View\n                style={{\n                    backgroundColor:'white',\n                    height:'298px',\n                    width:'100%',\n                    borderBottomLeftRadius:'10px',\n                    borderBottomRightRadius:'10px'\n\n                }}\n                >\n                    <View\n                        style={{\n                            position:'relative',\n                            top:0,\n                            height:'30px',\n                            width:'100%',\n                            backgroundColor:'white',\n                            borderTopLeftRadius:'10px',\n                            borderTopRightRadius:'10px',\n                            borderBottom:'1px solid rgb(221,221,221)'\n                        }}\n                    >\n                    <Text\n                        style={{\n                            fontWeight:700,\n                        }}\n                    >등록된 이메일</Text>\n                    </View>\n\n                <div\n                    style={{\n                    display: 'flex',\n                    textAlign:'left',\n                    padding:'15px',\n                    overflowY:'scroll',\n                    backgroundColor:'white',\n                    height:'100%',\n                    flexDirection:'column',\n                }} \n                >\n                    <Text>이미 등록된 이메일 주소 입니다. 등록된 이메일로 로그인 해주세요.</Text>\n                    \n                </div>\n                <div\n                    style={{\n                        \n                        borderTop:'1px solid rgb(221,221,221)',\n                        paddingLeft:'15px',\n                        paddingRight:'15px',\n                        paddingBottom:'15px'\n                    }}\n                >\n                   <TouchableOpacity\n                        style={{\n                            marginTop:'15px',\n                            backgroundColor:'rgb(255,123,88)',\n                            borderRadius:\"10px\",\n                            height:'40px',\n                            textAlign:'center',\n                            justifyContent:'center'\n                        }}\n                        onPress={()=>{\n                            props.toggleEmailAlreadyExistsScreen()\n                        }}\n                    >\n                        <Text\n                            style={{\n                                color:'white'\n                            }}\n                        >\n                            확인\n                        </Text>\n                    </TouchableOpacity>\n                    </div>\n                </View>\n                {/* <Text>{props.material_num}</Text> */}\n            </div>\n        </div>\n    </div>\n        );\n    \n\n}\nexport default RegistrationSuccess","/Users/bernardahn/Documents/GitHub/clip/src/components/AlreadyMemberMessage.js",["877","878","879","880","881","882","883","884","885","886","887","888"],"import React,{useEffect} from 'react';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport NavBarFiller from './NavBarFiller';\nimport Pagination from './Pagination';\nimport {TouchableOpacity,Text,View,Modal,Image,Linking,Dimensions,TextInput} from 'react-native';\nimport xIcon from '../assets/x.png';\nimport './Login.css'\nconst queryString = require('query-string');\n\nfunction WrongPinCode(props){\n    const [height,setHeight]=React.useState(Dimensions.get('window').height)\n    const [width,setWidth]=React.useState(Dimensions.get('window').width)\n\n    const onChange=()=>{\n        setHeight(Dimensions.get('window').height)\n        setWidth(Dimensions.get('window').width)\n        // console.log(height+\" : \"+width)\n      }\n    \n    useEffect(() => {\n        Dimensions.addEventListener('change',onChange) \n      },[])\n\n   \n\n   \n        return (\n            <div\n            style={{\n            position:'fixed',\n            height:'100vh',\n            width:'100vw',\n            top:0,\n            left:0,\n            backgroundColor:'rgba(0,0,0,0.5)',\n            display:'block',\n        //   padding:'160px',\n            zIndex:103\n            }}\n        >\n        <div\n        style={{\n            paddingTop:'100px',\n            // paddingLeft:'100px',\n            // paddingRight:'100px'\n        }}\n        >\n            <div\n            style={{\n                textAlign:'left',\n                // margin:'25pt'\n                paddingLeft:'0px',\n                paddingRight:'0px',\n                backgroundColor:'transparent'\n            }}\n            >\n            </div>\n\n\n            <div\n            style={{\n            borderRadius:'10px',\n            backgroundColor:'white',\n            width:'500px',\n            height:'200px',\n            paddingTop:'15px',\n            // columnCount:3,\n            // flexwrap:'wrap',\n            // flexDirection:'column',\n            // display: 'grid',\n            // gridTemplateColumns: 'auto auto',\n            // // padding:'100px',\n            overflowY: 'scroll',\n            marginLeft:'auto',\n            marginRight:'auto'\n            }}\n            >\n                \n            \n                <View\n                style={{\n                    backgroundColor:'white',\n                    height:'198px',\n                    width:'100%',\n                    borderBottomLeftRadius:'10px',\n                    borderBottomRightRadius:'10px'\n\n                }}\n                >\n                    <View\n                        style={{\n                            position:'relative',\n                            top:0,\n                            height:'30px',\n                            width:'100%',\n                            backgroundColor:'white',\n                            borderTopLeftRadius:'10px',\n                            borderTopRightRadius:'10px',\n                            borderBottom:'1px solid rgb(221,221,221)'\n                        }}\n                    >\n                    <div\n                        style={{\n                        height:'25px',\n                        width:'25px',\n                        backgroundColor:'transparent',\n                        position: 'relative',\n                        top:'15px',\n                        left:'15px',\n                        zIndex:102,\n                        transform:'translate(0px,-20px)'\n                        }}\n                    >\n                        <TouchableOpacity\n                        onPress={()=>{\n                            props.toggleAlreadyMemberMessageShow()\n                        }}\n                        >\n                        <img\n                        src={xIcon}\n                        style={{\n                            height:'25px',\n                            width:'25px',\n                        }}\n                        >\n                        </img>\n                        </TouchableOpacity>\n                    </div>\n                    <Text\n                        style={{\n                            fontWeight:700,\n                            transform:'translate(0px,-23px)'\n                        }}\n                    >가입된 휴대폰 번호</Text>\n                    </View>\n\n                <div\n                    style={{\n                    display: 'block',\n                    textAlign:'left',\n                    padding:'15px',\n                    overflowY:'scroll',\n                    backgroundColor:'white',\n                    height:'100%'\n                }} \n                >\n                    <Text>이미 가입된 휴대폰 번호 입니다. 로그인 페이지에서 로그인 해주세요</Text>\n                    \n                    \n                    \n                    \n                </div>\n                <div\n                        style={{\n                            \n                            borderTop:'1px solid rgb(221,221,221)',\n                            paddingLeft:'15px',\n                            paddingRight:'15px',\n                            paddingBottom:'15px'\n                        }}\n                    >\n                   <TouchableOpacity\n                        style={{\n                            marginTop:'15px',\n                            backgroundColor:'rgb(255,123,88)',\n                            borderRadius:\"10px\",\n                            height:'40px',\n                            textAlign:'center',\n                            justifyContent:'center'\n                        }}\n                        onPress={()=>{\n                            props.toggleAlreadyMemberMessageShow()\n                        }}\n                    >\n                        <Text\n                            style={{\n                                color:'white'\n                            }}\n                        >\n                            확인\n                        </Text>\n                    </TouchableOpacity>\n                    </div>\n                </View>\n                {/* <Text>{props.material_num}</Text> */}\n            </div>\n        </div>\n    </div>\n        );\n    \n\n}\nexport default WrongPinCode","/Users/bernardahn/Documents/GitHub/clip/src/components/SentEmail.js",["889","890","891","892","893","894","895","896","897","898","899","900"],"import React,{useEffect} from 'react';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport NavBarFiller from './NavBarFiller';\nimport Pagination from './Pagination';\nimport {TouchableOpacity,Text,View,Modal,Image,Linking,Dimensions,TextInput} from 'react-native';\nimport xIcon from '../assets/x.png';\nimport './Login.css'\nconst queryString = require('query-string');\n\nfunction SentEmail(props){\n    const [height,setHeight]=React.useState(Dimensions.get('window').height)\n    const [width,setWidth]=React.useState(Dimensions.get('window').width)\n\n    const onChange=()=>{\n        setHeight(Dimensions.get('window').height)\n        setWidth(Dimensions.get('window').width)\n        // console.log(height+\" : \"+width)\n      }\n    \n    useEffect(() => {\n        Dimensions.addEventListener('change',onChange) \n      },[])\n\n   \n\n   \n        return (\n            <div\n            style={{\n            position:'fixed',\n            height:'100vh',\n            width:'100vw',\n            top:0,\n            left:0,\n            backgroundColor:'rgba(0,0,0,0.5)',\n            display:'block',\n        //   padding:'160px',\n            zIndex:103\n            }}\n        >\n        <div\n        style={{\n            paddingTop:'100px',\n            paddingLeft:'100px',\n            paddingRight:'100px'\n        }}\n        >\n            <div\n            style={{\n                textAlign:'left',\n                // margin:'25pt'\n                paddingLeft:'0px',\n                paddingRight:'0px',\n                backgroundColor:'transparent'\n            }}\n            >\n            </div>\n\n\n            <div\n            style={{\n            borderRadius:'10px',\n            backgroundColor:'white',\n            width:'100%',\n            height:'200px',\n            paddingTop:'15px',\n            // columnCount:3,\n            // flexwrap:'wrap',\n            // flexDirection:'column',\n            // display: 'grid',\n            // gridTemplateColumns: 'auto auto',\n            // // padding:'100px',\n            overflowY: 'scroll',\n            }}\n            >\n                <div\n                style={{\n                height:'25px',\n                width:'25px',\n                backgroundColor:'transparent',\n                position: 'absolute',\n                top:'110px',\n                left:'110px',\n                zIndex:102,\n                }}\n            >\n                <TouchableOpacity\n                onPress={()=>{\n                    props.toggleSentEmailShow()\n                }}\n                >\n                <img\n                src={xIcon}\n                style={{\n                    height:'25px',\n                    width:'25px',\n                }}\n                >\n                </img>\n                </TouchableOpacity>\n            </div>\n            \n                <View\n                style={{\n                    backgroundColor:'white',\n                    height:'198px',\n                    width:'100%',\n                    borderBottomLeftRadius:'10px',\n                    borderBottomRightRadius:'10px'\n\n                }}\n                >\n                    <View\n                        style={{\n                            position:'relative',\n                            top:0,\n                            height:'30px',\n                            width:'100%',\n                            backgroundColor:'white',\n                            borderTopLeftRadius:'10px',\n                            borderTopRightRadius:'10px',\n                            borderBottom:'1px solid rgb(221,221,221)'\n                        }}\n                    >\n                    <Text\n                        style={{\n                            fontWeight:700,\n                        }}\n                    >이메일 찾기</Text>\n                    </View>\n\n                <div\n                    style={{\n                    display: 'block',\n                    textAlign:'left',\n                    padding:'15px',\n                    overflowY:'scroll',\n                    backgroundColor:'white',\n                    height:'100%'\n                }} \n                >\n                    <Text>{props.secureEmailString}으로 확인 이메일이 전송되었습니다. 이메일주소를 확인해주시고 로그인 해주세요.</Text>\n                    \n                    \n                    \n                    \n                </div>\n                <div\n                        style={{\n                            \n                            borderTop:'1px solid rgb(221,221,221)',\n                            paddingLeft:'15px',\n                            paddingRight:'15px',\n                            paddingBottom:'15px'\n                        }}\n                    >\n                   <TouchableOpacity\n                        style={{\n                            marginTop:'15px',\n                            backgroundColor:'rgb(255,123,88)',\n                            borderRadius:\"10px\",\n                            height:'40px',\n                            textAlign:'center',\n                            justifyContent:'center'\n                        }}\n                        onPress={()=>{\n                            props.toggleSentEmailShow()\n                        }}\n                    >\n                        <Text\n                            style={{\n                                color:'white'\n                            }}\n                        >\n                            로그인 하기\n                        </Text>\n                    </TouchableOpacity>\n                    </div>\n                </View>\n                {/* <Text>{props.material_num}</Text> */}\n            </div>\n        </div>\n    </div>\n        );\n    \n\n}\nexport default SentEmail","/Users/bernardahn/Documents/GitHub/clip/src/components/AlreadyKakaoMember.js",["901","902","903","904","905","906","907","908","909","910","911","912"],"import React,{useEffect} from 'react';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport NavBarFiller from './NavBarFiller';\nimport Pagination from './Pagination';\nimport {TouchableOpacity,Text,View,Modal,Image,Linking,Dimensions,TextInput} from 'react-native';\nimport xIcon from '../assets/x.png';\nimport './Login.css'\nconst queryString = require('query-string');\n\nfunction AlreadyKakaoMember(props){\n    const [height,setHeight]=React.useState(Dimensions.get('window').height)\n    const [width,setWidth]=React.useState(Dimensions.get('window').width)\n\n    const onChange=()=>{\n        setHeight(Dimensions.get('window').height)\n        setWidth(Dimensions.get('window').width)\n        // console.log(height+\" : \"+width)\n      }\n    \n    useEffect(() => {\n        Dimensions.addEventListener('change',onChange) \n      },[])\n\n   \n\n   \n        return (\n            <div\n            style={{\n            position:'fixed',\n            height:'100vh',\n            width:'100vw',\n            top:0,\n            left:0,\n            backgroundColor:'rgba(0,0,0,0.5)',\n            display:'block',\n        //   padding:'160px',\n            zIndex:103\n            }}\n        >\n        <div\n        style={{\n            paddingTop:'100px',\n            // paddingLeft:'100px',\n            // paddingRight:'100px'\n        }}\n        >\n            <div\n            style={{\n                textAlign:'left',\n                // margin:'25pt'\n                paddingLeft:'0px',\n                paddingRight:'0px',\n                backgroundColor:'transparent'\n            }}\n            >\n            </div>\n\n\n            <div\n            style={{\n            borderRadius:'10px',\n            backgroundColor:'white',\n            width:'500px',\n            height:'200px',\n            paddingTop:'15px',\n            // columnCount:3,\n            // flexwrap:'wrap',\n            // flexDirection:'column',\n            // display: 'grid',\n            // gridTemplateColumns: 'auto auto',\n            // // padding:'100px',\n            overflowY: 'scroll',\n            marginLeft:'auto',\n            marginRight:'auto'\n            }}\n            >\n                \n            \n                <View\n                style={{\n                    backgroundColor:'white',\n                    height:'198px',\n                    width:'100%',\n                    borderBottomLeftRadius:'10px',\n                    borderBottomRightRadius:'10px'\n\n                }}\n                >\n                    <View\n                        style={{\n                            position:'relative',\n                            top:0,\n                            height:'30px',\n                            width:'100%',\n                            backgroundColor:'white',\n                            borderTopLeftRadius:'10px',\n                            borderTopRightRadius:'10px',\n                            borderBottom:'1px solid rgb(221,221,221)'\n                        }}\n                    >\n                    <div\n                        style={{\n                        height:'25px',\n                        width:'25px',\n                        backgroundColor:'transparent',\n                        position: 'relative',\n                        top:'15px',\n                        left:'15px',\n                        zIndex:102,\n                        transform:'translate(0px,-20px)',\n                        }}\n                    >\n                        <TouchableOpacity\n                        onPress={()=>{\n                            props.toggleAlreadyKakaoMemberShow()\n                        }}\n                        >\n                        <img\n                        src={xIcon}\n                        style={{\n                            height:'25px',\n                            width:'25px',\n                        }}\n                        >\n                        </img>\n                        </TouchableOpacity>\n                    </div>\n                    <Text\n                        style={{\n                            fontWeight:700,\n                            transform:'translate(0px,-23px)',\n                        }}\n                    >가입된 휴대폰번호</Text>\n                    </View>\n\n                <div\n                    style={{\n                    display: 'block',\n                    textAlign:'left',\n                    padding:'15px',\n                    overflowY:'scroll',\n                    backgroundColor:'white',\n                    height:'100%'\n                }} \n                >\n                    <Text>카카오로 가입된 휴대폰 번호입니다. 카카오로 시작해주세요.</Text>\n                    \n                    \n                    \n                    \n                </div>\n                <div\n                        style={{\n                            \n                            borderTop:'1px solid rgb(221,221,221)',\n                            paddingLeft:'15px',\n                            paddingRight:'15px',\n                            paddingBottom:'15px'\n                        }}\n                    >\n                   <TouchableOpacity\n                        style={{\n                            marginTop:'15px',\n                            backgroundColor:'rgb(255,123,88)',\n                            borderRadius:\"10px\",\n                            height:'40px',\n                            textAlign:'center',\n                            justifyContent:'center'\n                        }}\n                        onPress={()=>{\n                            props.toggleAlreadyKakaoMemberShow()\n                        }}\n                    >\n                        <Text\n                            style={{\n                                color:'white'\n                            }}\n                        >\n                            확인\n                        </Text>\n                    </TouchableOpacity>\n                    </div>\n                </View>\n                {/* <Text>{props.material_num}</Text> */}\n            </div>\n        </div>\n    </div>\n        );\n    \n\n}\nexport default AlreadyKakaoMember","/Users/bernardahn/Documents/GitHub/clip/src/components/AppleAuth.js",["913","914","915","916","917","918","919","920","921"],"import AppleLogin from \"react-apple-login\";\nimport { useState } from \"react\";\nimport {TouchableOpacity,Text,View,Modal,Image,Linking,Dimensions,TextInput} from 'react-native';\n// import { token } from \"./Secrets\";\n// Secrets.js is gitignored until i find a way to handle secrets\n// cafe24 doesn't have ENV interface. hardcoding it in.\n\nconst AppleAuth = (props) => {\n  const [profile, setProfile] = useState(null);\n\n  // Does this need to be async? or even useState?\n  const responseApple = (res) => {\n    // setProfile({data: res});\n    // const data = res;\n    console.log(res)\n    // props.setUserEmail(res.user.email)\n    // props.setSNSID(res.authorization.id_token)\n    const loginBody = {\n      mem_jointype: \"APPLE\",\n      mem_email: res.user.email,\n      mem_snsid: res.authorization.id_token,\n      mem_token: null,\n    };\n\n    console.log(loginBody);\n    // props.logInFunction(loginBody)\n  };\n\n  return (\n    <div>\n      <AppleLogin\n        // token={token}\n        // token='8c08c2009696a8de772e1b1990dc4521'\n        onSuccess={responseApple}\n        onFail={console.error}\n        onLogout={console.log}\n        // getProfile={true}\n        clientId=\"xyz.qwerky.clipapp\"\n        redirectURI=\"clip.style\"\n        style={{\n          height:'40px',\n          width:'100%',\n          alignItems:'center',\n          justifyContent:'center',\n          textAlign:'center',\n          backgroundColor:'white',\n          borderRadius:'10px',\n          border:\"1px solid black\",\n          marginBottom:'15px'\n        }}\n      >\n        <div style={{\n          height:'40px',\n          width:'100%',\n          lineHeight:'40px'\n        }}>\n          <Text>\n            Apple 계정으로 계속하기\n          </Text>\n        </div>\n      </AppleLogin>\n    </div>\n  );\n};\n\nexport default AppleAuth;\n","/Users/bernardahn/Documents/GitHub/clip/src/components/IntroImage.js",["922","923","924","925","926","927","928","929"],"/Users/bernardahn/Documents/GitHub/clip/src/components/MyPage.js",["930","931","932","933","934","935","936","937"],"/Users/bernardahn/Documents/GitHub/clip/src/components/Card.js",["938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962"],"/Users/bernardahn/Documents/GitHub/clip/src/components/PersonalInfoPage.js",["963","964","965","966","967","968","969","970","971","972","973","974","975"],"/Users/bernardahn/Documents/GitHub/clip/src/components/IntroImagePure.js",["976","977","978","979","980","981","982","983","984","985"],"/Users/bernardahn/Documents/GitHub/clip/src/components/MoodboardCard.js",[],"/Users/bernardahn/Documents/GitHub/clip/src/components/CategoryCard.js",[],{"ruleId":"986","severity":1,"message":"987","line":11,"column":8,"nodeType":"988","messageId":"989","endLine":11,"endColumn":14},{"ruleId":"986","severity":1,"message":"990","line":15,"column":8,"nodeType":"988","messageId":"989","endLine":15,"endColumn":18},{"ruleId":"986","severity":1,"message":"991","line":29,"column":8,"nodeType":"988","messageId":"989","endLine":29,"endColumn":18},{"ruleId":"992","severity":1,"message":"993","line":37,"column":6,"nodeType":"994","endLine":37,"endColumn":45},{"ruleId":"992","severity":1,"message":"993","line":42,"column":4,"nodeType":"994","endLine":42,"endColumn":43},{"ruleId":"992","severity":1,"message":"993","line":45,"column":4,"nodeType":"994","endLine":45,"endColumn":43},{"ruleId":"995","replacedBy":"996"},{"ruleId":"997","replacedBy":"998"},{"ruleId":"986","severity":1,"message":"999","line":4,"column":72,"nodeType":"988","messageId":"989","endLine":4,"endColumn":81},{"ruleId":"986","severity":1,"message":"1000","line":4,"column":82,"nodeType":"988","messageId":"989","endLine":4,"endColumn":88},{"ruleId":"986","severity":1,"message":"1001","line":4,"column":97,"nodeType":"988","messageId":"989","endLine":4,"endColumn":107},{"ruleId":"986","severity":1,"message":"1002","line":4,"column":108,"nodeType":"988","messageId":"989","endLine":4,"endColumn":116},{"ruleId":"986","severity":1,"message":"1003","line":6,"column":10,"nodeType":"988","messageId":"989","endLine":6,"endColumn":25},{"ruleId":"986","severity":1,"message":"1004","line":11,"column":8,"nodeType":"988","messageId":"989","endLine":11,"endColumn":13},{"ruleId":"986","severity":1,"message":"1005","line":12,"column":26,"nodeType":"988","messageId":"989","endLine":12,"endColumn":32},{"ruleId":"986","severity":1,"message":"1006","line":12,"column":46,"nodeType":"988","messageId":"989","endLine":12,"endColumn":50},{"ruleId":"986","severity":1,"message":"1007","line":29,"column":10,"nodeType":"988","messageId":"989","endLine":29,"endColumn":16},{"ruleId":"986","severity":1,"message":"1008","line":42,"column":10,"nodeType":"988","messageId":"989","endLine":42,"endColumn":31},{"ruleId":"986","severity":1,"message":"1009","line":42,"column":32,"nodeType":"988","messageId":"989","endLine":42,"endColumn":56},{"ruleId":"986","severity":1,"message":"1010","line":66,"column":9,"nodeType":"988","messageId":"989","endLine":66,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1012","line":75,"column":48,"nodeType":"1013","messageId":"1014","endLine":75,"endColumn":50},{"ruleId":"1011","severity":1,"message":"1015","line":76,"column":56,"nodeType":"1013","messageId":"1014","endLine":76,"endColumn":58},{"ruleId":"986","severity":1,"message":"1016","line":99,"column":9,"nodeType":"988","messageId":"989","endLine":99,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1015","line":114,"column":29,"nodeType":"1013","messageId":"1014","endLine":114,"endColumn":31},{"ruleId":"1011","severity":1,"message":"1015","line":164,"column":29,"nodeType":"1013","messageId":"1014","endLine":164,"endColumn":31},{"ruleId":"1011","severity":1,"message":"1015","line":169,"column":34,"nodeType":"1013","messageId":"1014","endLine":169,"endColumn":36},{"ruleId":"1011","severity":1,"message":"1015","line":179,"column":32,"nodeType":"1013","messageId":"1014","endLine":179,"endColumn":34},{"ruleId":"1011","severity":1,"message":"1015","line":183,"column":37,"nodeType":"1013","messageId":"1014","endLine":183,"endColumn":39},{"ruleId":"1011","severity":1,"message":"1012","line":236,"column":22,"nodeType":"1013","messageId":"1014","endLine":236,"endColumn":24},{"ruleId":"986","severity":1,"message":"1017","line":245,"column":9,"nodeType":"988","messageId":"989","endLine":245,"endColumn":15},{"ruleId":"986","severity":1,"message":"1018","line":285,"column":9,"nodeType":"988","messageId":"989","endLine":285,"endColumn":23},{"ruleId":"1019","severity":1,"message":"1020","line":314,"column":11,"nodeType":"1021","messageId":"1014","endLine":314,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1012","line":330,"column":46,"nodeType":"1013","messageId":"1014","endLine":330,"endColumn":48},{"ruleId":"1011","severity":1,"message":"1015","line":332,"column":65,"nodeType":"1013","messageId":"1014","endLine":332,"endColumn":67},{"ruleId":"1011","severity":1,"message":"1015","line":362,"column":14,"nodeType":"1013","messageId":"1014","endLine":362,"endColumn":16},{"ruleId":"1022","severity":1,"message":"1023","line":474,"column":25,"nodeType":"994","endLine":495,"endColumn":28},{"ruleId":"1022","severity":1,"message":"1023","line":540,"column":23,"nodeType":"994","endLine":546,"endColumn":24},{"ruleId":"1022","severity":1,"message":"1023","line":591,"column":23,"nodeType":"994","endLine":597,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1015","line":657,"column":48,"nodeType":"1013","messageId":"1014","endLine":657,"endColumn":50},{"ruleId":"992","severity":1,"message":"993","line":674,"column":25,"nodeType":"994","endLine":680,"endColumn":26},{"ruleId":"992","severity":1,"message":"993","line":698,"column":21,"nodeType":"994","endLine":700,"endColumn":22},{"ruleId":"992","severity":1,"message":"993","line":719,"column":21,"nodeType":"994","endLine":725,"endColumn":22},{"ruleId":"1011","severity":1,"message":"1015","line":853,"column":48,"nodeType":"1013","messageId":"1014","endLine":853,"endColumn":50},{"ruleId":"992","severity":1,"message":"993","line":870,"column":25,"nodeType":"994","endLine":876,"endColumn":26},{"ruleId":"992","severity":1,"message":"993","line":894,"column":17,"nodeType":"994","endLine":896,"endColumn":18},{"ruleId":"992","severity":1,"message":"993","line":915,"column":17,"nodeType":"994","endLine":921,"endColumn":18},{"ruleId":"992","severity":1,"message":"993","line":1027,"column":19,"nodeType":"994","endLine":1033,"endColumn":20},{"ruleId":"992","severity":1,"message":"993","line":1050,"column":19,"nodeType":"994","endLine":1052,"endColumn":20},{"ruleId":"992","severity":1,"message":"993","line":1071,"column":19,"nodeType":"994","endLine":1077,"endColumn":20},{"ruleId":"1011","severity":1,"message":"1015","line":1104,"column":20,"nodeType":"1013","messageId":"1014","endLine":1104,"endColumn":22},{"ruleId":"1022","severity":1,"message":"1023","line":1256,"column":25,"nodeType":"994","endLine":1277,"endColumn":28},{"ruleId":"1022","severity":1,"message":"1023","line":1322,"column":23,"nodeType":"994","endLine":1328,"endColumn":24},{"ruleId":"1022","severity":1,"message":"1023","line":1373,"column":23,"nodeType":"994","endLine":1379,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1015","line":1439,"column":48,"nodeType":"1013","messageId":"1014","endLine":1439,"endColumn":50},{"ruleId":"992","severity":1,"message":"993","line":1456,"column":25,"nodeType":"994","endLine":1462,"endColumn":26},{"ruleId":"992","severity":1,"message":"993","line":1480,"column":21,"nodeType":"994","endLine":1482,"endColumn":22},{"ruleId":"992","severity":1,"message":"993","line":1501,"column":21,"nodeType":"994","endLine":1507,"endColumn":22},{"ruleId":"1011","severity":1,"message":"1015","line":1648,"column":48,"nodeType":"1013","messageId":"1014","endLine":1648,"endColumn":50},{"ruleId":"992","severity":1,"message":"993","line":1665,"column":25,"nodeType":"994","endLine":1671,"endColumn":26},{"ruleId":"992","severity":1,"message":"993","line":1689,"column":17,"nodeType":"994","endLine":1691,"endColumn":18},{"ruleId":"992","severity":1,"message":"993","line":1710,"column":17,"nodeType":"994","endLine":1716,"endColumn":18},{"ruleId":"992","severity":1,"message":"993","line":1839,"column":21,"nodeType":"994","endLine":1845,"endColumn":22},{"ruleId":"992","severity":1,"message":"993","line":1862,"column":21,"nodeType":"994","endLine":1864,"endColumn":22},{"ruleId":"992","severity":1,"message":"993","line":1883,"column":21,"nodeType":"994","endLine":1889,"endColumn":22},{"ruleId":"1022","severity":1,"message":"1023","line":2075,"column":25,"nodeType":"994","endLine":2096,"endColumn":28},{"ruleId":"1022","severity":1,"message":"1023","line":2141,"column":23,"nodeType":"994","endLine":2147,"endColumn":24},{"ruleId":"1022","severity":1,"message":"1023","line":2192,"column":23,"nodeType":"994","endLine":2198,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1015","line":2258,"column":48,"nodeType":"1013","messageId":"1014","endLine":2258,"endColumn":50},{"ruleId":"992","severity":1,"message":"993","line":2275,"column":25,"nodeType":"994","endLine":2281,"endColumn":26},{"ruleId":"992","severity":1,"message":"993","line":2299,"column":21,"nodeType":"994","endLine":2301,"endColumn":22},{"ruleId":"992","severity":1,"message":"993","line":2321,"column":21,"nodeType":"994","endLine":2327,"endColumn":22},{"ruleId":"1011","severity":1,"message":"1015","line":2469,"column":48,"nodeType":"1013","messageId":"1014","endLine":2469,"endColumn":50},{"ruleId":"992","severity":1,"message":"993","line":2486,"column":25,"nodeType":"994","endLine":2492,"endColumn":26},{"ruleId":"992","severity":1,"message":"993","line":2510,"column":17,"nodeType":"994","endLine":2512,"endColumn":18},{"ruleId":"992","severity":1,"message":"993","line":2531,"column":17,"nodeType":"994","endLine":2537,"endColumn":18},{"ruleId":"992","severity":1,"message":"993","line":2660,"column":21,"nodeType":"994","endLine":2666,"endColumn":22},{"ruleId":"992","severity":1,"message":"993","line":2683,"column":21,"nodeType":"994","endLine":2685,"endColumn":22},{"ruleId":"992","severity":1,"message":"993","line":2704,"column":21,"nodeType":"994","endLine":2710,"endColumn":22},{"ruleId":"995","replacedBy":"1024"},{"ruleId":"997","replacedBy":"1025"},{"ruleId":"986","severity":1,"message":"1026","line":2,"column":8,"nodeType":"988","messageId":"989","endLine":2,"endColumn":12},{"ruleId":"986","severity":1,"message":"1027","line":5,"column":8,"nodeType":"988","messageId":"989","endLine":5,"endColumn":14},{"ruleId":"986","severity":1,"message":"1028","line":6,"column":8,"nodeType":"988","messageId":"989","endLine":6,"endColumn":15},{"ruleId":"1029","severity":1,"message":"1030","line":16,"column":9,"nodeType":"1031","messageId":"1032","endLine":16,"endColumn":39,"fix":"1033"},{"ruleId":"986","severity":1,"message":"1005","line":16,"column":40,"nodeType":"988","messageId":"989","endLine":16,"endColumn":46},{"ruleId":"986","severity":1,"message":"1006","line":16,"column":60,"nodeType":"988","messageId":"989","endLine":16,"endColumn":64},{"ruleId":"995","replacedBy":"1034"},{"ruleId":"997","replacedBy":"1035"},{"ruleId":"986","severity":1,"message":"1028","line":2,"column":8,"nodeType":"988","messageId":"989","endLine":2,"endColumn":15},{"ruleId":"995","replacedBy":"1036"},{"ruleId":"997","replacedBy":"1037"},{"ruleId":"986","severity":1,"message":"1038","line":5,"column":9,"nodeType":"988","messageId":"989","endLine":5,"endColumn":25},{"ruleId":"986","severity":1,"message":"1039","line":5,"column":31,"nodeType":"988","messageId":"989","endLine":5,"endColumn":35},{"ruleId":"986","severity":1,"message":"1040","line":5,"column":36,"nodeType":"988","messageId":"989","endLine":5,"endColumn":41},{"ruleId":"986","severity":1,"message":"1041","line":5,"column":42,"nodeType":"988","messageId":"989","endLine":5,"endColumn":60},{"ruleId":"1042","severity":1,"message":"1043","line":23,"column":7,"nodeType":"1044","endLine":23,"endColumn":9,"suggestions":"1045"},{"ruleId":"986","severity":1,"message":"1038","line":4,"column":9,"nodeType":"988","messageId":"989","endLine":4,"endColumn":25},{"ruleId":"986","severity":1,"message":"1039","line":4,"column":31,"nodeType":"988","messageId":"989","endLine":4,"endColumn":35},{"ruleId":"986","severity":1,"message":"1040","line":4,"column":36,"nodeType":"988","messageId":"989","endLine":4,"endColumn":41},{"ruleId":"986","severity":1,"message":"1041","line":4,"column":42,"nodeType":"988","messageId":"989","endLine":4,"endColumn":60},{"ruleId":"986","severity":1,"message":"1028","line":3,"column":8,"nodeType":"988","messageId":"989","endLine":3,"endColumn":15},{"ruleId":"986","severity":1,"message":"1038","line":6,"column":3,"nodeType":"988","messageId":"989","endLine":6,"endColumn":19},{"ruleId":"986","severity":1,"message":"1046","line":7,"column":3,"nodeType":"988","messageId":"989","endLine":7,"endColumn":7},{"ruleId":"986","severity":1,"message":"1039","line":8,"column":3,"nodeType":"988","messageId":"989","endLine":8,"endColumn":7},{"ruleId":"986","severity":1,"message":"1040","line":9,"column":3,"nodeType":"988","messageId":"989","endLine":9,"endColumn":8},{"ruleId":"986","severity":1,"message":"1047","line":10,"column":3,"nodeType":"988","messageId":"989","endLine":10,"endColumn":8},{"ruleId":"986","severity":1,"message":"1041","line":11,"column":3,"nodeType":"988","messageId":"989","endLine":11,"endColumn":21},{"ruleId":"986","severity":1,"message":"1048","line":12,"column":3,"nodeType":"988","messageId":"989","endLine":12,"endColumn":10},{"ruleId":"986","severity":1,"message":"1049","line":22,"column":8,"nodeType":"988","messageId":"989","endLine":22,"endColumn":15},{"ruleId":"986","severity":1,"message":"1050","line":23,"column":8,"nodeType":"988","messageId":"989","endLine":23,"endColumn":15},{"ruleId":"986","severity":1,"message":"1051","line":34,"column":10,"nodeType":"988","messageId":"989","endLine":34,"endColumn":20},{"ruleId":"986","severity":1,"message":"1052","line":36,"column":10,"nodeType":"988","messageId":"989","endLine":36,"endColumn":15},{"ruleId":"986","severity":1,"message":"1053","line":36,"column":17,"nodeType":"988","messageId":"989","endLine":36,"endColumn":25},{"ruleId":"986","severity":1,"message":"1054","line":38,"column":26,"nodeType":"988","messageId":"989","endLine":38,"endColumn":43},{"ruleId":"986","severity":1,"message":"1007","line":39,"column":10,"nodeType":"988","messageId":"989","endLine":39,"endColumn":16},{"ruleId":"986","severity":1,"message":"1055","line":40,"column":10,"nodeType":"988","messageId":"989","endLine":40,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1012","line":86,"column":28,"nodeType":"1013","messageId":"1014","endLine":86,"endColumn":30},{"ruleId":"1011","severity":1,"message":"1015","line":93,"column":30,"nodeType":"1013","messageId":"1014","endLine":93,"endColumn":32},{"ruleId":"1011","severity":1,"message":"1015","line":94,"column":22,"nodeType":"1013","messageId":"1014","endLine":94,"endColumn":24},{"ruleId":"1042","severity":1,"message":"1056","line":102,"column":6,"nodeType":"1044","endLine":102,"endColumn":8,"suggestions":"1057"},{"ruleId":"1011","severity":1,"message":"1012","line":210,"column":21,"nodeType":"1013","messageId":"1014","endLine":210,"endColumn":23},{"ruleId":"992","severity":1,"message":"993","line":251,"column":23,"nodeType":"994","endLine":272,"endColumn":24},{"ruleId":"992","severity":1,"message":"993","line":505,"column":27,"nodeType":"994","endLine":512,"endColumn":29},{"ruleId":"1019","severity":1,"message":"1020","line":538,"column":25,"nodeType":"1021","messageId":"1014","endLine":538,"endColumn":38},{"ruleId":"1019","severity":1,"message":"1020","line":980,"column":25,"nodeType":"1021","messageId":"1014","endLine":980,"endColumn":38},{"ruleId":"992","severity":1,"message":"993","line":1039,"column":33,"nodeType":"994","endLine":1056,"endColumn":34},{"ruleId":"1019","severity":1,"message":"1020","line":1081,"column":37,"nodeType":"1021","messageId":"1014","endLine":1081,"endColumn":50},{"ruleId":"992","severity":1,"message":"993","line":1148,"column":23,"nodeType":"994","endLine":1169,"endColumn":24},{"ruleId":"992","severity":1,"message":"993","line":1401,"column":27,"nodeType":"994","endLine":1408,"endColumn":29},{"ruleId":"1019","severity":1,"message":"1020","line":1434,"column":25,"nodeType":"1021","messageId":"1014","endLine":1434,"endColumn":38},{"ruleId":"992","severity":1,"message":"993","line":1872,"column":13,"nodeType":"994","endLine":1895,"endColumn":14},{"ruleId":"992","severity":1,"message":"993","line":1896,"column":13,"nodeType":"994","endLine":1919,"endColumn":14},{"ruleId":"1019","severity":1,"message":"1020","line":2023,"column":27,"nodeType":"1021","messageId":"1014","endLine":2023,"endColumn":40},{"ruleId":"986","severity":1,"message":"1027","line":2,"column":8,"nodeType":"988","messageId":"989","endLine":2,"endColumn":14},{"ruleId":"986","severity":1,"message":"1058","line":3,"column":8,"nodeType":"988","messageId":"989","endLine":3,"endColumn":20},{"ruleId":"986","severity":1,"message":"1007","line":49,"column":10,"nodeType":"988","messageId":"989","endLine":49,"endColumn":16},{"ruleId":"986","severity":1,"message":"1055","line":50,"column":10,"nodeType":"988","messageId":"989","endLine":50,"endColumn":15},{"ruleId":"1042","severity":1,"message":"1059","line":72,"column":6,"nodeType":"1044","endLine":72,"endColumn":8,"suggestions":"1060"},{"ruleId":"1011","severity":1,"message":"1012","line":75,"column":12,"nodeType":"1013","messageId":"1014","endLine":75,"endColumn":14},{"ruleId":"986","severity":1,"message":"1027","line":2,"column":8,"nodeType":"988","messageId":"989","endLine":2,"endColumn":14},{"ruleId":"986","severity":1,"message":"1058","line":3,"column":8,"nodeType":"988","messageId":"989","endLine":3,"endColumn":20},{"ruleId":"1042","severity":1,"message":"1061","line":146,"column":6,"nodeType":"1044","endLine":146,"endColumn":8,"suggestions":"1062"},{"ruleId":"1011","severity":1,"message":"1012","line":149,"column":12,"nodeType":"1013","messageId":"1014","endLine":149,"endColumn":14},{"ruleId":"986","severity":1,"message":"1063","line":1,"column":15,"nodeType":"988","messageId":"989","endLine":1,"endColumn":24},{"ruleId":"986","severity":1,"message":"1038","line":2,"column":9,"nodeType":"988","messageId":"989","endLine":2,"endColumn":25},{"ruleId":"986","severity":1,"message":"1046","line":2,"column":26,"nodeType":"988","messageId":"989","endLine":2,"endColumn":30},{"ruleId":"986","severity":1,"message":"1039","line":2,"column":31,"nodeType":"988","messageId":"989","endLine":2,"endColumn":35},{"ruleId":"1019","severity":1,"message":"1064","line":46,"column":21,"nodeType":"1021","messageId":"1014","endLine":46,"endColumn":27},{"ruleId":"1019","severity":1,"message":"1064","line":58,"column":25,"nodeType":"1021","messageId":"1014","endLine":58,"endColumn":31},{"ruleId":"1019","severity":1,"message":"1064","line":82,"column":17,"nodeType":"1021","messageId":"1014","endLine":82,"endColumn":23},{"ruleId":"1019","severity":1,"message":"1064","line":93,"column":25,"nodeType":"1021","messageId":"1014","endLine":93,"endColumn":31},{"ruleId":"1019","severity":1,"message":"1064","line":111,"column":17,"nodeType":"1021","messageId":"1014","endLine":111,"endColumn":23},{"ruleId":"1019","severity":1,"message":"1064","line":122,"column":25,"nodeType":"1021","messageId":"1014","endLine":122,"endColumn":31},{"ruleId":"1019","severity":1,"message":"1064","line":140,"column":17,"nodeType":"1021","messageId":"1014","endLine":140,"endColumn":23},{"ruleId":"1019","severity":1,"message":"1064","line":151,"column":25,"nodeType":"1021","messageId":"1014","endLine":151,"endColumn":31},{"ruleId":"1019","severity":1,"message":"1064","line":167,"column":13,"nodeType":"1021","messageId":"1014","endLine":167,"endColumn":19},{"ruleId":"1019","severity":1,"message":"1064","line":298,"column":15,"nodeType":"1021","messageId":"1014","endLine":298,"endColumn":21},{"ruleId":"986","severity":1,"message":"1038","line":4,"column":9,"nodeType":"988","messageId":"989","endLine":4,"endColumn":25},{"ruleId":"986","severity":1,"message":"1039","line":4,"column":31,"nodeType":"988","messageId":"989","endLine":4,"endColumn":35},{"ruleId":"986","severity":1,"message":"1040","line":4,"column":36,"nodeType":"988","messageId":"989","endLine":4,"endColumn":41},{"ruleId":"986","severity":1,"message":"1041","line":4,"column":42,"nodeType":"988","messageId":"989","endLine":4,"endColumn":60},{"ruleId":"986","severity":1,"message":"1003","line":8,"column":10,"nodeType":"988","messageId":"989","endLine":8,"endColumn":25},{"ruleId":"986","severity":1,"message":"1065","line":9,"column":8,"nodeType":"988","messageId":"989","endLine":9,"endColumn":18},{"ruleId":"986","severity":1,"message":"1066","line":10,"column":8,"nodeType":"988","messageId":"989","endLine":10,"endColumn":16},{"ruleId":"986","severity":1,"message":"1050","line":11,"column":8,"nodeType":"988","messageId":"989","endLine":11,"endColumn":15},{"ruleId":"986","severity":1,"message":"1005","line":12,"column":26,"nodeType":"988","messageId":"989","endLine":12,"endColumn":32},{"ruleId":"986","severity":1,"message":"1067","line":12,"column":33,"nodeType":"988","messageId":"989","endLine":12,"endColumn":39},{"ruleId":"986","severity":1,"message":"1068","line":12,"column":40,"nodeType":"988","messageId":"989","endLine":12,"endColumn":45},{"ruleId":"986","severity":1,"message":"1006","line":12,"column":46,"nodeType":"988","messageId":"989","endLine":12,"endColumn":50},{"ruleId":"986","severity":1,"message":"1007","line":18,"column":10,"nodeType":"988","messageId":"989","endLine":18,"endColumn":16},{"ruleId":"986","severity":1,"message":"1055","line":19,"column":10,"nodeType":"988","messageId":"989","endLine":19,"endColumn":15},{"ruleId":"986","severity":1,"message":"1010","line":30,"column":9,"nodeType":"988","messageId":"989","endLine":30,"endColumn":24},{"ruleId":"986","severity":1,"message":"1069","line":33,"column":9,"nodeType":"988","messageId":"989","endLine":33,"endColumn":24},{"ruleId":"986","severity":1,"message":"1038","line":4,"column":9,"nodeType":"988","messageId":"989","endLine":4,"endColumn":25},{"ruleId":"986","severity":1,"message":"1039","line":4,"column":31,"nodeType":"988","messageId":"989","endLine":4,"endColumn":35},{"ruleId":"986","severity":1,"message":"1040","line":4,"column":36,"nodeType":"988","messageId":"989","endLine":4,"endColumn":41},{"ruleId":"986","severity":1,"message":"1041","line":4,"column":42,"nodeType":"988","messageId":"989","endLine":4,"endColumn":60},{"ruleId":"986","severity":1,"message":"1003","line":8,"column":10,"nodeType":"988","messageId":"989","endLine":8,"endColumn":25},{"ruleId":"986","severity":1,"message":"1065","line":9,"column":8,"nodeType":"988","messageId":"989","endLine":9,"endColumn":18},{"ruleId":"986","severity":1,"message":"1066","line":10,"column":8,"nodeType":"988","messageId":"989","endLine":10,"endColumn":16},{"ruleId":"986","severity":1,"message":"1050","line":11,"column":8,"nodeType":"988","messageId":"989","endLine":11,"endColumn":15},{"ruleId":"986","severity":1,"message":"1005","line":12,"column":26,"nodeType":"988","messageId":"989","endLine":12,"endColumn":32},{"ruleId":"986","severity":1,"message":"1067","line":12,"column":33,"nodeType":"988","messageId":"989","endLine":12,"endColumn":39},{"ruleId":"986","severity":1,"message":"1068","line":12,"column":40,"nodeType":"988","messageId":"989","endLine":12,"endColumn":45},{"ruleId":"986","severity":1,"message":"1006","line":12,"column":46,"nodeType":"988","messageId":"989","endLine":12,"endColumn":50},{"ruleId":"986","severity":1,"message":"1007","line":18,"column":10,"nodeType":"988","messageId":"989","endLine":18,"endColumn":16},{"ruleId":"986","severity":1,"message":"1055","line":19,"column":10,"nodeType":"988","messageId":"989","endLine":19,"endColumn":15},{"ruleId":"986","severity":1,"message":"1010","line":30,"column":9,"nodeType":"988","messageId":"989","endLine":30,"endColumn":24},{"ruleId":"986","severity":1,"message":"1069","line":33,"column":9,"nodeType":"988","messageId":"989","endLine":33,"endColumn":24},{"ruleId":"986","severity":1,"message":"1038","line":3,"column":3,"nodeType":"988","messageId":"989","endLine":3,"endColumn":19},{"ruleId":"986","severity":1,"message":"1046","line":4,"column":3,"nodeType":"988","messageId":"989","endLine":4,"endColumn":7},{"ruleId":"986","severity":1,"message":"1039","line":5,"column":3,"nodeType":"988","messageId":"989","endLine":5,"endColumn":7},{"ruleId":"986","severity":1,"message":"1040","line":6,"column":3,"nodeType":"988","messageId":"989","endLine":6,"endColumn":8},{"ruleId":"986","severity":1,"message":"1047","line":7,"column":3,"nodeType":"988","messageId":"989","endLine":7,"endColumn":8},{"ruleId":"986","severity":1,"message":"1041","line":8,"column":3,"nodeType":"988","messageId":"989","endLine":8,"endColumn":21},{"ruleId":"986","severity":1,"message":"1048","line":9,"column":3,"nodeType":"988","messageId":"989","endLine":9,"endColumn":10},{"ruleId":"986","severity":1,"message":"1070","line":16,"column":7,"nodeType":"988","messageId":"989","endLine":16,"endColumn":18},{"ruleId":"986","severity":1,"message":"1071","line":105,"column":21,"nodeType":"988","messageId":"989","endLine":105,"endColumn":33},{"ruleId":"986","severity":1,"message":"1051","line":106,"column":10,"nodeType":"988","messageId":"989","endLine":106,"endColumn":20},{"ruleId":"986","severity":1,"message":"1072","line":106,"column":22,"nodeType":"988","messageId":"989","endLine":106,"endColumn":35},{"ruleId":"986","severity":1,"message":"1073","line":107,"column":10,"nodeType":"988","messageId":"989","endLine":107,"endColumn":17},{"ruleId":"986","severity":1,"message":"1074","line":107,"column":19,"nodeType":"988","messageId":"989","endLine":107,"endColumn":29},{"ruleId":"986","severity":1,"message":"1007","line":108,"column":10,"nodeType":"988","messageId":"989","endLine":108,"endColumn":16},{"ruleId":"986","severity":1,"message":"1055","line":109,"column":10,"nodeType":"988","messageId":"989","endLine":109,"endColumn":15},{"ruleId":"986","severity":1,"message":"1038","line":4,"column":3,"nodeType":"988","messageId":"989","endLine":4,"endColumn":19},{"ruleId":"986","severity":1,"message":"1046","line":5,"column":3,"nodeType":"988","messageId":"989","endLine":5,"endColumn":7},{"ruleId":"986","severity":1,"message":"1039","line":6,"column":3,"nodeType":"988","messageId":"989","endLine":6,"endColumn":7},{"ruleId":"986","severity":1,"message":"1040","line":7,"column":3,"nodeType":"988","messageId":"989","endLine":7,"endColumn":8},{"ruleId":"986","severity":1,"message":"1047","line":8,"column":3,"nodeType":"988","messageId":"989","endLine":8,"endColumn":8},{"ruleId":"986","severity":1,"message":"1041","line":9,"column":3,"nodeType":"988","messageId":"989","endLine":9,"endColumn":21},{"ruleId":"986","severity":1,"message":"1048","line":10,"column":3,"nodeType":"988","messageId":"989","endLine":10,"endColumn":10},{"ruleId":"986","severity":1,"message":"1075","line":121,"column":7,"nodeType":"988","messageId":"989","endLine":121,"endColumn":18},{"ruleId":"986","severity":1,"message":"1076","line":123,"column":10,"nodeType":"988","messageId":"989","endLine":123,"endColumn":30},{"ruleId":"986","severity":1,"message":"1007","line":124,"column":10,"nodeType":"988","messageId":"989","endLine":124,"endColumn":16},{"ruleId":"986","severity":1,"message":"1055","line":125,"column":10,"nodeType":"988","messageId":"989","endLine":125,"endColumn":15},{"ruleId":"986","severity":1,"message":"1077","line":127,"column":9,"nodeType":"988","messageId":"989","endLine":127,"endColumn":22},{"ruleId":"986","severity":1,"message":"1078","line":153,"column":9,"nodeType":"988","messageId":"989","endLine":153,"endColumn":35},{"ruleId":"1079","severity":1,"message":"1080","line":156,"column":43,"nodeType":"1081","messageId":"1082","endLine":156,"endColumn":45},{"ruleId":"986","severity":1,"message":"1028","line":3,"column":8,"nodeType":"988","messageId":"989","endLine":3,"endColumn":15},{"ruleId":"986","severity":1,"message":"1040","line":13,"column":3,"nodeType":"988","messageId":"989","endLine":13,"endColumn":8},{"ruleId":"986","severity":1,"message":"1041","line":15,"column":3,"nodeType":"988","messageId":"989","endLine":15,"endColumn":21},{"ruleId":"986","severity":1,"message":"1050","line":25,"column":8,"nodeType":"988","messageId":"989","endLine":25,"endColumn":15},{"ruleId":"986","severity":1,"message":"1083","line":27,"column":8,"nodeType":"988","messageId":"989","endLine":27,"endColumn":14},{"ruleId":"986","severity":1,"message":"1084","line":41,"column":10,"nodeType":"988","messageId":"989","endLine":41,"endColumn":23},{"ruleId":"986","severity":1,"message":"1085","line":41,"column":25,"nodeType":"988","messageId":"989","endLine":41,"endColumn":41},{"ruleId":"986","severity":1,"message":"1051","line":44,"column":10,"nodeType":"988","messageId":"989","endLine":44,"endColumn":20},{"ruleId":"986","severity":1,"message":"1072","line":44,"column":22,"nodeType":"988","messageId":"989","endLine":44,"endColumn":35},{"ruleId":"986","severity":1,"message":"1073","line":45,"column":10,"nodeType":"988","messageId":"989","endLine":45,"endColumn":17},{"ruleId":"986","severity":1,"message":"1074","line":45,"column":19,"nodeType":"988","messageId":"989","endLine":45,"endColumn":29},{"ruleId":"986","severity":1,"message":"1007","line":46,"column":10,"nodeType":"988","messageId":"989","endLine":46,"endColumn":16},{"ruleId":"986","severity":1,"message":"1055","line":47,"column":10,"nodeType":"988","messageId":"989","endLine":47,"endColumn":15},{"ruleId":"986","severity":1,"message":"1086","line":48,"column":10,"nodeType":"988","messageId":"989","endLine":48,"endColumn":17},{"ruleId":"986","severity":1,"message":"1087","line":48,"column":19,"nodeType":"988","messageId":"989","endLine":48,"endColumn":29},{"ruleId":"986","severity":1,"message":"1088","line":64,"column":19,"nodeType":"988","messageId":"989","endLine":64,"endColumn":29},{"ruleId":"986","severity":1,"message":"1052","line":65,"column":10,"nodeType":"988","messageId":"989","endLine":65,"endColumn":15},{"ruleId":"986","severity":1,"message":"1053","line":65,"column":17,"nodeType":"988","messageId":"989","endLine":65,"endColumn":25},{"ruleId":"986","severity":1,"message":"1054","line":68,"column":26,"nodeType":"988","messageId":"989","endLine":68,"endColumn":43},{"ruleId":"986","severity":1,"message":"1089","line":139,"column":9,"nodeType":"988","messageId":"989","endLine":139,"endColumn":17},{"ruleId":"1011","severity":1,"message":"1012","line":145,"column":26,"nodeType":"1013","messageId":"1014","endLine":145,"endColumn":28},{"ruleId":"986","severity":1,"message":"1090","line":157,"column":9,"nodeType":"988","messageId":"989","endLine":157,"endColumn":24},{"ruleId":"986","severity":1,"message":"1091","line":162,"column":9,"nodeType":"988","messageId":"989","endLine":162,"endColumn":27},{"ruleId":"1011","severity":1,"message":"1015","line":171,"column":26,"nodeType":"1013","messageId":"1014","endLine":171,"endColumn":28},{"ruleId":"1011","severity":1,"message":"1015","line":180,"column":33,"nodeType":"1013","messageId":"1014","endLine":180,"endColumn":35},{"ruleId":"1092","severity":1,"message":"1093","line":181,"column":11,"nodeType":"988","messageId":"1094","endLine":181,"endColumn":18},{"ruleId":"1092","severity":1,"message":"1095","line":186,"column":11,"nodeType":"988","messageId":"1094","endLine":186,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1015","line":196,"column":26,"nodeType":"1013","messageId":"1014","endLine":196,"endColumn":28},{"ruleId":"1011","severity":1,"message":"1015","line":205,"column":33,"nodeType":"1013","messageId":"1014","endLine":205,"endColumn":35},{"ruleId":"1092","severity":1,"message":"1093","line":206,"column":11,"nodeType":"988","messageId":"1094","endLine":206,"endColumn":18},{"ruleId":"1092","severity":1,"message":"1095","line":211,"column":11,"nodeType":"988","messageId":"1094","endLine":211,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1015","line":221,"column":26,"nodeType":"1013","messageId":"1014","endLine":221,"endColumn":28},{"ruleId":"1011","severity":1,"message":"1015","line":230,"column":33,"nodeType":"1013","messageId":"1014","endLine":230,"endColumn":35},{"ruleId":"1092","severity":1,"message":"1093","line":231,"column":11,"nodeType":"988","messageId":"1094","endLine":231,"endColumn":18},{"ruleId":"1092","severity":1,"message":"1095","line":236,"column":11,"nodeType":"988","messageId":"1094","endLine":236,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1015","line":246,"column":26,"nodeType":"1013","messageId":"1014","endLine":246,"endColumn":28},{"ruleId":"1011","severity":1,"message":"1015","line":255,"column":33,"nodeType":"1013","messageId":"1014","endLine":255,"endColumn":35},{"ruleId":"1092","severity":1,"message":"1096","line":256,"column":11,"nodeType":"988","messageId":"1094","endLine":256,"endColumn":23},{"ruleId":"1092","severity":1,"message":"1095","line":261,"column":11,"nodeType":"988","messageId":"1094","endLine":261,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1015","line":271,"column":26,"nodeType":"1013","messageId":"1014","endLine":271,"endColumn":28},{"ruleId":"1011","severity":1,"message":"1015","line":280,"column":33,"nodeType":"1013","messageId":"1014","endLine":280,"endColumn":35},{"ruleId":"1092","severity":1,"message":"1097","line":281,"column":11,"nodeType":"988","messageId":"1094","endLine":281,"endColumn":25},{"ruleId":"1092","severity":1,"message":"1095","line":286,"column":11,"nodeType":"988","messageId":"1094","endLine":286,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1012","line":345,"column":21,"nodeType":"1013","messageId":"1014","endLine":345,"endColumn":23},{"ruleId":"1011","severity":1,"message":"1012","line":350,"column":28,"nodeType":"1013","messageId":"1014","endLine":350,"endColumn":30},{"ruleId":"1011","severity":1,"message":"1015","line":351,"column":49,"nodeType":"1013","messageId":"1014","endLine":351,"endColumn":51},{"ruleId":"1011","severity":1,"message":"1015","line":360,"column":30,"nodeType":"1013","messageId":"1014","endLine":360,"endColumn":32},{"ruleId":"1042","severity":1,"message":"1056","line":370,"column":6,"nodeType":"1044","endLine":370,"endColumn":8,"suggestions":"1098"},{"ruleId":"1042","severity":1,"message":"1099","line":376,"column":6,"nodeType":"1044","endLine":376,"endColumn":18,"suggestions":"1100"},{"ruleId":"1042","severity":1,"message":"1101","line":382,"column":6,"nodeType":"1044","endLine":382,"endColumn":27,"suggestions":"1102"},{"ruleId":"1042","severity":1,"message":"1099","line":388,"column":6,"nodeType":"1044","endLine":388,"endColumn":21,"suggestions":"1103"},{"ruleId":"1042","severity":1,"message":"1099","line":394,"column":6,"nodeType":"1044","endLine":394,"endColumn":18,"suggestions":"1104"},{"ruleId":"1011","severity":1,"message":"1012","line":408,"column":28,"nodeType":"1013","messageId":"1014","endLine":408,"endColumn":30},{"ruleId":"1011","severity":1,"message":"1015","line":409,"column":49,"nodeType":"1013","messageId":"1014","endLine":409,"endColumn":51},{"ruleId":"1042","severity":1,"message":"1105","line":426,"column":6,"nodeType":"1044","endLine":426,"endColumn":14,"suggestions":"1106"},{"ruleId":"1011","severity":1,"message":"1012","line":439,"column":28,"nodeType":"1013","messageId":"1014","endLine":439,"endColumn":30},{"ruleId":"1011","severity":1,"message":"1015","line":440,"column":49,"nodeType":"1013","messageId":"1014","endLine":440,"endColumn":51},{"ruleId":"1011","severity":1,"message":"1012","line":456,"column":24,"nodeType":"1013","messageId":"1014","endLine":456,"endColumn":26},{"ruleId":"1011","severity":1,"message":"1012","line":456,"column":59,"nodeType":"1013","messageId":"1014","endLine":456,"endColumn":61},{"ruleId":"1011","severity":1,"message":"1015","line":457,"column":14,"nodeType":"1013","messageId":"1014","endLine":457,"endColumn":16},{"ruleId":"1011","severity":1,"message":"1015","line":491,"column":26,"nodeType":"1013","messageId":"1014","endLine":491,"endColumn":28},{"ruleId":"1011","severity":1,"message":"1015","line":496,"column":26,"nodeType":"1013","messageId":"1014","endLine":496,"endColumn":28},{"ruleId":"1011","severity":1,"message":"1015","line":502,"column":33,"nodeType":"1013","messageId":"1014","endLine":502,"endColumn":35},{"ruleId":"1011","severity":1,"message":"1015","line":515,"column":26,"nodeType":"1013","messageId":"1014","endLine":515,"endColumn":28},{"ruleId":"1011","severity":1,"message":"1015","line":521,"column":26,"nodeType":"1013","messageId":"1014","endLine":521,"endColumn":28},{"ruleId":"1011","severity":1,"message":"1015","line":527,"column":33,"nodeType":"1013","messageId":"1014","endLine":527,"endColumn":35},{"ruleId":"992","severity":1,"message":"993","line":731,"column":23,"nodeType":"994","endLine":740,"endColumn":24},{"ruleId":"992","severity":1,"message":"993","line":741,"column":23,"nodeType":"994","endLine":750,"endColumn":24},{"ruleId":"992","severity":1,"message":"993","line":873,"column":23,"nodeType":"994","endLine":882,"endColumn":24},{"ruleId":"992","severity":1,"message":"993","line":883,"column":23,"nodeType":"994","endLine":892,"endColumn":24},{"ruleId":"992","severity":1,"message":"993","line":1008,"column":23,"nodeType":"994","endLine":1017,"endColumn":24},{"ruleId":"992","severity":1,"message":"993","line":1018,"column":23,"nodeType":"994","endLine":1027,"endColumn":24},{"ruleId":"992","severity":1,"message":"993","line":1144,"column":23,"nodeType":"994","endLine":1153,"endColumn":24},{"ruleId":"992","severity":1,"message":"993","line":1154,"column":23,"nodeType":"994","endLine":1163,"endColumn":24},{"ruleId":"992","severity":1,"message":"993","line":1279,"column":25,"nodeType":"994","endLine":1288,"endColumn":26},{"ruleId":"992","severity":1,"message":"993","line":1289,"column":25,"nodeType":"994","endLine":1298,"endColumn":26},{"ruleId":"1011","severity":1,"message":"1015","line":1833,"column":21,"nodeType":"1013","messageId":"1014","endLine":1833,"endColumn":23},{"ruleId":"1011","severity":1,"message":"1012","line":1834,"column":25,"nodeType":"1013","messageId":"1014","endLine":1834,"endColumn":27},{"ruleId":"1011","severity":1,"message":"1015","line":1867,"column":28,"nodeType":"1013","messageId":"1014","endLine":1867,"endColumn":30},{"ruleId":"1011","severity":1,"message":"1015","line":1872,"column":28,"nodeType":"1013","messageId":"1014","endLine":1872,"endColumn":30},{"ruleId":"1011","severity":1,"message":"1015","line":1880,"column":35,"nodeType":"1013","messageId":"1014","endLine":1880,"endColumn":37},{"ruleId":"1011","severity":1,"message":"1015","line":1893,"column":28,"nodeType":"1013","messageId":"1014","endLine":1893,"endColumn":30},{"ruleId":"1011","severity":1,"message":"1015","line":1899,"column":28,"nodeType":"1013","messageId":"1014","endLine":1899,"endColumn":30},{"ruleId":"1011","severity":1,"message":"1015","line":1907,"column":35,"nodeType":"1013","messageId":"1014","endLine":1907,"endColumn":37},{"ruleId":"1019","severity":1,"message":"1107","line":1956,"column":23,"nodeType":"1021","messageId":"1014","endLine":1956,"endColumn":36},{"ruleId":"1011","severity":1,"message":"1012","line":1971,"column":46,"nodeType":"1013","messageId":"1014","endLine":1971,"endColumn":48},{"ruleId":"986","severity":1,"message":"1108","line":1972,"column":29,"nodeType":"988","messageId":"989","endLine":1972,"endColumn":35},{"ruleId":"1011","severity":1,"message":"1015","line":2002,"column":42,"nodeType":"1013","messageId":"1014","endLine":2002,"endColumn":44},{"ruleId":"1011","severity":1,"message":"1015","line":2021,"column":49,"nodeType":"1013","messageId":"1014","endLine":2021,"endColumn":51},{"ruleId":"1019","severity":1,"message":"1020","line":2077,"column":25,"nodeType":"1021","messageId":"1014","endLine":2077,"endColumn":38},{"ruleId":"986","severity":1,"message":"1046","line":5,"column":3,"nodeType":"988","messageId":"989","endLine":5,"endColumn":7},{"ruleId":"986","severity":1,"message":"1039","line":6,"column":3,"nodeType":"988","messageId":"989","endLine":6,"endColumn":7},{"ruleId":"986","severity":1,"message":"1040","line":7,"column":3,"nodeType":"988","messageId":"989","endLine":7,"endColumn":8},{"ruleId":"986","severity":1,"message":"1047","line":8,"column":3,"nodeType":"988","messageId":"989","endLine":8,"endColumn":8},{"ruleId":"986","severity":1,"message":"1041","line":9,"column":3,"nodeType":"988","messageId":"989","endLine":9,"endColumn":21},{"ruleId":"986","severity":1,"message":"1048","line":10,"column":3,"nodeType":"988","messageId":"989","endLine":10,"endColumn":10},{"ruleId":"986","severity":1,"message":"1109","line":122,"column":7,"nodeType":"988","messageId":"989","endLine":122,"endColumn":13},{"ruleId":"986","severity":1,"message":"1110","line":124,"column":10,"nodeType":"988","messageId":"989","endLine":124,"endColumn":25},{"ruleId":"986","severity":1,"message":"1007","line":125,"column":10,"nodeType":"988","messageId":"989","endLine":125,"endColumn":16},{"ruleId":"986","severity":1,"message":"1055","line":126,"column":10,"nodeType":"988","messageId":"989","endLine":126,"endColumn":15},{"ruleId":"986","severity":1,"message":"1111","line":128,"column":9,"nodeType":"988","messageId":"989","endLine":128,"endColumn":17},{"ruleId":"986","severity":1,"message":"1112","line":155,"column":9,"nodeType":"988","messageId":"989","endLine":155,"endColumn":30},{"ruleId":"1079","severity":1,"message":"1080","line":159,"column":35,"nodeType":"1081","messageId":"1082","endLine":159,"endColumn":37},{"ruleId":"986","severity":1,"message":"1113","line":1,"column":8,"nodeType":"988","messageId":"989","endLine":1,"endColumn":13},{"ruleId":"986","severity":1,"message":"1039","line":3,"column":31,"nodeType":"988","messageId":"989","endLine":3,"endColumn":35},{"ruleId":"986","severity":1,"message":"1040","line":3,"column":36,"nodeType":"988","messageId":"989","endLine":3,"endColumn":41},{"ruleId":"986","severity":1,"message":"1047","line":3,"column":42,"nodeType":"988","messageId":"989","endLine":3,"endColumn":47},{"ruleId":"986","severity":1,"message":"1041","line":3,"column":48,"nodeType":"988","messageId":"989","endLine":3,"endColumn":66},{"ruleId":"986","severity":1,"message":"1048","line":3,"column":67,"nodeType":"988","messageId":"989","endLine":3,"endColumn":74},{"ruleId":"986","severity":1,"message":"1114","line":3,"column":75,"nodeType":"988","messageId":"989","endLine":3,"endColumn":85},{"ruleId":"986","severity":1,"message":"1004","line":4,"column":8,"nodeType":"988","messageId":"989","endLine":4,"endColumn":13},{"ruleId":"986","severity":1,"message":"1070","line":5,"column":7,"nodeType":"988","messageId":"989","endLine":5,"endColumn":18},{"ruleId":"986","severity":1,"message":"1115","line":10,"column":26,"nodeType":"988","messageId":"989","endLine":10,"endColumn":43},{"ruleId":"1011","severity":1,"message":"1012","line":21,"column":28,"nodeType":"1013","messageId":"1014","endLine":21,"endColumn":30},{"ruleId":"1092","severity":1,"message":"1116","line":22,"column":21,"nodeType":"988","messageId":"1094","endLine":22,"endColumn":22},{"ruleId":"1011","severity":1,"message":"1012","line":27,"column":40,"nodeType":"1013","messageId":"1014","endLine":27,"endColumn":42},{"ruleId":"1092","severity":1,"message":"1116","line":28,"column":21,"nodeType":"988","messageId":"1094","endLine":28,"endColumn":22},{"ruleId":"986","severity":1,"message":"1117","line":42,"column":11,"nodeType":"988","messageId":"989","endLine":42,"endColumn":25},{"ruleId":"986","severity":1,"message":"1118","line":45,"column":11,"nodeType":"988","messageId":"989","endLine":45,"endColumn":26},{"ruleId":"1011","severity":1,"message":"1012","line":48,"column":15,"nodeType":"1013","messageId":"1014","endLine":48,"endColumn":17},{"ruleId":"1011","severity":1,"message":"1015","line":64,"column":38,"nodeType":"1013","messageId":"1014","endLine":64,"endColumn":40},{"ruleId":"1011","severity":1,"message":"1015","line":106,"column":51,"nodeType":"1013","messageId":"1014","endLine":106,"endColumn":53},{"ruleId":"1011","severity":1,"message":"1015","line":143,"column":48,"nodeType":"1013","messageId":"1014","endLine":143,"endColumn":50},{"ruleId":"1011","severity":1,"message":"1015","line":171,"column":38,"nodeType":"1013","messageId":"1014","endLine":171,"endColumn":40},{"ruleId":"995","replacedBy":"1119"},{"ruleId":"997","replacedBy":"1120"},{"ruleId":"986","severity":1,"message":"1040","line":2,"column":36,"nodeType":"988","messageId":"989","endLine":2,"endColumn":41},{"ruleId":"986","severity":1,"message":"1041","line":2,"column":48,"nodeType":"988","messageId":"989","endLine":2,"endColumn":66},{"ruleId":"986","severity":1,"message":"1083","line":13,"column":8,"nodeType":"988","messageId":"989","endLine":13,"endColumn":14},{"ruleId":"986","severity":1,"message":"1007","line":16,"column":12,"nodeType":"988","messageId":"989","endLine":16,"endColumn":18},{"ruleId":"986","severity":1,"message":"1121","line":18,"column":12,"nodeType":"988","messageId":"989","endLine":18,"endColumn":13},{"ruleId":"986","severity":1,"message":"1122","line":18,"column":14,"nodeType":"988","messageId":"989","endLine":18,"endColumn":18},{"ruleId":"986","severity":1,"message":"1123","line":20,"column":12,"nodeType":"988","messageId":"989","endLine":20,"endColumn":20},{"ruleId":"986","severity":1,"message":"1124","line":20,"column":22,"nodeType":"988","messageId":"989","endLine":20,"endColumn":33},{"ruleId":"986","severity":1,"message":"1125","line":21,"column":12,"nodeType":"988","messageId":"989","endLine":21,"endColumn":20},{"ruleId":"986","severity":1,"message":"1126","line":21,"column":22,"nodeType":"988","messageId":"989","endLine":21,"endColumn":33},{"ruleId":"986","severity":1,"message":"1127","line":24,"column":12,"nodeType":"988","messageId":"989","endLine":24,"endColumn":28},{"ruleId":"986","severity":1,"message":"1128","line":24,"column":29,"nodeType":"988","messageId":"989","endLine":24,"endColumn":48},{"ruleId":"1011","severity":1,"message":"1015","line":83,"column":39,"nodeType":"1013","messageId":"1014","endLine":83,"endColumn":41},{"ruleId":"1011","severity":1,"message":"1012","line":84,"column":30,"nodeType":"1013","messageId":"1014","endLine":84,"endColumn":32},{"ruleId":"1042","severity":1,"message":"1056","line":107,"column":9,"nodeType":"1044","endLine":107,"endColumn":11,"suggestions":"1129"},{"ruleId":"1042","severity":1,"message":"1130","line":110,"column":7,"nodeType":"1044","endLine":110,"endColumn":32,"suggestions":"1131"},{"ruleId":"1011","severity":1,"message":"1012","line":111,"column":22,"nodeType":"1013","messageId":"1014","endLine":111,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1015","line":446,"column":69,"nodeType":"1013","messageId":"1014","endLine":446,"endColumn":71},{"ruleId":"992","severity":1,"message":"993","line":449,"column":33,"nodeType":"994","endLine":456,"endColumn":34},{"ruleId":"1011","severity":1,"message":"1015","line":685,"column":64,"nodeType":"1013","messageId":"1014","endLine":685,"endColumn":66},{"ruleId":"1011","severity":1,"message":"1015","line":695,"column":64,"nodeType":"1013","messageId":"1014","endLine":695,"endColumn":66},{"ruleId":"1011","severity":1,"message":"1015","line":720,"column":76,"nodeType":"1013","messageId":"1014","endLine":720,"endColumn":78},{"ruleId":"1011","severity":1,"message":"1015","line":733,"column":70,"nodeType":"1013","messageId":"1014","endLine":733,"endColumn":72},{"ruleId":"1011","severity":1,"message":"1015","line":743,"column":76,"nodeType":"1013","messageId":"1014","endLine":743,"endColumn":78},{"ruleId":"1011","severity":1,"message":"1015","line":756,"column":70,"nodeType":"1013","messageId":"1014","endLine":756,"endColumn":72},{"ruleId":"1011","severity":1,"message":"1015","line":788,"column":64,"nodeType":"1013","messageId":"1014","endLine":788,"endColumn":66},{"ruleId":"1011","severity":1,"message":"1015","line":802,"column":64,"nodeType":"1013","messageId":"1014","endLine":802,"endColumn":66},{"ruleId":"992","severity":1,"message":"993","line":1762,"column":37,"nodeType":"994","endLine":1768,"endColumn":39},{"ruleId":"986","severity":1,"message":"1027","line":2,"column":8,"nodeType":"988","messageId":"989","endLine":2,"endColumn":14},{"ruleId":"986","severity":1,"message":"1028","line":3,"column":8,"nodeType":"988","messageId":"989","endLine":3,"endColumn":15},{"ruleId":"986","severity":1,"message":"1058","line":4,"column":8,"nodeType":"988","messageId":"989","endLine":4,"endColumn":20},{"ruleId":"986","severity":1,"message":"1132","line":5,"column":8,"nodeType":"988","messageId":"989","endLine":5,"endColumn":18},{"ruleId":"986","severity":1,"message":"1040","line":6,"column":36,"nodeType":"988","messageId":"989","endLine":6,"endColumn":41},{"ruleId":"986","severity":1,"message":"1041","line":6,"column":48,"nodeType":"988","messageId":"989","endLine":6,"endColumn":66},{"ruleId":"986","severity":1,"message":"1048","line":6,"column":67,"nodeType":"988","messageId":"989","endLine":6,"endColumn":74},{"ruleId":"986","severity":1,"message":"1133","line":6,"column":86,"nodeType":"988","messageId":"989","endLine":6,"endColumn":95},{"ruleId":"986","severity":1,"message":"1007","line":11,"column":12,"nodeType":"988","messageId":"989","endLine":11,"endColumn":18},{"ruleId":"986","severity":1,"message":"1055","line":12,"column":12,"nodeType":"988","messageId":"989","endLine":12,"endColumn":17},{"ruleId":"986","severity":1,"message":"1134","line":16,"column":12,"nodeType":"988","messageId":"989","endLine":16,"endColumn":25},{"ruleId":"986","severity":1,"message":"1135","line":16,"column":26,"nodeType":"988","messageId":"989","endLine":16,"endColumn":42},{"ruleId":"1011","severity":1,"message":"1012","line":60,"column":30,"nodeType":"1013","messageId":"1014","endLine":60,"endColumn":32},{"ruleId":"1011","severity":1,"message":"1012","line":113,"column":28,"nodeType":"1013","messageId":"1014","endLine":113,"endColumn":30},{"ruleId":"1011","severity":1,"message":"1012","line":122,"column":30,"nodeType":"1013","messageId":"1014","endLine":122,"endColumn":32},{"ruleId":"986","severity":1,"message":"1136","line":146,"column":11,"nodeType":"988","messageId":"989","endLine":146,"endColumn":30},{"ruleId":"1011","severity":1,"message":"1015","line":152,"column":52,"nodeType":"1013","messageId":"1014","endLine":152,"endColumn":54},{"ruleId":"1011","severity":1,"message":"1012","line":164,"column":30,"nodeType":"1013","messageId":"1014","endLine":164,"endColumn":32},{"ruleId":"1011","severity":1,"message":"1012","line":182,"column":30,"nodeType":"1013","messageId":"1014","endLine":182,"endColumn":32},{"ruleId":"1011","severity":1,"message":"1012","line":205,"column":32,"nodeType":"1013","messageId":"1014","endLine":205,"endColumn":34},{"ruleId":"1011","severity":1,"message":"1015","line":211,"column":42,"nodeType":"1013","messageId":"1014","endLine":211,"endColumn":44},{"ruleId":"1042","severity":1,"message":"1137","line":223,"column":7,"nodeType":"1044","endLine":223,"endColumn":22,"suggestions":"1138"},{"ruleId":"992","severity":1,"message":"993","line":299,"column":17,"nodeType":"994","endLine":305,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1015","line":399,"column":61,"nodeType":"1013","messageId":"1014","endLine":399,"endColumn":63},{"ruleId":"1011","severity":1,"message":"1015","line":408,"column":51,"nodeType":"1013","messageId":"1014","endLine":408,"endColumn":53},{"ruleId":"992","severity":1,"message":"993","line":495,"column":17,"nodeType":"994","endLine":501,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1015","line":536,"column":54,"nodeType":"1013","messageId":"1014","endLine":536,"endColumn":56},{"ruleId":"1011","severity":1,"message":"1015","line":555,"column":50,"nodeType":"1013","messageId":"1014","endLine":555,"endColumn":52},{"ruleId":"986","severity":1,"message":"1040","line":2,"column":36,"nodeType":"988","messageId":"989","endLine":2,"endColumn":41},{"ruleId":"986","severity":1,"message":"1041","line":2,"column":48,"nodeType":"988","messageId":"989","endLine":2,"endColumn":66},{"ruleId":"986","severity":1,"message":"1048","line":2,"column":67,"nodeType":"988","messageId":"989","endLine":2,"endColumn":74},{"ruleId":"986","severity":1,"message":"1139","line":8,"column":8,"nodeType":"988","messageId":"989","endLine":8,"endColumn":13},{"ruleId":"986","severity":1,"message":"1140","line":9,"column":10,"nodeType":"988","messageId":"989","endLine":9,"endColumn":18},{"ruleId":"986","severity":1,"message":"1141","line":10,"column":8,"nodeType":"988","messageId":"989","endLine":10,"endColumn":16},{"ruleId":"986","severity":1,"message":"1050","line":11,"column":8,"nodeType":"988","messageId":"989","endLine":11,"endColumn":15},{"ruleId":"986","severity":1,"message":"1083","line":13,"column":8,"nodeType":"988","messageId":"989","endLine":13,"endColumn":14},{"ruleId":"986","severity":1,"message":"1007","line":16,"column":12,"nodeType":"988","messageId":"989","endLine":16,"endColumn":18},{"ruleId":"986","severity":1,"message":"1121","line":18,"column":12,"nodeType":"988","messageId":"989","endLine":18,"endColumn":13},{"ruleId":"986","severity":1,"message":"1122","line":18,"column":14,"nodeType":"988","messageId":"989","endLine":18,"endColumn":18},{"ruleId":"986","severity":1,"message":"1123","line":20,"column":12,"nodeType":"988","messageId":"989","endLine":20,"endColumn":20},{"ruleId":"986","severity":1,"message":"1124","line":20,"column":22,"nodeType":"988","messageId":"989","endLine":20,"endColumn":33},{"ruleId":"986","severity":1,"message":"1125","line":21,"column":12,"nodeType":"988","messageId":"989","endLine":21,"endColumn":20},{"ruleId":"986","severity":1,"message":"1126","line":21,"column":22,"nodeType":"988","messageId":"989","endLine":21,"endColumn":33},{"ruleId":"986","severity":1,"message":"1142","line":24,"column":12,"nodeType":"988","messageId":"989","endLine":24,"endColumn":30},{"ruleId":"986","severity":1,"message":"1143","line":24,"column":31,"nodeType":"988","messageId":"989","endLine":24,"endColumn":52},{"ruleId":"986","severity":1,"message":"1127","line":26,"column":12,"nodeType":"988","messageId":"989","endLine":26,"endColumn":28},{"ruleId":"986","severity":1,"message":"1128","line":26,"column":29,"nodeType":"988","messageId":"989","endLine":26,"endColumn":48},{"ruleId":"986","severity":1,"message":"1054","line":27,"column":27,"nodeType":"988","messageId":"989","endLine":27,"endColumn":44},{"ruleId":"1011","severity":1,"message":"1015","line":63,"column":39,"nodeType":"1013","messageId":"1014","endLine":63,"endColumn":41},{"ruleId":"1011","severity":1,"message":"1012","line":64,"column":30,"nodeType":"1013","messageId":"1014","endLine":64,"endColumn":32},{"ruleId":"1042","severity":1,"message":"1056","line":78,"column":9,"nodeType":"1044","endLine":78,"endColumn":11,"suggestions":"1144"},{"ruleId":"1011","severity":1,"message":"1012","line":79,"column":23,"nodeType":"1013","messageId":"1014","endLine":79,"endColumn":25},{"ruleId":"1011","severity":1,"message":"1015","line":295,"column":46,"nodeType":"1013","messageId":"1014","endLine":295,"endColumn":48},{"ruleId":"1011","severity":1,"message":"1015","line":354,"column":51,"nodeType":"1013","messageId":"1014","endLine":354,"endColumn":53},{"ruleId":"1145","severity":1,"message":"1146","line":455,"column":33,"nodeType":"1147","messageId":"1148","endLine":455,"endColumn":56},{"ruleId":"986","severity":1,"message":"1027","line":2,"column":8,"nodeType":"988","messageId":"989","endLine":2,"endColumn":14},{"ruleId":"986","severity":1,"message":"1028","line":3,"column":8,"nodeType":"988","messageId":"989","endLine":3,"endColumn":15},{"ruleId":"986","severity":1,"message":"1058","line":4,"column":8,"nodeType":"988","messageId":"989","endLine":4,"endColumn":20},{"ruleId":"986","severity":1,"message":"1132","line":5,"column":8,"nodeType":"988","messageId":"989","endLine":5,"endColumn":18},{"ruleId":"986","severity":1,"message":"1040","line":6,"column":36,"nodeType":"988","messageId":"989","endLine":6,"endColumn":41},{"ruleId":"986","severity":1,"message":"1041","line":6,"column":48,"nodeType":"988","messageId":"989","endLine":6,"endColumn":66},{"ruleId":"986","severity":1,"message":"1048","line":6,"column":67,"nodeType":"988","messageId":"989","endLine":6,"endColumn":74},{"ruleId":"986","severity":1,"message":"1133","line":6,"column":86,"nodeType":"988","messageId":"989","endLine":6,"endColumn":95},{"ruleId":"986","severity":1,"message":"1007","line":11,"column":12,"nodeType":"988","messageId":"989","endLine":11,"endColumn":18},{"ruleId":"986","severity":1,"message":"1055","line":12,"column":12,"nodeType":"988","messageId":"989","endLine":12,"endColumn":17},{"ruleId":"986","severity":1,"message":"1134","line":16,"column":12,"nodeType":"988","messageId":"989","endLine":16,"endColumn":25},{"ruleId":"986","severity":1,"message":"1135","line":16,"column":26,"nodeType":"988","messageId":"989","endLine":16,"endColumn":42},{"ruleId":"1011","severity":1,"message":"1012","line":61,"column":30,"nodeType":"1013","messageId":"1014","endLine":61,"endColumn":32},{"ruleId":"1011","severity":1,"message":"1012","line":93,"column":28,"nodeType":"1013","messageId":"1014","endLine":93,"endColumn":30},{"ruleId":"1011","severity":1,"message":"1012","line":102,"column":30,"nodeType":"1013","messageId":"1014","endLine":102,"endColumn":32},{"ruleId":"986","severity":1,"message":"1136","line":126,"column":11,"nodeType":"988","messageId":"989","endLine":126,"endColumn":30},{"ruleId":"1011","severity":1,"message":"1015","line":132,"column":52,"nodeType":"1013","messageId":"1014","endLine":132,"endColumn":54},{"ruleId":"1011","severity":1,"message":"1012","line":144,"column":30,"nodeType":"1013","messageId":"1014","endLine":144,"endColumn":32},{"ruleId":"1011","severity":1,"message":"1012","line":162,"column":30,"nodeType":"1013","messageId":"1014","endLine":162,"endColumn":32},{"ruleId":"1011","severity":1,"message":"1012","line":186,"column":32,"nodeType":"1013","messageId":"1014","endLine":186,"endColumn":34},{"ruleId":"1011","severity":1,"message":"1015","line":194,"column":43,"nodeType":"1013","messageId":"1014","endLine":194,"endColumn":45},{"ruleId":"1042","severity":1,"message":"1149","line":206,"column":7,"nodeType":"1044","endLine":206,"endColumn":22,"suggestions":"1150"},{"ruleId":"992","severity":1,"message":"993","line":282,"column":17,"nodeType":"994","endLine":288,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1015","line":382,"column":61,"nodeType":"1013","messageId":"1014","endLine":382,"endColumn":63},{"ruleId":"1011","severity":1,"message":"1015","line":391,"column":51,"nodeType":"1013","messageId":"1014","endLine":391,"endColumn":53},{"ruleId":"992","severity":1,"message":"993","line":478,"column":17,"nodeType":"994","endLine":484,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1015","line":519,"column":54,"nodeType":"1013","messageId":"1014","endLine":519,"endColumn":56},{"ruleId":"1011","severity":1,"message":"1015","line":538,"column":50,"nodeType":"1013","messageId":"1014","endLine":538,"endColumn":52},{"ruleId":"986","severity":1,"message":"1027","line":2,"column":8,"nodeType":"988","messageId":"989","endLine":2,"endColumn":14},{"ruleId":"986","severity":1,"message":"1028","line":3,"column":8,"nodeType":"988","messageId":"989","endLine":3,"endColumn":15},{"ruleId":"986","severity":1,"message":"1058","line":4,"column":8,"nodeType":"988","messageId":"989","endLine":4,"endColumn":20},{"ruleId":"986","severity":1,"message":"1132","line":5,"column":8,"nodeType":"988","messageId":"989","endLine":5,"endColumn":18},{"ruleId":"986","severity":1,"message":"1040","line":6,"column":36,"nodeType":"988","messageId":"989","endLine":6,"endColumn":41},{"ruleId":"986","severity":1,"message":"1041","line":6,"column":48,"nodeType":"988","messageId":"989","endLine":6,"endColumn":66},{"ruleId":"986","severity":1,"message":"1048","line":6,"column":67,"nodeType":"988","messageId":"989","endLine":6,"endColumn":74},{"ruleId":"986","severity":1,"message":"1133","line":6,"column":86,"nodeType":"988","messageId":"989","endLine":6,"endColumn":95},{"ruleId":"986","severity":1,"message":"1007","line":17,"column":12,"nodeType":"988","messageId":"989","endLine":17,"endColumn":18},{"ruleId":"986","severity":1,"message":"1055","line":18,"column":12,"nodeType":"988","messageId":"989","endLine":18,"endColumn":17},{"ruleId":"986","severity":1,"message":"1151","line":19,"column":11,"nodeType":"988","messageId":"989","endLine":19,"endColumn":24},{"ruleId":"986","severity":1,"message":"1152","line":19,"column":25,"nodeType":"988","messageId":"989","endLine":19,"endColumn":41},{"ruleId":"986","severity":1,"message":"1153","line":20,"column":12,"nodeType":"988","messageId":"989","endLine":20,"endColumn":30},{"ruleId":"986","severity":1,"message":"1154","line":20,"column":31,"nodeType":"988","messageId":"989","endLine":20,"endColumn":52},{"ruleId":"986","severity":1,"message":"1134","line":22,"column":12,"nodeType":"988","messageId":"989","endLine":22,"endColumn":25},{"ruleId":"986","severity":1,"message":"1135","line":22,"column":26,"nodeType":"988","messageId":"989","endLine":22,"endColumn":42},{"ruleId":"986","severity":1,"message":"1155","line":25,"column":12,"nodeType":"988","messageId":"989","endLine":25,"endColumn":22},{"ruleId":"986","severity":1,"message":"1156","line":25,"column":23,"nodeType":"988","messageId":"989","endLine":25,"endColumn":36},{"ruleId":"986","severity":1,"message":"1157","line":26,"column":12,"nodeType":"988","messageId":"989","endLine":26,"endColumn":28},{"ruleId":"986","severity":1,"message":"1158","line":26,"column":29,"nodeType":"988","messageId":"989","endLine":26,"endColumn":48},{"ruleId":"986","severity":1,"message":"1159","line":38,"column":11,"nodeType":"988","messageId":"989","endLine":38,"endColumn":19},{"ruleId":"986","severity":1,"message":"1160","line":73,"column":11,"nodeType":"988","messageId":"989","endLine":73,"endColumn":21},{"ruleId":"1011","severity":1,"message":"1012","line":154,"column":30,"nodeType":"1013","messageId":"1014","endLine":154,"endColumn":32},{"ruleId":"1011","severity":1,"message":"1012","line":155,"column":53,"nodeType":"1013","messageId":"1014","endLine":155,"endColumn":55},{"ruleId":"1042","severity":1,"message":"1161","line":171,"column":7,"nodeType":"1044","endLine":171,"endColumn":9,"suggestions":"1162"},{"ruleId":"1011","severity":1,"message":"1015","line":175,"column":27,"nodeType":"1013","messageId":"1014","endLine":175,"endColumn":29},{"ruleId":"992","severity":1,"message":"993","line":250,"column":25,"nodeType":"994","endLine":256,"endColumn":26},{"ruleId":"1011","severity":1,"message":"1012","line":458,"column":54,"nodeType":"1013","messageId":"1014","endLine":458,"endColumn":56},{"ruleId":"1011","severity":1,"message":"1012","line":459,"column":77,"nodeType":"1013","messageId":"1014","endLine":459,"endColumn":79},{"ruleId":"1011","severity":1,"message":"1015","line":519,"column":30,"nodeType":"1013","messageId":"1014","endLine":519,"endColumn":32},{"ruleId":"995","replacedBy":"1163"},{"ruleId":"997","replacedBy":"1164"},{"ruleId":"986","severity":1,"message":"1027","line":2,"column":8,"nodeType":"988","messageId":"989","endLine":2,"endColumn":14},{"ruleId":"986","severity":1,"message":"1028","line":3,"column":8,"nodeType":"988","messageId":"989","endLine":3,"endColumn":15},{"ruleId":"986","severity":1,"message":"1058","line":4,"column":8,"nodeType":"988","messageId":"989","endLine":4,"endColumn":20},{"ruleId":"986","severity":1,"message":"1132","line":5,"column":8,"nodeType":"988","messageId":"989","endLine":5,"endColumn":18},{"ruleId":"986","severity":1,"message":"1040","line":6,"column":36,"nodeType":"988","messageId":"989","endLine":6,"endColumn":41},{"ruleId":"986","severity":1,"message":"1047","line":6,"column":42,"nodeType":"988","messageId":"989","endLine":6,"endColumn":47},{"ruleId":"986","severity":1,"message":"1048","line":6,"column":67,"nodeType":"988","messageId":"989","endLine":6,"endColumn":74},{"ruleId":"986","severity":1,"message":"1133","line":6,"column":86,"nodeType":"988","messageId":"989","endLine":6,"endColumn":95},{"ruleId":"986","severity":1,"message":"1070","line":8,"column":7,"nodeType":"988","messageId":"989","endLine":8,"endColumn":18},{"ruleId":"986","severity":1,"message":"1007","line":11,"column":12,"nodeType":"988","messageId":"989","endLine":11,"endColumn":18},{"ruleId":"986","severity":1,"message":"1055","line":12,"column":12,"nodeType":"988","messageId":"989","endLine":12,"endColumn":17},{"ruleId":"986","severity":1,"message":"1165","line":19,"column":11,"nodeType":"988","messageId":"989","endLine":19,"endColumn":24},{"ruleId":"992","severity":1,"message":"993","line":145,"column":17,"nodeType":"994","endLine":151,"endColumn":18},{"ruleId":"986","severity":1,"message":"1166","line":3,"column":8,"nodeType":"988","messageId":"989","endLine":3,"endColumn":17},{"ruleId":"986","severity":1,"message":"1040","line":17,"column":3,"nodeType":"988","messageId":"989","endLine":17,"endColumn":8},{"ruleId":"986","severity":1,"message":"1047","line":18,"column":3,"nodeType":"988","messageId":"989","endLine":18,"endColumn":8},{"ruleId":"986","severity":1,"message":"1048","line":19,"column":3,"nodeType":"988","messageId":"989","endLine":19,"endColumn":10},{"ruleId":"986","severity":1,"message":"1167","line":27,"column":8,"nodeType":"988","messageId":"989","endLine":27,"endColumn":21},{"ruleId":"986","severity":1,"message":"1007","line":40,"column":10,"nodeType":"988","messageId":"989","endLine":40,"endColumn":16},{"ruleId":"986","severity":1,"message":"1055","line":41,"column":10,"nodeType":"988","messageId":"989","endLine":41,"endColumn":15},{"ruleId":"986","severity":1,"message":"1168","line":49,"column":10,"nodeType":"988","messageId":"989","endLine":49,"endColumn":23},{"ruleId":"986","severity":1,"message":"1169","line":52,"column":30,"nodeType":"988","messageId":"989","endLine":52,"endColumn":51},{"ruleId":"986","severity":1,"message":"1170","line":54,"column":10,"nodeType":"988","messageId":"989","endLine":54,"endColumn":23},{"ruleId":"986","severity":1,"message":"1171","line":54,"column":25,"nodeType":"988","messageId":"989","endLine":54,"endColumn":41},{"ruleId":"986","severity":1,"message":"1172","line":80,"column":5,"nodeType":"988","messageId":"989","endLine":80,"endColumn":29},{"ruleId":"986","severity":1,"message":"1173","line":81,"column":5,"nodeType":"988","messageId":"989","endLine":81,"endColumn":32},{"ruleId":"986","severity":1,"message":"1174","line":83,"column":10,"nodeType":"988","messageId":"989","endLine":83,"endColumn":23},{"ruleId":"986","severity":1,"message":"1175","line":84,"column":10,"nodeType":"988","messageId":"989","endLine":84,"endColumn":17},{"ruleId":"986","severity":1,"message":"1176","line":96,"column":9,"nodeType":"988","messageId":"989","endLine":96,"endColumn":15},{"ruleId":"986","severity":1,"message":"1177","line":111,"column":9,"nodeType":"988","messageId":"989","endLine":111,"endColumn":25},{"ruleId":"1011","severity":1,"message":"1015","line":130,"column":33,"nodeType":"1013","messageId":"1014","endLine":130,"endColumn":35},{"ruleId":"1011","severity":1,"message":"1015","line":133,"column":40,"nodeType":"1013","messageId":"1014","endLine":133,"endColumn":42},{"ruleId":"1011","severity":1,"message":"1015","line":154,"column":33,"nodeType":"1013","messageId":"1014","endLine":154,"endColumn":35},{"ruleId":"1011","severity":1,"message":"1015","line":157,"column":40,"nodeType":"1013","messageId":"1014","endLine":157,"endColumn":42},{"ruleId":"1011","severity":1,"message":"1015","line":192,"column":33,"nodeType":"1013","messageId":"1014","endLine":192,"endColumn":35},{"ruleId":"1011","severity":1,"message":"1015","line":215,"column":41,"nodeType":"1013","messageId":"1014","endLine":215,"endColumn":43},{"ruleId":"986","severity":1,"message":"1178","line":228,"column":9,"nodeType":"988","messageId":"989","endLine":228,"endColumn":33},{"ruleId":"1011","severity":1,"message":"1015","line":276,"column":26,"nodeType":"1013","messageId":"1014","endLine":276,"endColumn":28},{"ruleId":"1011","severity":1,"message":"1015","line":278,"column":33,"nodeType":"1013","messageId":"1014","endLine":278,"endColumn":35},{"ruleId":"1011","severity":1,"message":"1012","line":302,"column":22,"nodeType":"1013","messageId":"1014","endLine":302,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1012","line":303,"column":23,"nodeType":"1013","messageId":"1014","endLine":303,"endColumn":25},{"ruleId":"1011","severity":1,"message":"1012","line":304,"column":29,"nodeType":"1013","messageId":"1014","endLine":304,"endColumn":31},{"ruleId":"1011","severity":1,"message":"1012","line":305,"column":32,"nodeType":"1013","messageId":"1014","endLine":305,"endColumn":34},{"ruleId":"1011","severity":1,"message":"1012","line":306,"column":22,"nodeType":"1013","messageId":"1014","endLine":306,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1012","line":307,"column":27,"nodeType":"1013","messageId":"1014","endLine":307,"endColumn":29},{"ruleId":"1011","severity":1,"message":"1015","line":308,"column":15,"nodeType":"1013","messageId":"1014","endLine":308,"endColumn":17},{"ruleId":"1042","severity":1,"message":"1179","line":316,"column":6,"nodeType":"1044","endLine":324,"endColumn":4,"suggestions":"1180"},{"ruleId":"1011","severity":1,"message":"1012","line":837,"column":37,"nodeType":"1013","messageId":"1014","endLine":837,"endColumn":39},{"ruleId":"1011","severity":1,"message":"1015","line":838,"column":34,"nodeType":"1013","messageId":"1014","endLine":838,"endColumn":36},{"ruleId":"1011","severity":1,"message":"1015","line":1144,"column":55,"nodeType":"1013","messageId":"1014","endLine":1144,"endColumn":57},{"ruleId":"1011","severity":1,"message":"1015","line":1188,"column":39,"nodeType":"1013","messageId":"1014","endLine":1188,"endColumn":41},{"ruleId":"986","severity":1,"message":"1181","line":1512,"column":31,"nodeType":"988","messageId":"989","endLine":1512,"endColumn":35},{"ruleId":"1011","severity":1,"message":"1012","line":1513,"column":55,"nodeType":"1013","messageId":"1014","endLine":1513,"endColumn":57},{"ruleId":"1011","severity":1,"message":"1015","line":1517,"column":67,"nodeType":"1013","messageId":"1014","endLine":1517,"endColumn":69},{"ruleId":"1011","severity":1,"message":"1015","line":1553,"column":39,"nodeType":"1013","messageId":"1014","endLine":1553,"endColumn":41},{"ruleId":"992","severity":1,"message":"993","line":1955,"column":31,"nodeType":"994","endLine":1961,"endColumn":33},{"ruleId":"992","severity":1,"message":"993","line":1968,"column":31,"nodeType":"994","endLine":1974,"endColumn":33},{"ruleId":"992","severity":1,"message":"993","line":2081,"column":31,"nodeType":"994","endLine":2087,"endColumn":33},{"ruleId":"992","severity":1,"message":"993","line":2096,"column":31,"nodeType":"994","endLine":2102,"endColumn":33},{"ruleId":"992","severity":1,"message":"993","line":2474,"column":25,"nodeType":"994","endLine":2480,"endColumn":26},{"ruleId":"992","severity":1,"message":"993","line":2624,"column":27,"nodeType":"994","endLine":2630,"endColumn":29},{"ruleId":"992","severity":1,"message":"993","line":2637,"column":27,"nodeType":"994","endLine":2643,"endColumn":29},{"ruleId":"986","severity":1,"message":"1027","line":2,"column":8,"nodeType":"988","messageId":"989","endLine":2,"endColumn":14},{"ruleId":"986","severity":1,"message":"1028","line":3,"column":8,"nodeType":"988","messageId":"989","endLine":3,"endColumn":15},{"ruleId":"986","severity":1,"message":"1058","line":4,"column":8,"nodeType":"988","messageId":"989","endLine":4,"endColumn":20},{"ruleId":"986","severity":1,"message":"1132","line":5,"column":8,"nodeType":"988","messageId":"989","endLine":5,"endColumn":18},{"ruleId":"986","severity":1,"message":"1040","line":6,"column":36,"nodeType":"988","messageId":"989","endLine":6,"endColumn":41},{"ruleId":"986","severity":1,"message":"1047","line":6,"column":42,"nodeType":"988","messageId":"989","endLine":6,"endColumn":47},{"ruleId":"986","severity":1,"message":"1048","line":6,"column":48,"nodeType":"988","messageId":"989","endLine":6,"endColumn":55},{"ruleId":"986","severity":1,"message":"999","line":6,"column":67,"nodeType":"988","messageId":"989","endLine":6,"endColumn":76},{"ruleId":"986","severity":1,"message":"1070","line":9,"column":7,"nodeType":"988","messageId":"989","endLine":9,"endColumn":18},{"ruleId":"986","severity":1,"message":"1007","line":12,"column":12,"nodeType":"988","messageId":"989","endLine":12,"endColumn":18},{"ruleId":"986","severity":1,"message":"1055","line":13,"column":12,"nodeType":"988","messageId":"989","endLine":13,"endColumn":17},{"ruleId":"992","severity":1,"message":"993","line":93,"column":17,"nodeType":"994","endLine":99,"endColumn":18},{"ruleId":"986","severity":1,"message":"1038","line":3,"column":9,"nodeType":"988","messageId":"989","endLine":3,"endColumn":25},{"ruleId":"986","severity":1,"message":"1039","line":3,"column":31,"nodeType":"988","messageId":"989","endLine":3,"endColumn":35},{"ruleId":"986","severity":1,"message":"1040","line":3,"column":36,"nodeType":"988","messageId":"989","endLine":3,"endColumn":41},{"ruleId":"986","severity":1,"message":"1047","line":3,"column":42,"nodeType":"988","messageId":"989","endLine":3,"endColumn":47},{"ruleId":"986","severity":1,"message":"1048","line":3,"column":48,"nodeType":"988","messageId":"989","endLine":3,"endColumn":55},{"ruleId":"986","severity":1,"message":"1114","line":3,"column":56,"nodeType":"988","messageId":"989","endLine":3,"endColumn":66},{"ruleId":"986","severity":1,"message":"999","line":3,"column":67,"nodeType":"988","messageId":"989","endLine":3,"endColumn":76},{"ruleId":"986","severity":1,"message":"1182","line":9,"column":10,"nodeType":"988","messageId":"989","endLine":9,"endColumn":17},{"ruleId":"986","severity":1,"message":"1183","line":9,"column":19,"nodeType":"988","messageId":"989","endLine":9,"endColumn":29},{"ruleId":"995","replacedBy":"1184"},{"ruleId":"997","replacedBy":"1185"},{"ruleId":"986","severity":1,"message":"1027","line":2,"column":8,"nodeType":"988","messageId":"989","endLine":2,"endColumn":14},{"ruleId":"986","severity":1,"message":"1028","line":3,"column":8,"nodeType":"988","messageId":"989","endLine":3,"endColumn":15},{"ruleId":"986","severity":1,"message":"1058","line":4,"column":8,"nodeType":"988","messageId":"989","endLine":4,"endColumn":20},{"ruleId":"986","severity":1,"message":"1132","line":5,"column":8,"nodeType":"988","messageId":"989","endLine":5,"endColumn":18},{"ruleId":"986","severity":1,"message":"1040","line":6,"column":36,"nodeType":"988","messageId":"989","endLine":6,"endColumn":41},{"ruleId":"986","severity":1,"message":"1047","line":6,"column":42,"nodeType":"988","messageId":"989","endLine":6,"endColumn":47},{"ruleId":"986","severity":1,"message":"1048","line":6,"column":48,"nodeType":"988","messageId":"989","endLine":6,"endColumn":55},{"ruleId":"986","severity":1,"message":"999","line":6,"column":67,"nodeType":"988","messageId":"989","endLine":6,"endColumn":76},{"ruleId":"986","severity":1,"message":"1070","line":9,"column":7,"nodeType":"988","messageId":"989","endLine":9,"endColumn":18},{"ruleId":"986","severity":1,"message":"1007","line":12,"column":12,"nodeType":"988","messageId":"989","endLine":12,"endColumn":18},{"ruleId":"986","severity":1,"message":"1055","line":13,"column":12,"nodeType":"988","messageId":"989","endLine":13,"endColumn":17},{"ruleId":"992","severity":1,"message":"993","line":93,"column":17,"nodeType":"994","endLine":99,"endColumn":18},{"ruleId":"986","severity":1,"message":"1027","line":2,"column":8,"nodeType":"988","messageId":"989","endLine":2,"endColumn":14},{"ruleId":"986","severity":1,"message":"1028","line":3,"column":8,"nodeType":"988","messageId":"989","endLine":3,"endColumn":15},{"ruleId":"986","severity":1,"message":"1058","line":4,"column":8,"nodeType":"988","messageId":"989","endLine":4,"endColumn":20},{"ruleId":"986","severity":1,"message":"1132","line":5,"column":8,"nodeType":"988","messageId":"989","endLine":5,"endColumn":18},{"ruleId":"986","severity":1,"message":"1040","line":6,"column":36,"nodeType":"988","messageId":"989","endLine":6,"endColumn":41},{"ruleId":"986","severity":1,"message":"1047","line":6,"column":42,"nodeType":"988","messageId":"989","endLine":6,"endColumn":47},{"ruleId":"986","severity":1,"message":"1048","line":6,"column":48,"nodeType":"988","messageId":"989","endLine":6,"endColumn":55},{"ruleId":"986","severity":1,"message":"999","line":6,"column":67,"nodeType":"988","messageId":"989","endLine":6,"endColumn":76},{"ruleId":"986","severity":1,"message":"1070","line":9,"column":7,"nodeType":"988","messageId":"989","endLine":9,"endColumn":18},{"ruleId":"986","severity":1,"message":"1007","line":12,"column":12,"nodeType":"988","messageId":"989","endLine":12,"endColumn":18},{"ruleId":"986","severity":1,"message":"1055","line":13,"column":12,"nodeType":"988","messageId":"989","endLine":13,"endColumn":17},{"ruleId":"992","severity":1,"message":"993","line":93,"column":17,"nodeType":"994","endLine":99,"endColumn":18},{"ruleId":"986","severity":1,"message":"1027","line":2,"column":8,"nodeType":"988","messageId":"989","endLine":2,"endColumn":14},{"ruleId":"986","severity":1,"message":"1028","line":3,"column":8,"nodeType":"988","messageId":"989","endLine":3,"endColumn":15},{"ruleId":"986","severity":1,"message":"1058","line":4,"column":8,"nodeType":"988","messageId":"989","endLine":4,"endColumn":20},{"ruleId":"986","severity":1,"message":"1132","line":5,"column":8,"nodeType":"988","messageId":"989","endLine":5,"endColumn":18},{"ruleId":"986","severity":1,"message":"1040","line":6,"column":36,"nodeType":"988","messageId":"989","endLine":6,"endColumn":41},{"ruleId":"986","severity":1,"message":"1047","line":6,"column":42,"nodeType":"988","messageId":"989","endLine":6,"endColumn":47},{"ruleId":"986","severity":1,"message":"1048","line":6,"column":48,"nodeType":"988","messageId":"989","endLine":6,"endColumn":55},{"ruleId":"986","severity":1,"message":"999","line":6,"column":67,"nodeType":"988","messageId":"989","endLine":6,"endColumn":76},{"ruleId":"986","severity":1,"message":"1070","line":9,"column":7,"nodeType":"988","messageId":"989","endLine":9,"endColumn":18},{"ruleId":"986","severity":1,"message":"1007","line":12,"column":12,"nodeType":"988","messageId":"989","endLine":12,"endColumn":18},{"ruleId":"986","severity":1,"message":"1055","line":13,"column":12,"nodeType":"988","messageId":"989","endLine":13,"endColumn":17},{"ruleId":"992","severity":1,"message":"993","line":120,"column":25,"nodeType":"994","endLine":126,"endColumn":26},{"ruleId":"986","severity":1,"message":"1027","line":2,"column":8,"nodeType":"988","messageId":"989","endLine":2,"endColumn":14},{"ruleId":"986","severity":1,"message":"1028","line":3,"column":8,"nodeType":"988","messageId":"989","endLine":3,"endColumn":15},{"ruleId":"986","severity":1,"message":"1058","line":4,"column":8,"nodeType":"988","messageId":"989","endLine":4,"endColumn":20},{"ruleId":"986","severity":1,"message":"1132","line":5,"column":8,"nodeType":"988","messageId":"989","endLine":5,"endColumn":18},{"ruleId":"986","severity":1,"message":"1040","line":6,"column":36,"nodeType":"988","messageId":"989","endLine":6,"endColumn":41},{"ruleId":"986","severity":1,"message":"1047","line":6,"column":42,"nodeType":"988","messageId":"989","endLine":6,"endColumn":47},{"ruleId":"986","severity":1,"message":"1048","line":6,"column":48,"nodeType":"988","messageId":"989","endLine":6,"endColumn":55},{"ruleId":"986","severity":1,"message":"999","line":6,"column":67,"nodeType":"988","messageId":"989","endLine":6,"endColumn":76},{"ruleId":"986","severity":1,"message":"1070","line":9,"column":7,"nodeType":"988","messageId":"989","endLine":9,"endColumn":18},{"ruleId":"986","severity":1,"message":"1007","line":12,"column":12,"nodeType":"988","messageId":"989","endLine":12,"endColumn":18},{"ruleId":"986","severity":1,"message":"1055","line":13,"column":12,"nodeType":"988","messageId":"989","endLine":13,"endColumn":17},{"ruleId":"992","severity":1,"message":"993","line":120,"column":25,"nodeType":"994","endLine":126,"endColumn":26},{"ruleId":"986","severity":1,"message":"1027","line":2,"column":8,"nodeType":"988","messageId":"989","endLine":2,"endColumn":14},{"ruleId":"986","severity":1,"message":"1028","line":3,"column":8,"nodeType":"988","messageId":"989","endLine":3,"endColumn":15},{"ruleId":"986","severity":1,"message":"1058","line":4,"column":8,"nodeType":"988","messageId":"989","endLine":4,"endColumn":20},{"ruleId":"986","severity":1,"message":"1132","line":5,"column":8,"nodeType":"988","messageId":"989","endLine":5,"endColumn":18},{"ruleId":"986","severity":1,"message":"1040","line":6,"column":36,"nodeType":"988","messageId":"989","endLine":6,"endColumn":41},{"ruleId":"986","severity":1,"message":"1047","line":6,"column":42,"nodeType":"988","messageId":"989","endLine":6,"endColumn":47},{"ruleId":"986","severity":1,"message":"1048","line":6,"column":48,"nodeType":"988","messageId":"989","endLine":6,"endColumn":55},{"ruleId":"986","severity":1,"message":"999","line":6,"column":67,"nodeType":"988","messageId":"989","endLine":6,"endColumn":76},{"ruleId":"986","severity":1,"message":"1070","line":9,"column":7,"nodeType":"988","messageId":"989","endLine":9,"endColumn":18},{"ruleId":"986","severity":1,"message":"1007","line":12,"column":12,"nodeType":"988","messageId":"989","endLine":12,"endColumn":18},{"ruleId":"986","severity":1,"message":"1055","line":13,"column":12,"nodeType":"988","messageId":"989","endLine":13,"endColumn":17},{"ruleId":"992","severity":1,"message":"993","line":120,"column":17,"nodeType":"994","endLine":126,"endColumn":18},{"ruleId":"986","severity":1,"message":"1027","line":2,"column":8,"nodeType":"988","messageId":"989","endLine":2,"endColumn":14},{"ruleId":"986","severity":1,"message":"1028","line":3,"column":8,"nodeType":"988","messageId":"989","endLine":3,"endColumn":15},{"ruleId":"986","severity":1,"message":"1058","line":4,"column":8,"nodeType":"988","messageId":"989","endLine":4,"endColumn":20},{"ruleId":"986","severity":1,"message":"1132","line":5,"column":8,"nodeType":"988","messageId":"989","endLine":5,"endColumn":18},{"ruleId":"986","severity":1,"message":"1040","line":6,"column":36,"nodeType":"988","messageId":"989","endLine":6,"endColumn":41},{"ruleId":"986","severity":1,"message":"1047","line":6,"column":42,"nodeType":"988","messageId":"989","endLine":6,"endColumn":47},{"ruleId":"986","severity":1,"message":"1048","line":6,"column":48,"nodeType":"988","messageId":"989","endLine":6,"endColumn":55},{"ruleId":"986","severity":1,"message":"999","line":6,"column":67,"nodeType":"988","messageId":"989","endLine":6,"endColumn":76},{"ruleId":"986","severity":1,"message":"1070","line":9,"column":7,"nodeType":"988","messageId":"989","endLine":9,"endColumn":18},{"ruleId":"986","severity":1,"message":"1007","line":12,"column":12,"nodeType":"988","messageId":"989","endLine":12,"endColumn":18},{"ruleId":"986","severity":1,"message":"1055","line":13,"column":12,"nodeType":"988","messageId":"989","endLine":13,"endColumn":17},{"ruleId":"992","severity":1,"message":"993","line":121,"column":17,"nodeType":"994","endLine":127,"endColumn":18},{"ruleId":"986","severity":1,"message":"1027","line":2,"column":8,"nodeType":"988","messageId":"989","endLine":2,"endColumn":14},{"ruleId":"986","severity":1,"message":"1028","line":3,"column":8,"nodeType":"988","messageId":"989","endLine":3,"endColumn":15},{"ruleId":"986","severity":1,"message":"1058","line":4,"column":8,"nodeType":"988","messageId":"989","endLine":4,"endColumn":20},{"ruleId":"986","severity":1,"message":"1132","line":5,"column":8,"nodeType":"988","messageId":"989","endLine":5,"endColumn":18},{"ruleId":"986","severity":1,"message":"1040","line":6,"column":36,"nodeType":"988","messageId":"989","endLine":6,"endColumn":41},{"ruleId":"986","severity":1,"message":"1047","line":6,"column":42,"nodeType":"988","messageId":"989","endLine":6,"endColumn":47},{"ruleId":"986","severity":1,"message":"1048","line":6,"column":48,"nodeType":"988","messageId":"989","endLine":6,"endColumn":55},{"ruleId":"986","severity":1,"message":"999","line":6,"column":67,"nodeType":"988","messageId":"989","endLine":6,"endColumn":76},{"ruleId":"986","severity":1,"message":"1070","line":9,"column":7,"nodeType":"988","messageId":"989","endLine":9,"endColumn":18},{"ruleId":"986","severity":1,"message":"1007","line":12,"column":12,"nodeType":"988","messageId":"989","endLine":12,"endColumn":18},{"ruleId":"986","severity":1,"message":"1055","line":13,"column":12,"nodeType":"988","messageId":"989","endLine":13,"endColumn":17},{"ruleId":"992","severity":1,"message":"993","line":93,"column":17,"nodeType":"994","endLine":99,"endColumn":18},{"ruleId":"986","severity":1,"message":"1027","line":2,"column":8,"nodeType":"988","messageId":"989","endLine":2,"endColumn":14},{"ruleId":"986","severity":1,"message":"1028","line":3,"column":8,"nodeType":"988","messageId":"989","endLine":3,"endColumn":15},{"ruleId":"986","severity":1,"message":"1058","line":4,"column":8,"nodeType":"988","messageId":"989","endLine":4,"endColumn":20},{"ruleId":"986","severity":1,"message":"1132","line":5,"column":8,"nodeType":"988","messageId":"989","endLine":5,"endColumn":18},{"ruleId":"986","severity":1,"message":"1040","line":6,"column":36,"nodeType":"988","messageId":"989","endLine":6,"endColumn":41},{"ruleId":"986","severity":1,"message":"1047","line":6,"column":42,"nodeType":"988","messageId":"989","endLine":6,"endColumn":47},{"ruleId":"986","severity":1,"message":"1048","line":6,"column":48,"nodeType":"988","messageId":"989","endLine":6,"endColumn":55},{"ruleId":"986","severity":1,"message":"999","line":6,"column":67,"nodeType":"988","messageId":"989","endLine":6,"endColumn":76},{"ruleId":"986","severity":1,"message":"1070","line":9,"column":7,"nodeType":"988","messageId":"989","endLine":9,"endColumn":18},{"ruleId":"986","severity":1,"message":"1007","line":12,"column":12,"nodeType":"988","messageId":"989","endLine":12,"endColumn":18},{"ruleId":"986","severity":1,"message":"1055","line":13,"column":12,"nodeType":"988","messageId":"989","endLine":13,"endColumn":17},{"ruleId":"992","severity":1,"message":"993","line":120,"column":25,"nodeType":"994","endLine":126,"endColumn":26},{"ruleId":"986","severity":1,"message":"1027","line":2,"column":8,"nodeType":"988","messageId":"989","endLine":2,"endColumn":14},{"ruleId":"986","severity":1,"message":"1028","line":3,"column":8,"nodeType":"988","messageId":"989","endLine":3,"endColumn":15},{"ruleId":"986","severity":1,"message":"1058","line":4,"column":8,"nodeType":"988","messageId":"989","endLine":4,"endColumn":20},{"ruleId":"986","severity":1,"message":"1132","line":5,"column":8,"nodeType":"988","messageId":"989","endLine":5,"endColumn":18},{"ruleId":"986","severity":1,"message":"1040","line":6,"column":36,"nodeType":"988","messageId":"989","endLine":6,"endColumn":41},{"ruleId":"986","severity":1,"message":"1047","line":6,"column":42,"nodeType":"988","messageId":"989","endLine":6,"endColumn":47},{"ruleId":"986","severity":1,"message":"1048","line":6,"column":48,"nodeType":"988","messageId":"989","endLine":6,"endColumn":55},{"ruleId":"986","severity":1,"message":"999","line":6,"column":67,"nodeType":"988","messageId":"989","endLine":6,"endColumn":76},{"ruleId":"986","severity":1,"message":"1070","line":9,"column":7,"nodeType":"988","messageId":"989","endLine":9,"endColumn":18},{"ruleId":"986","severity":1,"message":"1007","line":12,"column":12,"nodeType":"988","messageId":"989","endLine":12,"endColumn":18},{"ruleId":"986","severity":1,"message":"1055","line":13,"column":12,"nodeType":"988","messageId":"989","endLine":13,"endColumn":17},{"ruleId":"992","severity":1,"message":"993","line":93,"column":17,"nodeType":"994","endLine":99,"endColumn":18},{"ruleId":"986","severity":1,"message":"1027","line":2,"column":8,"nodeType":"988","messageId":"989","endLine":2,"endColumn":14},{"ruleId":"986","severity":1,"message":"1028","line":3,"column":8,"nodeType":"988","messageId":"989","endLine":3,"endColumn":15},{"ruleId":"986","severity":1,"message":"1058","line":4,"column":8,"nodeType":"988","messageId":"989","endLine":4,"endColumn":20},{"ruleId":"986","severity":1,"message":"1132","line":5,"column":8,"nodeType":"988","messageId":"989","endLine":5,"endColumn":18},{"ruleId":"986","severity":1,"message":"1040","line":6,"column":36,"nodeType":"988","messageId":"989","endLine":6,"endColumn":41},{"ruleId":"986","severity":1,"message":"1047","line":6,"column":42,"nodeType":"988","messageId":"989","endLine":6,"endColumn":47},{"ruleId":"986","severity":1,"message":"1048","line":6,"column":48,"nodeType":"988","messageId":"989","endLine":6,"endColumn":55},{"ruleId":"986","severity":1,"message":"999","line":6,"column":67,"nodeType":"988","messageId":"989","endLine":6,"endColumn":76},{"ruleId":"986","severity":1,"message":"1070","line":9,"column":7,"nodeType":"988","messageId":"989","endLine":9,"endColumn":18},{"ruleId":"986","severity":1,"message":"1007","line":12,"column":12,"nodeType":"988","messageId":"989","endLine":12,"endColumn":18},{"ruleId":"986","severity":1,"message":"1055","line":13,"column":12,"nodeType":"988","messageId":"989","endLine":13,"endColumn":17},{"ruleId":"992","severity":1,"message":"993","line":120,"column":25,"nodeType":"994","endLine":126,"endColumn":26},{"ruleId":"986","severity":1,"message":"1038","line":3,"column":9,"nodeType":"988","messageId":"989","endLine":3,"endColumn":25},{"ruleId":"986","severity":1,"message":"1039","line":3,"column":31,"nodeType":"988","messageId":"989","endLine":3,"endColumn":35},{"ruleId":"986","severity":1,"message":"1040","line":3,"column":36,"nodeType":"988","messageId":"989","endLine":3,"endColumn":41},{"ruleId":"986","severity":1,"message":"1047","line":3,"column":42,"nodeType":"988","messageId":"989","endLine":3,"endColumn":47},{"ruleId":"986","severity":1,"message":"1048","line":3,"column":48,"nodeType":"988","messageId":"989","endLine":3,"endColumn":55},{"ruleId":"986","severity":1,"message":"1114","line":3,"column":56,"nodeType":"988","messageId":"989","endLine":3,"endColumn":66},{"ruleId":"986","severity":1,"message":"999","line":3,"column":67,"nodeType":"988","messageId":"989","endLine":3,"endColumn":76},{"ruleId":"986","severity":1,"message":"1182","line":9,"column":10,"nodeType":"988","messageId":"989","endLine":9,"endColumn":17},{"ruleId":"986","severity":1,"message":"1183","line":9,"column":19,"nodeType":"988","messageId":"989","endLine":9,"endColumn":29},{"ruleId":"986","severity":1,"message":"1186","line":2,"column":8,"nodeType":"988","messageId":"989","endLine":2,"endColumn":16},{"ruleId":"986","severity":1,"message":"1187","line":16,"column":10,"nodeType":"988","messageId":"989","endLine":16,"endColumn":16},{"ruleId":"986","severity":1,"message":"1188","line":16,"column":18,"nodeType":"988","messageId":"989","endLine":16,"endColumn":27},{"ruleId":"986","severity":1,"message":"1189","line":17,"column":10,"nodeType":"988","messageId":"989","endLine":17,"endColumn":20},{"ruleId":"986","severity":1,"message":"1190","line":17,"column":22,"nodeType":"988","messageId":"989","endLine":17,"endColumn":35},{"ruleId":"986","severity":1,"message":"1007","line":18,"column":10,"nodeType":"988","messageId":"989","endLine":18,"endColumn":16},{"ruleId":"1011","severity":1,"message":"1012","line":46,"column":28,"nodeType":"1013","messageId":"1014","endLine":46,"endColumn":30},{"ruleId":"1011","severity":1,"message":"1012","line":115,"column":12,"nodeType":"1013","messageId":"1014","endLine":115,"endColumn":14},{"ruleId":"986","severity":1,"message":"1028","line":4,"column":8,"nodeType":"988","messageId":"989","endLine":4,"endColumn":15},{"ruleId":"986","severity":1,"message":"1038","line":7,"column":3,"nodeType":"988","messageId":"989","endLine":7,"endColumn":19},{"ruleId":"986","severity":1,"message":"1046","line":8,"column":3,"nodeType":"988","messageId":"989","endLine":8,"endColumn":7},{"ruleId":"986","severity":1,"message":"1039","line":9,"column":3,"nodeType":"988","messageId":"989","endLine":9,"endColumn":7},{"ruleId":"986","severity":1,"message":"1040","line":10,"column":3,"nodeType":"988","messageId":"989","endLine":10,"endColumn":8},{"ruleId":"986","severity":1,"message":"1041","line":11,"column":3,"nodeType":"988","messageId":"989","endLine":11,"endColumn":21},{"ruleId":"986","severity":1,"message":"1191","line":18,"column":10,"nodeType":"988","messageId":"989","endLine":18,"endColumn":14},{"ruleId":"1042","severity":1,"message":"1043","line":32,"column":6,"nodeType":"1044","endLine":32,"endColumn":8,"suggestions":"1192"},{"ruleId":"986","severity":1,"message":"1027","line":3,"column":8,"nodeType":"988","messageId":"989","endLine":3,"endColumn":14},{"ruleId":"986","severity":1,"message":"1028","line":4,"column":8,"nodeType":"988","messageId":"989","endLine":4,"endColumn":15},{"ruleId":"986","severity":1,"message":"1058","line":5,"column":8,"nodeType":"988","messageId":"989","endLine":5,"endColumn":20},{"ruleId":"986","severity":1,"message":"1193","line":6,"column":8,"nodeType":"988","messageId":"989","endLine":6,"endColumn":17},{"ruleId":"986","severity":1,"message":"1040","line":14,"column":3,"nodeType":"988","messageId":"989","endLine":14,"endColumn":8},{"ruleId":"986","severity":1,"message":"1041","line":16,"column":3,"nodeType":"988","messageId":"989","endLine":16,"endColumn":21},{"ruleId":"986","severity":1,"message":"999","line":18,"column":3,"nodeType":"988","messageId":"989","endLine":18,"endColumn":12},{"ruleId":"986","severity":1,"message":"1114","line":19,"column":3,"nodeType":"988","messageId":"989","endLine":19,"endColumn":13},{"ruleId":"986","severity":1,"message":"1194","line":21,"column":8,"nodeType":"988","messageId":"989","endLine":21,"endColumn":12},{"ruleId":"986","severity":1,"message":"1070","line":22,"column":7,"nodeType":"988","messageId":"989","endLine":22,"endColumn":18},{"ruleId":"986","severity":1,"message":"1195","line":26,"column":10,"nodeType":"988","messageId":"989","endLine":26,"endColumn":24},{"ruleId":"986","severity":1,"message":"1196","line":27,"column":10,"nodeType":"988","messageId":"989","endLine":27,"endColumn":22},{"ruleId":"986","severity":1,"message":"1197","line":27,"column":24,"nodeType":"988","messageId":"989","endLine":27,"endColumn":39},{"ruleId":"1019","severity":1,"message":"1198","line":326,"column":9,"nodeType":"1021","messageId":"1014","endLine":326,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1015","line":326,"column":32,"nodeType":"1013","messageId":"1014","endLine":326,"endColumn":34},{"ruleId":"1011","severity":1,"message":"1012","line":334,"column":32,"nodeType":"1013","messageId":"1014","endLine":334,"endColumn":34},{"ruleId":"1011","severity":1,"message":"1015","line":356,"column":26,"nodeType":"1013","messageId":"1014","endLine":356,"endColumn":28},{"ruleId":"1011","severity":1,"message":"1015","line":438,"column":26,"nodeType":"1013","messageId":"1014","endLine":438,"endColumn":28},{"ruleId":"1011","severity":1,"message":"1015","line":492,"column":25,"nodeType":"1013","messageId":"1014","endLine":492,"endColumn":27},{"ruleId":"1011","severity":1,"message":"1015","line":530,"column":51,"nodeType":"1013","messageId":"1014","endLine":530,"endColumn":53},{"ruleId":"992","severity":1,"message":"993","line":547,"column":13,"nodeType":"994","endLine":555,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1015","line":561,"column":49,"nodeType":"1013","messageId":"1014","endLine":561,"endColumn":51},{"ruleId":"1019","severity":1,"message":"1020","line":580,"column":15,"nodeType":"1021","messageId":"1014","endLine":580,"endColumn":28},{"ruleId":"1011","severity":1,"message":"1015","line":593,"column":49,"nodeType":"1013","messageId":"1014","endLine":593,"endColumn":51},{"ruleId":"1019","severity":1,"message":"1020","line":644,"column":15,"nodeType":"1021","messageId":"1014","endLine":644,"endColumn":28},{"ruleId":"986","severity":1,"message":"1028","line":4,"column":8,"nodeType":"988","messageId":"989","endLine":4,"endColumn":15},{"ruleId":"986","severity":1,"message":"1046","line":8,"column":3,"nodeType":"988","messageId":"989","endLine":8,"endColumn":7},{"ruleId":"986","severity":1,"message":"1039","line":9,"column":3,"nodeType":"988","messageId":"989","endLine":9,"endColumn":7},{"ruleId":"986","severity":1,"message":"1040","line":10,"column":3,"nodeType":"988","messageId":"989","endLine":10,"endColumn":8},{"ruleId":"986","severity":1,"message":"1041","line":11,"column":3,"nodeType":"988","messageId":"989","endLine":11,"endColumn":21},{"ruleId":"986","severity":1,"message":"1199","line":21,"column":10,"nodeType":"988","messageId":"989","endLine":21,"endColumn":14},{"ruleId":"986","severity":1,"message":"1200","line":21,"column":16,"nodeType":"988","messageId":"989","endLine":21,"endColumn":23},{"ruleId":"986","severity":1,"message":"1191","line":22,"column":10,"nodeType":"988","messageId":"989","endLine":22,"endColumn":14},{"ruleId":"986","severity":1,"message":"1201","line":22,"column":16,"nodeType":"988","messageId":"989","endLine":22,"endColumn":23},{"ruleId":"986","severity":1,"message":"1202","line":25,"column":10,"nodeType":"988","messageId":"989","endLine":25,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1012","line":55,"column":28,"nodeType":"1013","messageId":"1014","endLine":55,"endColumn":30},{"ruleId":"1011","severity":1,"message":"1015","line":56,"column":49,"nodeType":"1013","messageId":"1014","endLine":56,"endColumn":51},{"ruleId":"1042","severity":1,"message":"1056","line":67,"column":6,"nodeType":"1044","endLine":67,"endColumn":8,"suggestions":"1203"},{"ruleId":"986","severity":1,"message":"1186","line":2,"column":8,"nodeType":"988","messageId":"989","endLine":2,"endColumn":16},{"ruleId":"986","severity":1,"message":"1187","line":76,"column":10,"nodeType":"988","messageId":"989","endLine":76,"endColumn":16},{"ruleId":"986","severity":1,"message":"1188","line":76,"column":18,"nodeType":"988","messageId":"989","endLine":76,"endColumn":27},{"ruleId":"986","severity":1,"message":"1189","line":77,"column":10,"nodeType":"988","messageId":"989","endLine":77,"endColumn":20},{"ruleId":"986","severity":1,"message":"1190","line":77,"column":22,"nodeType":"988","messageId":"989","endLine":77,"endColumn":35},{"ruleId":"986","severity":1,"message":"1007","line":78,"column":10,"nodeType":"988","messageId":"989","endLine":78,"endColumn":16},{"ruleId":"986","severity":1,"message":"1055","line":79,"column":10,"nodeType":"988","messageId":"989","endLine":79,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1012","line":110,"column":28,"nodeType":"1013","messageId":"1014","endLine":110,"endColumn":30},{"ruleId":"1011","severity":1,"message":"1012","line":126,"column":12,"nodeType":"1013","messageId":"1014","endLine":126,"endColumn":14},{"ruleId":"1022","severity":1,"message":"1023","line":187,"column":11,"nodeType":"994","endLine":187,"endColumn":14},"no-unused-vars","'filler' is assigned a value but never used.","Identifier","unusedVar","'introImage' is assigned a value but never used.","'howItWorks' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["1204"],"no-negated-in-lhs",["1205"],"'TextInput' is defined but never used.","'Picker' is defined but never used.","'ScrollView' is defined but never used.","'FlatList' is defined but never used.","'nativeTouchData' is defined but never used.","'xIcon' is defined but never used.","'Router' is defined but never used.","'Link' is defined but never used.","'height' is assigned a value but never used.","'brandsDropDownDisplay' is assigned a value but never used.","'setBrandsDropDownDisplay' is assigned a value but never used.","'toggleUserModal' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'login' is assigned a value but never used.","'brands' is assigned a value but never used.","'brandRenderRow' is assigned a value but never used.","no-dupe-keys","Duplicate key 'pointerEvents'.","ObjectExpression","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["1204"],["1205"],"'logo' is defined but never used.","'Navbar' is defined but never used.","'Content' is defined but never used.","no-useless-rename","Import BrowserRouter unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"1206","text":"1207"},["1204"],["1205"],["1204"],["1205"],"'TouchableOpacity' is defined but never used.","'View' is defined but never used.","'Modal' is defined but never used.","'TouchableHighlight' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'props.location.search'. Either include them or remove the dependency array.","ArrayExpression",["1208"],"'Text' is defined but never used.","'Image' is defined but never used.","'Linking' is defined but never used.","'clipOff' is defined but never used.","'boxIcon' is defined but never used.","'detailView' is assigned a value but never used.","'hover' is assigned a value but never used.","'setHover' is assigned a value but never used.","'setMaterialNumber' is assigned a value but never used.","'width' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.location.search'. Either include it or remove the dependency array.",["1209"],"'NavBarFiller' is defined but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["1210"],"React Hook useEffect has a missing dependency: 'data.listCategory'. Either include it or remove the dependency array.",["1211"],"'useEffect' is defined but never used.","Duplicate key 'height'.","'searchIcon' is defined but never used.","'userIcon' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'toggleCartModal' is assigned a value but never used.","'queryString' is assigned a value but never used.","'setBrandData' is assigned a value but never used.","'setDetailView' is assigned a value but never used.","'brandId' is assigned a value but never used.","'setBrandId' is assigned a value but never used.","'subCategory' is assigned a value but never used.","'detailedCategoryData' is assigned a value but never used.","'outerCategory' is assigned a value but never used.","'detailedCategoryDataObject' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'clipOn' is defined but never used.","'brandListData' is assigned a value but never used.","'setBrandListData' is assigned a value but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'setEndPage' is assigned a value but never used.","'onScroll' is assigned a value but never used.","'checkboxClicked' is assigned a value but never used.","'sortMethodSelected' is assigned a value but never used.","no-redeclare","'numbers' is already defined.","redeclared","'filterQ' is already defined.","'colorStrings' is already defined.","'patternStrings' is already defined.",["1212"],"React Hook useEffect has a missing dependency: 'filter'. Either include it or remove the dependency array.",["1213"],"React Hook useEffect has a missing dependency: 'moodboardFilter'. Either include it or remove the dependency array.",["1214"],["1215"],["1216"],"React Hook useEffect has missing dependencies: 'history' and 'props.location.search'. Either include them or remove the dependency array.",["1217"],"Duplicate key 'flexDirection'.","'mem_no' is assigned a value but never used.","'subUse' is assigned a value but never used.","'detailedUseData' is assigned a value but never used.","'outerUse' is assigned a value but never used.","'detailedUseDataObject' is assigned a value but never used.","'fetch' is defined but never used.","'Dimensions' is defined but never used.","'setPageNeighbours' is assigned a value but never used.","'i' is already defined.","'handleMoveLeft' is assigned a value but never used.","'handleMoveRight' is assigned a value but never used.",["1204"],["1205"],"'q' is assigned a value but never used.","'setQ' is assigned a value but never used.","'hoverOne' is assigned a value but never used.","'setHoverOne' is assigned a value but never used.","'hoverTwo' is assigned a value but never used.","'setHoverTwo' is assigned a value but never used.","'refreshClipboard' is assigned a value but never used.","'setRefreshClipboard' is assigned a value but never used.",["1218"],"React Hook useEffect has a missing dependency: 'updateAreaData'. Either include it or remove the dependency array.",["1219"],"'Pagination' is defined but never used.","'textInput' is defined but never used.","'boardBuilding' is assigned a value but never used.","'setBoardBuilding' is assigned a value but never used.","'materialNumberMatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkButtonChecked' and 'props.material_num'. Either include them or remove the dependency array.",["1220"],"'parse' is defined but never used.","'Carousel' is defined but never used.","'chatIcon' is defined but never used.","'moodboardClipBoard' is assigned a value but never used.","'setMoodboardClipBoard' is assigned a value but never used.",["1221"],"no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","React Hook useEffect has missing dependencies: 'checkButtonChecked' and 'props.moodboard_num'. Either include them or remove the dependency array.",["1222"],"'clipBoardData' is assigned a value but never used.","'setClipBoardData' is assigned a value but never used.","'checkButtonChecked' is assigned a value but never used.","'setCheckButtonChecked' is assigned a value but never used.","'inputValue' is assigned a value but never used.","'setInputValue' is assigned a value but never used.","'makeButtonEnable' is assigned a value but never used.","'setMakeButtonEnable' is assigned a value but never used.","'onChange' is assigned a value but never used.","'dateChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.material_data'. Either include it or remove the dependency array.",["1223"],["1204"],["1205"],"'clipBoardInfo' is assigned a value but never used.","'AppleAuth' is defined but never used.","'ImageUploader' is defined but never used.","'passwordPopUp' is assigned a value but never used.","'setRegistrationScreen' is assigned a value but never used.","'pincodeAnswer' is assigned a value but never used.","'setPincodeAnswer' is assigned a value but never used.","'showDuplicateEmailScreen' is assigned a value but never used.","'setShowDuplicateEmailScreen' is assigned a value but never used.","'imageUploaded' is assigned a value but never used.","'picture' is assigned a value but never used.","'onDrop' is assigned a value but never used.","'handleSubmitFile' is assigned a value but never used.","'checkExistMemberFunction' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.userName'. Either include it or remove the dependency array.",["1224"],"'temp' is assigned a value but never used.","'profile' is assigned a value but never used.","'setProfile' is assigned a value but never used.",["1204"],["1205"],"'IntroImg' is defined but never used.","'banner' is assigned a value but never used.","'setBanner' is assigned a value but never used.","'bannerData' is assigned a value but never used.","'setBannerData' is assigned a value but never used.","'catQ' is assigned a value but never used.",["1225"],"'ClipBoard' is defined but never used.","'Font' is defined but never used.","'materialNumber' is assigned a value but never used.","'clipBoardOne' is assigned a value but never used.","'setClipBoardOne' is assigned a value but never used.","Duplicate key 'backgroundColor'.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'setCatQ' is assigned a value but never used.","'memno' is assigned a value but never used.",["1226"],"no-global-assign","no-unsafe-negation",[675,705],"BrowserRouter",{"desc":"1227","fix":"1228"},{"desc":"1229","fix":"1230"},{"desc":"1231","fix":"1232"},{"desc":"1233","fix":"1234"},{"desc":"1229","fix":"1235"},{"desc":"1236","fix":"1237"},{"desc":"1238","fix":"1239"},{"desc":"1240","fix":"1241"},{"desc":"1242","fix":"1243"},{"desc":"1244","fix":"1245"},{"desc":"1229","fix":"1246"},{"desc":"1247","fix":"1248"},{"desc":"1249","fix":"1250"},{"desc":"1229","fix":"1251"},{"desc":"1252","fix":"1253"},{"desc":"1254","fix":"1255"},{"desc":"1256","fix":"1257"},{"desc":"1227","fix":"1258"},{"desc":"1229","fix":"1259"},"Update the dependencies array to be: [data, props.location.search]",{"range":"1260","text":"1261"},"Update the dependencies array to be: [props.location.search]",{"range":"1262","text":"1263"},"Update the dependencies array to be: [data]",{"range":"1264","text":"1265"},"Update the dependencies array to be: [data.listCategory]",{"range":"1266","text":"1267"},{"range":"1268","text":"1263"},"Update the dependencies array to be: [activePage, filter]",{"range":"1269","text":"1270"},"Update the dependencies array to be: [moodboardActivePage, moodboardFilter]",{"range":"1271","text":"1272"},"Update the dependencies array to be: [filter, materialScope]",{"range":"1273","text":"1274"},"Update the dependencies array to be: [filter, sortMethod]",{"range":"1275","text":"1276"},"Update the dependencies array to be: [filter, history, props.location.search]",{"range":"1277","text":"1278"},{"range":"1279","text":"1263"},"Update the dependencies array to be: [lossPercentage, areaCalc, updateAreaData]",{"range":"1280","text":"1281"},"Update the dependencies array to be: [checkButtonChecked, clipBoardData, props.material_num]",{"range":"1282","text":"1283"},{"range":"1284","text":"1263"},"Update the dependencies array to be: [checkButtonChecked, clipBoardData, props.moodboard_num]",{"range":"1285","text":"1286"},"Update the dependencies array to be: [props.material_data]",{"range":"1287","text":"1288"},"Update the dependencies array to be: [props.username, props.userEmail, props.userCompanyName, props.userCompanyWebSite, props.password, props.passwordCheck, checked, props.userName]",{"range":"1289","text":"1290"},{"range":"1291","text":"1261"},{"range":"1292","text":"1263"},[685,687],"[data, props.location.search]",[3178,3180],"[props.location.search]",[1836,1838],"[data]",[3545,3547],"[data.listCategory]",[12758,12760],[12905,12917],"[activePage, filter]",[13125,13146],"[moodboardActivePage, moodboardFilter]",[13276,13291],"[filter, materialScope]",[13415,13427],"[filter, sortMethod]",[14655,14663],"[filter, history, props.location.search]",[3950,3952],[4005,4030],"[lossPercentage, areaCalc, updateAreaData]",[7682,7697],"[checkButtonChecked, clipBoardData, props.material_num]",[2876,2878],[6961,6976],"[checkButtonChecked, clipBoardData, props.moodboard_num]",[6014,6016],"[props.material_data]",[10561,10722],"[props.username, props.userEmail, props.userCompanyName, props.userCompanyWebSite, props.password, props.passwordCheck, checked, props.userName]",[791,793],[1987,1989]]